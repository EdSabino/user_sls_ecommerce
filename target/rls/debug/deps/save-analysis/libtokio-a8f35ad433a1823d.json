{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24","program":"C:\\Users\\Eduardo\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio","--edition=2018","C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"fnv\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"slab\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","-C","metadata=a8f35ad433a1823d","-C","extra-filename=-a8f35ad433a1823d","--out-dir","c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libbytes-2982f0a771c54532.rmeta","--extern","fnv=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libfnv-589bd852cc1c0437.rmeta","--extern","iovec=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libiovec-1e662f389f8b8258.rmeta","--extern","lazy_static=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\liblazy_static-2613a078ddae3c7c.rmeta","--extern","memchr=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libmemchr-8fac34254c2b0a27.rmeta","--extern","mio=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libmio-60c36f631fca1c5c.rmeta","--extern","pin_project_lite=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libpin_project_lite-d4e9458af696d04d.rmeta","--extern","slab=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libslab-27f8cc1d5ed003a6.rmeta","--extern","tokio_macros=c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\tokio_macros-5f05f5cda1e977be.dll","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Eduardo\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Eduardo\\Documents\\ecommerce\\users\\target\\rls\\debug\\deps\\libtokio-a8f35ad433a1823d.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[6925046450877484747,6717422437384929922]},"crate_root":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src","external_crates":[{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[9692112137008559588,2338260418742546759]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","num":2,"id":{"name":"core","disambiguator":[6793375821364100956,1977476470487761730]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12127507174405006601,16904355616426790179]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11442534744397595723,17249706061084217292]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8290285128153629620,5457655969661569285]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[1331056181559175587,10367469256582268827]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17539204049578980739,14279095908370612950]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11416202000959860181,16002808916448349423]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15996931893539602890,12021989227085004909]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11006369346947015869,12629203874040878905]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9324299596992278055,4716464803590583331]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[17286888103038733980,5619676640534054088]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\try_join.rs","num":13,"id":{"name":"pin_project_lite","disambiguator":[17420959830897378744,2174509612588833899]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","num":14,"id":{"name":"bytes","disambiguator":[5231650045178452210,16364940968504677813]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":15,"id":{"name":"mio","disambiguator":[14585718541280500077,5188584051950053085]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":16,"id":{"name":"net2","disambiguator":[6035800976981505715,13982880109384406258]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":17,"id":{"name":"winapi","disambiguator":[11167735428914363575,12300766417278645855]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":18,"id":{"name":"cfg_if","disambiguator":[11351533848344397580,13003978539646218076]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","num":19,"id":{"name":"iovec","disambiguator":[11116196245836750811,3959600654787585780]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","num":20,"id":{"name":"slab","disambiguator":[1389311406187517375,4452820958778312141]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":21,"id":{"name":"miow","disambiguator":[12726806840041343406,5596885548429112186]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":22,"id":{"name":"kernel32","disambiguator":[5113403406644508363,2807237714592733552]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":23,"id":{"name":"winapi","disambiguator":[7794612664710618139,9532289121842870543]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":24,"id":{"name":"ws2_32","disambiguator":[5465185372646770749,15489072100117093364]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\platform.rs","num":25,"id":{"name":"log","disambiguator":[16047306722683531631,14145667225999430730]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","num":26,"id":{"name":"fnv","disambiguator":[17572901879826801722,8749517351873487044]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","num":27,"id":{"name":"tokio_macros","disambiguator":[15025107253437904407,4561949916582685877]}},{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_until.rs","num":28,"id":{"name":"memchr","disambiguator":[16974375841084785116,6134867245560415770]}}],"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":30907,"byte_end":30917,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":30919,"byte_end":30926,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":30954,"byte_end":30966,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":8961},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":31276},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":33787},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2667},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":6988},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2665},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7065},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8392},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8342},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":7420},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":7380},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463051,"byte_end":8463059,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463089,"byte_end":8463097,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463099,"byte_end":8463108,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463151,"byte_end":8463164,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463166,"byte_end":8463180,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463182,"byte_end":8463194,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2610}},{"kind":"Use","ref_id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8463182,"byte_end":8463194,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2757}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":8523378,"byte_end":8523386,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2900}},{"kind":"Use","ref_id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":8523388,"byte_end":8523400,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2900}},{"kind":"Use","ref_id":{"krate":0,"index":3038},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":8523388,"byte_end":8523400,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3022}},{"kind":"Use","ref_id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":8523402,"byte_end":8523410,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2900}},{"kind":"Use","ref_id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627276,"byte_end":8627283,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627285,"byte_end":8627302,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675772,"byte_end":8675779,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4145},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675781,"byte_end":8675789,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675791,"byte_end":8675797,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675875,"byte_end":8675892,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675894,"byte_end":8675911,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675913,"byte_end":8675928,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":4050}},{"kind":"Use","ref_id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627527,"byte_end":8627532,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":4486},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627534,"byte_end":8627544,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627546,"byte_end":8627558,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":4490},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627560,"byte_end":8627575,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627615,"byte_end":8627621,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627758,"byte_end":8627767,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5494},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627769,"byte_end":8627784,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627786,"byte_end":8627806,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627847,"byte_end":8627853,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627855,"byte_end":8627870,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":5028},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627872,"byte_end":8627888,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":3854}},{"kind":"Use","ref_id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909667,"byte_end":8909676,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":5566}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909678,"byte_end":8909688,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":5566}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909726,"byte_end":8909731,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":5566}},{"kind":"Use","ref_id":{"krate":0,"index":5585},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909776,"byte_end":8909785,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":5566}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6079},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918089,"byte_end":8918099,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918129,"byte_end":8918138,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918140,"byte_end":8918151,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918153,"byte_end":8918158,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918212,"byte_end":8918217,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6200},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918256,"byte_end":8918263,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918299,"byte_end":8918307,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918309,"byte_end":8918320,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6223},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918322,"byte_end":8918330,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5966},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918380,"byte_end":8918387,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918389,"byte_end":8918399,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918401,"byte_end":8918408,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918410,"byte_end":8918417,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":2,"index":33657},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918603,"byte_end":8918611,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":5593}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\mod.rs","byte_start":180800,"byte_end":180812,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":765}},{"kind":"Use","ref_id":{"krate":27,"index":45},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14880,"byte_end":14911,"line_start":404,"line_end":404,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":41},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":15536,"byte_end":15546,"line_start":421,"line_end":421,"column_start":35,"column_end":45},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":44},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":15590,"byte_end":15600,"line_start":422,"line_end":422,"column_start":35,"column_end":45},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":313},{"krate":0,"index":378},{"krate":0,"index":514},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":746},{"krate":0,"index":3854},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5593},{"krate":0,"index":765},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\mod.rs","byte_start":15903,"byte_end":15923,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\support.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":904},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":991},{"krate":0,"index":1087},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1174},{"krate":0,"index":1210},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8262978,"byte_end":8262989,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265235,"byte_end":8265238,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264813,"byte_end":8264881,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264886,"byte_end":8264889,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264894,"byte_end":8264906,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264911,"byte_end":8264914,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264919,"byte_end":8264979,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264984,"byte_end":8264987,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264992,"byte_end":8265062,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265067,"byte_end":8265140,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265145,"byte_end":8265223,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266442,"byte_end":8266456,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265338,"byte_end":8265432,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265437,"byte_end":8265531,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265536,"byte_end":8265631,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265636,"byte_end":8265730,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265735,"byte_end":8265763,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265768,"byte_end":8265771,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265776,"byte_end":8265813,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265818,"byte_end":8265821,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265826,"byte_end":8265837,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265842,"byte_end":8265859,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265864,"byte_end":8265895,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265900,"byte_end":8265945,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8265950,"byte_end":8266004,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266009,"byte_end":8266061,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266066,"byte_end":8266076,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266081,"byte_end":8266088,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266093,"byte_end":8266096,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266101,"byte_end":8266113,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266118,"byte_end":8266121,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266126,"byte_end":8266186,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266191,"byte_end":8266194,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266199,"byte_end":8266269,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266274,"byte_end":8266347,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266352,"byte_end":8266430,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266934,"byte_end":8266941,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266820,"byte_end":8266894,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8266899,"byte_end":8266922,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267117,"byte_end":8267124,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267002,"byte_end":8267077,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267082,"byte_end":8267105,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267660,"byte_end":8267670,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267193,"byte_end":8267242,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267247,"byte_end":8267250,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267255,"byte_end":8267329,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267334,"byte_end":8267409,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267414,"byte_end":8267417,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267422,"byte_end":8267497,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267502,"byte_end":8267578,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267583,"byte_end":8267648,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268827,"byte_end":8268842,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267818,"byte_end":8267869,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267874,"byte_end":8267877,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267882,"byte_end":8267955,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8267960,"byte_end":8268031,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268036,"byte_end":8268111,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268116,"byte_end":8268123,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268128,"byte_end":8268131,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268136,"byte_end":8268212,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268217,"byte_end":8268283,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268288,"byte_end":8268291,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268296,"byte_end":8268369,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268374,"byte_end":8268418,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268423,"byte_end":8268426,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268431,"byte_end":8268486,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268491,"byte_end":8268494,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268499,"byte_end":8268511,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268516,"byte_end":8268519,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268524,"byte_end":8268552,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268557,"byte_end":8268560,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268565,"byte_end":8268597,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268602,"byte_end":8268646,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268651,"byte_end":8268654,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268659,"byte_end":8268672,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268677,"byte_end":8268680,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268685,"byte_end":8268758,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8268763,"byte_end":8268815,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269818,"byte_end":8269834,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269219,"byte_end":8269295,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269300,"byte_end":8269364,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269369,"byte_end":8269372,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269377,"byte_end":8269439,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269444,"byte_end":8269515,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269520,"byte_end":8269523,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269528,"byte_end":8269603,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269608,"byte_end":8269640,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269645,"byte_end":8269648,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269653,"byte_end":8269665,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269670,"byte_end":8269673,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269678,"byte_end":8269706,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269711,"byte_end":8269714,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269719,"byte_end":8269757,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8269762,"byte_end":8269806,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271274,"byte_end":8271290,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270359,"byte_end":8270411,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270416,"byte_end":8270419,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270424,"byte_end":8270493,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270498,"byte_end":8270541,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270546,"byte_end":8270549,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270554,"byte_end":8270622,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270627,"byte_end":8270702,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270707,"byte_end":8270710,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270715,"byte_end":8270789,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270794,"byte_end":8270839,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270844,"byte_end":8270847,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270852,"byte_end":8270909,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270914,"byte_end":8270917,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270922,"byte_end":8270934,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270939,"byte_end":8270942,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270947,"byte_end":8270975,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270980,"byte_end":8270983,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8270988,"byte_end":8271045,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271050,"byte_end":8271094,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271099,"byte_end":8271102,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271107,"byte_end":8271120,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271125,"byte_end":8271128,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271133,"byte_end":8271206,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271211,"byte_end":8271262,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272139,"byte_end":8272156,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271566,"byte_end":8271643,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271648,"byte_end":8271713,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271718,"byte_end":8271721,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271726,"byte_end":8271802,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271807,"byte_end":8271852,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271857,"byte_end":8271860,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271865,"byte_end":8271940,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8271945,"byte_end":8272019,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272024,"byte_end":8272027,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272032,"byte_end":8272044,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272049,"byte_end":8272052,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272057,"byte_end":8272127,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276398,"byte_end":8276410,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277102,"byte_end":8277105,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276530,"byte_end":8276586,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276591,"byte_end":8276594,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276599,"byte_end":8276611,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276616,"byte_end":8276619,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276624,"byte_end":8276676,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276681,"byte_end":8276740,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276745,"byte_end":8276748,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276753,"byte_end":8276756,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276761,"byte_end":8276773,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276778,"byte_end":8276781,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276786,"byte_end":8276846,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276851,"byte_end":8276854,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276859,"byte_end":8276929,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276934,"byte_end":8277007,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277012,"byte_end":8277090,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278508,"byte_end":8278522,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277252,"byte_end":8277343,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277348,"byte_end":8277442,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277447,"byte_end":8277541,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277546,"byte_end":8277641,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277646,"byte_end":8277667,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277672,"byte_end":8277675,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277680,"byte_end":8277717,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277722,"byte_end":8277725,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277730,"byte_end":8277741,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277746,"byte_end":8277763,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277768,"byte_end":8277799,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277804,"byte_end":8277849,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277854,"byte_end":8277908,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277913,"byte_end":8277965,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277970,"byte_end":8277980,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277985,"byte_end":8277992,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8277997,"byte_end":8278000,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278005,"byte_end":8278017,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278022,"byte_end":8278025,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278030,"byte_end":8278082,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278087,"byte_end":8278146,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278151,"byte_end":8278154,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278159,"byte_end":8278162,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278167,"byte_end":8278179,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278184,"byte_end":8278187,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278192,"byte_end":8278252,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278257,"byte_end":8278260,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278265,"byte_end":8278335,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278340,"byte_end":8278413,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278418,"byte_end":8278496,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279757,"byte_end":8279767,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8278981,"byte_end":8279053,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279058,"byte_end":8279061,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279066,"byte_end":8279142,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279147,"byte_end":8279175,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279180,"byte_end":8279183,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279188,"byte_end":8279263,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279268,"byte_end":8279344,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279349,"byte_end":8279414,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279419,"byte_end":8279422,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279427,"byte_end":8279439,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279444,"byte_end":8279447,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279452,"byte_end":8279524,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279529,"byte_end":8279605,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279610,"byte_end":8279683,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279688,"byte_end":8279691,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8279696,"byte_end":8279745,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281318,"byte_end":8281333,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280070,"byte_end":8280135,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280140,"byte_end":8280143,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280148,"byte_end":8280222,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280227,"byte_end":8280300,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280305,"byte_end":8280355,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280360,"byte_end":8280363,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280368,"byte_end":8280441,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280446,"byte_end":8280521,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280526,"byte_end":8280562,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280567,"byte_end":8280570,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280575,"byte_end":8280593,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280598,"byte_end":8280601,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280606,"byte_end":8280651,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280656,"byte_end":8280659,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280664,"byte_end":8280739,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280744,"byte_end":8280805,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280810,"byte_end":8280813,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280818,"byte_end":8280893,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280898,"byte_end":8280945,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280950,"byte_end":8280953,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8280958,"byte_end":8281034,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281039,"byte_end":8281112,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281117,"byte_end":8281120,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281125,"byte_end":8281198,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281203,"byte_end":8281206,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281211,"byte_end":8281223,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281228,"byte_end":8281231,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281236,"byte_end":8281306,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282174,"byte_end":8282189,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281813,"byte_end":8281858,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281863,"byte_end":8281866,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281871,"byte_end":8281943,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8281948,"byte_end":8282023,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282028,"byte_end":8282096,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282101,"byte_end":8282104,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282109,"byte_end":8282162,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283543,"byte_end":8283559,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282291,"byte_end":8282357,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282362,"byte_end":8282365,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282370,"byte_end":8282445,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282450,"byte_end":8282524,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282529,"byte_end":8282579,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282584,"byte_end":8282587,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282592,"byte_end":8282665,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282670,"byte_end":8282745,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282750,"byte_end":8282786,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282791,"byte_end":8282794,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282799,"byte_end":8282817,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282822,"byte_end":8282825,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282830,"byte_end":8282875,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282880,"byte_end":8282883,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282888,"byte_end":8282963,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8282968,"byte_end":8283029,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283034,"byte_end":8283037,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283042,"byte_end":8283117,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283122,"byte_end":8283170,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283175,"byte_end":8283178,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283183,"byte_end":8283259,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283264,"byte_end":8283337,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283342,"byte_end":8283345,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283350,"byte_end":8283423,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283428,"byte_end":8283431,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283436,"byte_end":8283448,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283453,"byte_end":8283456,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8283461,"byte_end":8283531,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284406,"byte_end":8284422,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284040,"byte_end":8284087,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284092,"byte_end":8284095,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284100,"byte_end":8284173,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284178,"byte_end":8284253,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284258,"byte_end":8284326,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284331,"byte_end":8284334,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8284339,"byte_end":8284394,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8288285,"byte_end":8288293,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1324}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8288422,"byte_end":8288431,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1327}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8288745,"byte_end":8288750,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289376,"byte_end":8289386,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289273,"byte_end":8289348,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289353,"byte_end":8289364,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289793,"byte_end":8289800,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289469,"byte_end":8289518,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289523,"byte_end":8289526,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289531,"byte_end":8289543,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289548,"byte_end":8289551,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289556,"byte_end":8289630,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289635,"byte_end":8289685,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289690,"byte_end":8289754,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289759,"byte_end":8289781,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290301,"byte_end":8290311,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290199,"byte_end":8290273,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290278,"byte_end":8290289,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\seek.rs","byte_start":8293548,"byte_end":8293552,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\seek.rs","byte_start":8293385,"byte_end":8293451,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\seek.rs","byte_start":8293469,"byte_end":8293536,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8296856,"byte_end":8296871,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2062}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8299571,"byte_end":8299581,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8302472,"byte_end":8302481,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8303881,"byte_end":8303886,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8305736,"byte_end":8305741,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8307920,"byte_end":8307932,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2072},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8309052,"byte_end":8309057,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8311886,"byte_end":8311890,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8314192,"byte_end":8314200,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8316097,"byte_end":8316107,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8317544,"byte_end":8317551,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8318840,"byte_end":8318847,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8320178,"byte_end":8320186,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8321526,"byte_end":8321534,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8322815,"byte_end":8322823,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8324118,"byte_end":8324126,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8325489,"byte_end":8325497,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8326790,"byte_end":8326798,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8328258,"byte_end":8328267,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8329661,"byte_end":8329670,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8331017,"byte_end":8331028,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8332389,"byte_end":8332400,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8333701,"byte_end":8333712,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8335024,"byte_end":8335035,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8336416,"byte_end":8336427,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8337721,"byte_end":8337732,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8339210,"byte_end":8339222,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8340616,"byte_end":8340628,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8342287,"byte_end":8342298,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8343853,"byte_end":8343867,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8345159,"byte_end":8345163,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346205,"byte_end":8346217,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1410}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345430,"byte_end":8345503,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345504,"byte_end":8345507,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345508,"byte_end":8345579,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345580,"byte_end":8345583,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345584,"byte_end":8345598,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345599,"byte_end":8345602,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345603,"byte_end":8345610,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345611,"byte_end":8345647,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345648,"byte_end":8345674,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345675,"byte_end":8345678,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345679,"byte_end":8345697,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345698,"byte_end":8345737,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345738,"byte_end":8345787,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345788,"byte_end":8345791,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345792,"byte_end":8345845,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345846,"byte_end":8345893,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345894,"byte_end":8345897,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345898,"byte_end":8345927,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345928,"byte_end":8345973,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8345974,"byte_end":8345999,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346000,"byte_end":8346032,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346033,"byte_end":8346036,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346037,"byte_end":8346051,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346052,"byte_end":8346057,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346058,"byte_end":8346065,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346066,"byte_end":8346069,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346070,"byte_end":8346129,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346130,"byte_end":8346133,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346134,"byte_end":8346162,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346163,"byte_end":8346194,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346934,"byte_end":8346938,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1409},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346235,"byte_end":8346304,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346309,"byte_end":8346362,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346367,"byte_end":8346370,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346375,"byte_end":8346452,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346457,"byte_end":8346479,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346484,"byte_end":8346487,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346492,"byte_end":8346506,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346511,"byte_end":8346514,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346519,"byte_end":8346532,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346537,"byte_end":8346561,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346566,"byte_end":8346592,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346597,"byte_end":8346600,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346605,"byte_end":8346631,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346636,"byte_end":8346639,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346644,"byte_end":8346689,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346694,"byte_end":8346742,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346747,"byte_end":8346788,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346793,"byte_end":8346796,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346801,"byte_end":8346838,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346843,"byte_end":8346885,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346890,"byte_end":8346902,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346907,"byte_end":8346914,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346919,"byte_end":8346926,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2116},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8349141,"byte_end":8349154,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2124},{"krate":0,"index":2125}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8350996,"byte_end":8351001,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8353803,"byte_end":8353812,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8355154,"byte_end":8355163,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8356563,"byte_end":8356571,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8357832,"byte_end":8357840,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8359155,"byte_end":8359164,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8360477,"byte_end":8360486,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8361826,"byte_end":8361835,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8363170,"byte_end":8363179,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8364556,"byte_end":8364565,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8365952,"byte_end":8365961,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8367416,"byte_end":8367426,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8368816,"byte_end":8368826,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8370158,"byte_end":8370170,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8371497,"byte_end":8371509,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8372863,"byte_end":8372875,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8374224,"byte_end":8374236,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8375627,"byte_end":8375639,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8377040,"byte_end":8377052,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8378519,"byte_end":8378532,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8379934,"byte_end":8379947,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8380967,"byte_end":8380972,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8382262,"byte_end":8382270,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8419},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8383679,"byte_end":8383688,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384024,"byte_end":8384027,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8383882,"byte_end":8383974,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8383979,"byte_end":8384012,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384189,"byte_end":8384202,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384112,"byte_end":8384177,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384878,"byte_end":8384885,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384741,"byte_end":8384787,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384792,"byte_end":8384795,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384800,"byte_end":8384866,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385077,"byte_end":8385084,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384932,"byte_end":8384986,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384991,"byte_end":8384994,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8384999,"byte_end":8385065,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385295,"byte_end":8385306,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385143,"byte_end":8385204,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385209,"byte_end":8385212,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385217,"byte_end":8385283,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385537,"byte_end":8385547,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385386,"byte_end":8385449,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385454,"byte_end":8385457,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385462,"byte_end":8385525,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385751,"byte_end":8385757,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385591,"byte_end":8385647,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385652,"byte_end":8385655,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8385660,"byte_end":8385739,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":8392},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390003,"byte_end":8390012,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":8394}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390291,"byte_end":8390294,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390137,"byte_end":8390194,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390199,"byte_end":8390202,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390207,"byte_end":8390279,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390626,"byte_end":8390639,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390426,"byte_end":8390511,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390516,"byte_end":8390529,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390534,"byte_end":8390537,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390542,"byte_end":8390614,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391096,"byte_end":8391103,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390951,"byte_end":8391001,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391006,"byte_end":8391009,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391014,"byte_end":8391084,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391323,"byte_end":8391330,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391170,"byte_end":8391228,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391233,"byte_end":8391236,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391241,"byte_end":8391311,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391565,"byte_end":8391576,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391405,"byte_end":8391470,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391475,"byte_end":8391478,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391483,"byte_end":8391553,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391840,"byte_end":8391850,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391685,"byte_end":8391752,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391757,"byte_end":8391760,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391765,"byte_end":8391828,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8342},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395669,"byte_end":8395678,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":8344},{"krate":0,"index":8345},{"krate":0,"index":8346}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395986,"byte_end":8395989,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395844,"byte_end":8395936,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395941,"byte_end":8395974,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8396151,"byte_end":8396164,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8396074,"byte_end":8396139,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397246,"byte_end":8397253,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397188,"byte_end":8397234,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397444,"byte_end":8397451,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397300,"byte_end":8397354,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397359,"byte_end":8397362,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397367,"byte_end":8397432,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397661,"byte_end":8397672,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397510,"byte_end":8397571,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397576,"byte_end":8397579,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397584,"byte_end":8397649,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397903,"byte_end":8397913,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397752,"byte_end":8397815,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397820,"byte_end":8397823,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397828,"byte_end":8397891,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8398025,"byte_end":8398031,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8397957,"byte_end":8398013,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8293},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8400664,"byte_end":8400669,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8296},{"krate":0,"index":8297},{"krate":0,"index":8298}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.11\\src\\lib.rs","byte_start":8025526,"byte_end":8025535,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401110,"byte_end":8401117,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401036,"byte_end":8401098,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401449,"byte_end":8401456,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401186,"byte_end":8401256,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401261,"byte_end":8401264,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401269,"byte_end":8401342,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401347,"byte_end":8401420,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401425,"byte_end":8401437,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401815,"byte_end":8401826,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401545,"byte_end":8401622,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401627,"byte_end":8401630,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401635,"byte_end":8401708,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401713,"byte_end":8401786,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401791,"byte_end":8401803,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8402023,"byte_end":8402033,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8401955,"byte_end":8402011,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2166},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\copy.rs","byte_start":8404609,"byte_end":8404613,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\copy.rs","byte_start":8404526,"byte_end":8404593,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\copy.rs","byte_start":8405878,"byte_end":8405882,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8408639,"byte_end":8408644,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2183}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2184},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409323,"byte_end":8409328,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\flush.rs","byte_start":8410545,"byte_end":8410550,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2188}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8254},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8411666,"byte_end":8411671,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":8256},{"krate":0,"index":8257},{"krate":0,"index":8258},{"krate":0,"index":8259}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.11\\src\\lib.rs","byte_start":8025526,"byte_end":8025535,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412518,"byte_end":8412527,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412028,"byte_end":8412068,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412073,"byte_end":8412076,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412081,"byte_end":8412095,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412100,"byte_end":8412103,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412108,"byte_end":8412115,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412120,"byte_end":8412154,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412159,"byte_end":8412194,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412199,"byte_end":8412202,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412207,"byte_end":8412290,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412295,"byte_end":8412335,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412340,"byte_end":8412343,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412348,"byte_end":8412401,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412406,"byte_end":8412449,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412454,"byte_end":8412459,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412464,"byte_end":8412476,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412481,"byte_end":8412488,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412493,"byte_end":8412500,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412754,"byte_end":8412761,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412687,"byte_end":8412742,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412880,"byte_end":8412887,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412821,"byte_end":8412868,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413174,"byte_end":8413184,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8412939,"byte_end":8413000,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413005,"byte_end":8413008,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413013,"byte_end":8413076,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413081,"byte_end":8413162,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413303,"byte_end":8413317,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415446,"byte_end":8415458,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414658,"byte_end":8414717,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414718,"byte_end":8414721,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414722,"byte_end":8414801,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414802,"byte_end":8414878,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414879,"byte_end":8414941,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414942,"byte_end":8414945,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414946,"byte_end":8414959,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414960,"byte_end":8414963,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414964,"byte_end":8414971,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8414972,"byte_end":8415016,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415017,"byte_end":8415068,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415069,"byte_end":8415126,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415127,"byte_end":8415130,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415131,"byte_end":8415168,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415169,"byte_end":8415172,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415173,"byte_end":8415200,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415201,"byte_end":8415240,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415241,"byte_end":8415271,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415272,"byte_end":8415275,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415276,"byte_end":8415313,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415314,"byte_end":8415317,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415318,"byte_end":8415357,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415358,"byte_end":8415388,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415389,"byte_end":8415401,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415402,"byte_end":8415409,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8415410,"byte_end":8415417,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8416755,"byte_end":8416761,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8416521,"byte_end":8416604,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8416605,"byte_end":8416608,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8416609,"byte_end":8416683,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8416684,"byte_end":8416747,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2206},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read.rs","byte_start":8421690,"byte_end":8421694,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read.rs","byte_start":8421607,"byte_end":8421674,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_buf.rs","byte_start":8422757,"byte_end":8422764,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_buf.rs","byte_start":8422674,"byte_end":8422741,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2226},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_exact.rs","byte_start":8424013,"byte_end":8424022,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_exact.rs","byte_start":8423930,"byte_end":8423997,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8212},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428346,"byte_end":8428352,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":8214}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8179},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428368,"byte_end":8428374,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":8181}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8134},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428390,"byte_end":8428397,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428422,"byte_end":8428429,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092},{"krate":0,"index":8094}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8044},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428454,"byte_end":8428461,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":8046},{"krate":0,"index":8047},{"krate":0,"index":8049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7999},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428486,"byte_end":8428494,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8004}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7954},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428522,"byte_end":8428529,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":7956},{"krate":0,"index":7957},{"krate":0,"index":7959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428554,"byte_end":8428561,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":7911},{"krate":0,"index":7912},{"krate":0,"index":7914}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7864},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428586,"byte_end":8428593,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7819},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428618,"byte_end":8428626,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":7821},{"krate":0,"index":7822},{"krate":0,"index":7824}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7774},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428654,"byte_end":8428663,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":7776},{"krate":0,"index":7777},{"krate":0,"index":7779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428691,"byte_end":8428700,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7734}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7684},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428728,"byte_end":8428737,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":7686},{"krate":0,"index":7687},{"krate":0,"index":7689}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7639},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428765,"byte_end":8428775,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":7641},{"krate":0,"index":7642},{"krate":0,"index":7644}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428806,"byte_end":8428815,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":7596},{"krate":0,"index":7597},{"krate":0,"index":7599}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7549},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428843,"byte_end":8428852,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7504},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428880,"byte_end":8428889,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7459},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_int.rs","byte_start":8428917,"byte_end":8428927,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_line.rs","byte_start":8429377,"byte_end":8429385,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_line.rs","byte_start":8429294,"byte_end":8429361,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_end.rs","byte_start":8433340,"byte_end":8433349,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_end.rs","byte_start":8433210,"byte_end":8433277,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_string.rs","byte_start":8439484,"byte_end":8439496,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_string.rs","byte_start":8439401,"byte_end":8439468,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_until.rs","byte_start":8442261,"byte_end":8442270,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_until.rs","byte_start":8442178,"byte_end":8442245,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\repeat.rs","byte_start":8444716,"byte_end":8444722,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2425}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\repeat.rs","byte_start":8445408,"byte_end":8445414,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\shutdown.rs","byte_start":8446363,"byte_end":8446371,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2431}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8447543,"byte_end":8447547,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2437}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2438},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8448388,"byte_end":8448392,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7420},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8449637,"byte_end":8449642,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7423},{"krate":0,"index":7424},{"krate":0,"index":7425}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.11\\src\\lib.rs","byte_start":8025526,"byte_end":8025535,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450503,"byte_end":8450515,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8449991,"byte_end":8450034,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450039,"byte_end":8450042,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450047,"byte_end":8450061,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450066,"byte_end":8450069,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450074,"byte_end":8450081,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450086,"byte_end":8450120,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450125,"byte_end":8450160,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450165,"byte_end":8450168,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450173,"byte_end":8450256,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450261,"byte_end":8450308,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450313,"byte_end":8450316,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450321,"byte_end":8450383,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450388,"byte_end":8450434,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450439,"byte_end":8450444,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450449,"byte_end":8450461,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450466,"byte_end":8450473,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450478,"byte_end":8450485,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450753,"byte_end":8450770,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7380},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452365,"byte_end":8452369,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7382},{"krate":0,"index":7383}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.11\\src\\lib.rs","byte_start":8025526,"byte_end":8025535,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452959,"byte_end":8452964,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452656,"byte_end":8452709,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452714,"byte_end":8452760,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452765,"byte_end":8452768,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452773,"byte_end":8452783,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452788,"byte_end":8452791,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452796,"byte_end":8452873,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452878,"byte_end":8452947,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453283,"byte_end":8453292,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453012,"byte_end":8453083,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453088,"byte_end":8453162,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453167,"byte_end":8453242,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453247,"byte_end":8453271,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453415,"byte_end":8453422,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453357,"byte_end":8453403,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453714,"byte_end":8453721,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453469,"byte_end":8453523,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453528,"byte_end":8453531,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453536,"byte_end":8453609,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453614,"byte_end":8453686,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453691,"byte_end":8453702,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454032,"byte_end":8454043,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453780,"byte_end":8453841,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453846,"byte_end":8453849,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453854,"byte_end":8453927,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8453932,"byte_end":8454004,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454009,"byte_end":8454020,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454189,"byte_end":8454199,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454123,"byte_end":8454177,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write.rs","byte_start":8456129,"byte_end":8456134,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2442},{"krate":0,"index":2443}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write.rs","byte_start":8456046,"byte_end":8456113,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_all.rs","byte_start":8457030,"byte_end":8457038,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_all.rs","byte_start":8456947,"byte_end":8457014,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_buf.rs","byte_start":8458421,"byte_end":8458429,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_buf.rs","byte_start":8458338,"byte_end":8458405,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7334},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462310,"byte_end":8462317,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":7336},{"krate":0,"index":7337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462333,"byte_end":8462340,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":7299},{"krate":0,"index":7300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7252},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462356,"byte_end":8462364,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7207},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462389,"byte_end":8462397,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7162},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462422,"byte_end":8462430,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":7164},{"krate":0,"index":7165},{"krate":0,"index":7167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7117},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462455,"byte_end":8462464,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":7119},{"krate":0,"index":7120},{"krate":0,"index":7122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7072},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462492,"byte_end":8462500,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":7075},{"krate":0,"index":7077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7027},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462525,"byte_end":8462533,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":7029},{"krate":0,"index":7030},{"krate":0,"index":7032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462558,"byte_end":8462566,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6987}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462591,"byte_end":8462600,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6892},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462628,"byte_end":8462638,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":6894},{"krate":0,"index":6895},{"krate":0,"index":6897}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6847},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462666,"byte_end":8462676,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6802},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462704,"byte_end":8462714,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6757},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462742,"byte_end":8462753,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6712},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462784,"byte_end":8462794,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6717}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6667},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462822,"byte_end":8462832,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6672}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6622},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462860,"byte_end":8462870,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6627}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6577},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_int.rs","byte_start":8462898,"byte_end":8462909,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6582}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":377},{"krate":0,"index":2610},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2900},{"krate":0,"index":3024}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":9536},{"krate":0,"index":2758},{"krate":0,"index":2858}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\mod.rs","byte_start":8462932,"byte_end":8462953,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465553,"byte_end":8465564,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2862}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467533,"byte_end":8467537,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465647,"byte_end":8465723,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465728,"byte_end":8465731,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465736,"byte_end":8465797,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465802,"byte_end":8465805,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465810,"byte_end":8465885,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465890,"byte_end":8465966,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465971,"byte_end":8465982,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465987,"byte_end":8465990,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465995,"byte_end":8466070,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466075,"byte_end":8466149,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466154,"byte_end":8466231,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466236,"byte_end":8466239,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466244,"byte_end":8466320,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466325,"byte_end":8466398,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466403,"byte_end":8466476,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466481,"byte_end":8466533,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466538,"byte_end":8466541,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466546,"byte_end":8466609,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466614,"byte_end":8466617,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466622,"byte_end":8466676,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466681,"byte_end":8466684,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466689,"byte_end":8466703,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466708,"byte_end":8466711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466716,"byte_end":8466729,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466734,"byte_end":8466766,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466771,"byte_end":8466774,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466779,"byte_end":8466795,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466800,"byte_end":8466803,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466808,"byte_end":8466826,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466831,"byte_end":8466870,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466875,"byte_end":8466941,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466946,"byte_end":8466949,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466954,"byte_end":8466981,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466986,"byte_end":8466989,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8466994,"byte_end":8467021,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467026,"byte_end":8467040,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467045,"byte_end":8467050,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467055,"byte_end":8467062,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467067,"byte_end":8467070,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467075,"byte_end":8467105,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467110,"byte_end":8467113,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467118,"byte_end":8467131,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467136,"byte_end":8467168,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467173,"byte_end":8467200,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467205,"byte_end":8467208,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467213,"byte_end":8467229,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467234,"byte_end":8467237,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467242,"byte_end":8467260,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467265,"byte_end":8467304,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467309,"byte_end":8467394,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467399,"byte_end":8467402,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467407,"byte_end":8467434,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467439,"byte_end":8467442,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467447,"byte_end":8467474,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467479,"byte_end":8467493,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467498,"byte_end":8467503,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8467508,"byte_end":8467515,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469109,"byte_end":8469115,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468250,"byte_end":8468307,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468312,"byte_end":8468315,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468320,"byte_end":8468395,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468400,"byte_end":8468470,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468475,"byte_end":8468504,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468509,"byte_end":8468512,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468517,"byte_end":8468564,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468569,"byte_end":8468572,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468577,"byte_end":8468591,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468596,"byte_end":8468599,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468604,"byte_end":8468617,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468622,"byte_end":8468654,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468659,"byte_end":8468662,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468667,"byte_end":8468683,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468688,"byte_end":8468691,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468696,"byte_end":8468714,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468719,"byte_end":8468758,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468763,"byte_end":8468833,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468838,"byte_end":8468841,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468846,"byte_end":8468885,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468890,"byte_end":8468960,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8468965,"byte_end":8469028,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469033,"byte_end":8469042,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469047,"byte_end":8469050,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469055,"byte_end":8469069,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469074,"byte_end":8469079,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469084,"byte_end":8469091,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469442,"byte_end":8469453,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469228,"byte_end":8469291,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469296,"byte_end":8469299,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469304,"byte_end":8469376,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8469381,"byte_end":8469430,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472315,"byte_end":8472323,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470300,"byte_end":8470372,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470377,"byte_end":8470380,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470385,"byte_end":8470455,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470460,"byte_end":8470536,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470541,"byte_end":8470585,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470590,"byte_end":8470593,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470598,"byte_end":8470673,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470678,"byte_end":8470754,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470759,"byte_end":8470824,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470829,"byte_end":8470884,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470889,"byte_end":8470892,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470897,"byte_end":8470968,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8470973,"byte_end":8471048,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471053,"byte_end":8471092,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471097,"byte_end":8471100,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471105,"byte_end":8471168,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471173,"byte_end":8471176,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471181,"byte_end":8471254,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471259,"byte_end":8471290,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471295,"byte_end":8471298,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471303,"byte_end":8471376,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471381,"byte_end":8471456,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471461,"byte_end":8471534,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471539,"byte_end":8471566,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471571,"byte_end":8471574,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471579,"byte_end":8471593,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471598,"byte_end":8471601,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471606,"byte_end":8471624,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471629,"byte_end":8471655,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471660,"byte_end":8471692,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471697,"byte_end":8471700,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471705,"byte_end":8471723,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471728,"byte_end":8471779,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471784,"byte_end":8471855,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471860,"byte_end":8471920,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471925,"byte_end":8471939,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471944,"byte_end":8471949,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471954,"byte_end":8471961,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471966,"byte_end":8471969,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471974,"byte_end":8471986,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471991,"byte_end":8471994,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8471999,"byte_end":8472059,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472064,"byte_end":8472067,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472072,"byte_end":8472142,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472147,"byte_end":8472220,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472225,"byte_end":8472303,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473407,"byte_end":8473417,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472681,"byte_end":8472742,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472747,"byte_end":8472750,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472755,"byte_end":8472828,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472833,"byte_end":8472867,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472872,"byte_end":8472875,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472880,"byte_end":8472894,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472899,"byte_end":8472902,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472907,"byte_end":8472925,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472930,"byte_end":8472962,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472967,"byte_end":8472970,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472975,"byte_end":8472991,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8472996,"byte_end":8473051,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473056,"byte_end":8473059,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473064,"byte_end":8473082,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473087,"byte_end":8473126,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473131,"byte_end":8473197,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473202,"byte_end":8473205,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473210,"byte_end":8473252,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473257,"byte_end":8473346,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473351,"byte_end":8473354,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473359,"byte_end":8473373,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473378,"byte_end":8473383,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473388,"byte_end":8473395,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474848,"byte_end":8474856,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473503,"byte_end":8473577,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473582,"byte_end":8473585,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473590,"byte_end":8473652,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473657,"byte_end":8473660,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473665,"byte_end":8473741,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473746,"byte_end":8473815,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473820,"byte_end":8473849,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473854,"byte_end":8473857,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473862,"byte_end":8473874,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473879,"byte_end":8473882,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473887,"byte_end":8473962,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8473967,"byte_end":8474042,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474047,"byte_end":8474121,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474126,"byte_end":8474201,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474206,"byte_end":8474214,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474219,"byte_end":8474222,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474227,"byte_end":8474241,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474246,"byte_end":8474249,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474254,"byte_end":8474267,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474272,"byte_end":8474325,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474330,"byte_end":8474333,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474338,"byte_end":8474356,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474361,"byte_end":8474382,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474387,"byte_end":8474465,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474470,"byte_end":8474517,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474522,"byte_end":8474525,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474530,"byte_end":8474586,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474591,"byte_end":8474617,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474622,"byte_end":8474653,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474658,"byte_end":8474702,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474707,"byte_end":8474724,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474729,"byte_end":8474782,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474787,"byte_end":8474800,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474805,"byte_end":8474814,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474819,"byte_end":8474824,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474829,"byte_end":8474836,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475542,"byte_end":8475545,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474925,"byte_end":8474983,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474988,"byte_end":8474991,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8474996,"byte_end":8475056,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475061,"byte_end":8475064,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475069,"byte_end":8475106,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475111,"byte_end":8475114,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475119,"byte_end":8475133,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475138,"byte_end":8475141,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475146,"byte_end":8475159,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475164,"byte_end":8475196,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475201,"byte_end":8475204,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475209,"byte_end":8475225,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475230,"byte_end":8475233,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475238,"byte_end":8475256,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475261,"byte_end":8475300,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475305,"byte_end":8475367,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475372,"byte_end":8475375,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475380,"byte_end":8475437,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475442,"byte_end":8475482,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475487,"byte_end":8475490,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475495,"byte_end":8475508,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475513,"byte_end":8475518,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475523,"byte_end":8475530,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476184,"byte_end":8476191,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475617,"byte_end":8475675,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475680,"byte_end":8475683,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475688,"byte_end":8475764,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475769,"byte_end":8475790,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475795,"byte_end":8475798,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475803,"byte_end":8475817,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475822,"byte_end":8475825,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475830,"byte_end":8475843,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475848,"byte_end":8475880,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475885,"byte_end":8475888,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475893,"byte_end":8475909,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475914,"byte_end":8475917,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475922,"byte_end":8475940,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475945,"byte_end":8475984,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8475989,"byte_end":8476052,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476057,"byte_end":8476060,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476065,"byte_end":8476123,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476128,"byte_end":8476131,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476136,"byte_end":8476150,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476155,"byte_end":8476160,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476165,"byte_end":8476172,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478464,"byte_end":8478472,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2865}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478262,"byte_end":8478338,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478339,"byte_end":8478386,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478387,"byte_end":8478435,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478887,"byte_end":8478898,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478650,"byte_end":8478723,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478728,"byte_end":8478743,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478748,"byte_end":8478751,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478756,"byte_end":8478825,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478830,"byte_end":8478875,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480466,"byte_end":8480474,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480049,"byte_end":8480113,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480114,"byte_end":8480117,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480118,"byte_end":8480206,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480207,"byte_end":8480284,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480285,"byte_end":8480288,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480289,"byte_end":8480317,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480318,"byte_end":8480351,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480352,"byte_end":8480403,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480404,"byte_end":8480437,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481172,"byte_end":8481181,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480496,"byte_end":8480561,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480562,"byte_end":8480565,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480566,"byte_end":8480652,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480653,"byte_end":8480705,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480706,"byte_end":8480709,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480710,"byte_end":8480791,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480792,"byte_end":8480877,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480878,"byte_end":8480881,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480882,"byte_end":8480910,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480911,"byte_end":8480944,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480945,"byte_end":8480992,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8480993,"byte_end":8481055,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481056,"byte_end":8481109,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481110,"byte_end":8481143,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482238,"byte_end":8482247,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481355,"byte_end":8481429,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481434,"byte_end":8481507,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481512,"byte_end":8481526,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481531,"byte_end":8481534,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481539,"byte_end":8481612,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481617,"byte_end":8481620,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481625,"byte_end":8481639,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481644,"byte_end":8481647,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481652,"byte_end":8481665,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481670,"byte_end":8481688,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481693,"byte_end":8481723,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481728,"byte_end":8481731,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481736,"byte_end":8481769,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481774,"byte_end":8481777,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481782,"byte_end":8481800,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481805,"byte_end":8481844,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481849,"byte_end":8481918,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481923,"byte_end":8481971,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481976,"byte_end":8482006,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482011,"byte_end":8482014,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482019,"byte_end":8482041,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482046,"byte_end":8482091,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482096,"byte_end":8482114,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482119,"byte_end":8482122,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482127,"byte_end":8482141,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482146,"byte_end":8482151,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482156,"byte_end":8482163,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482168,"byte_end":8482171,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482176,"byte_end":8482226,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483664,"byte_end":8483668,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482372,"byte_end":8482442,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482447,"byte_end":8482516,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482521,"byte_end":8482560,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482565,"byte_end":8482568,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482573,"byte_end":8482641,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482646,"byte_end":8482649,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482654,"byte_end":8482694,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482699,"byte_end":8482702,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482707,"byte_end":8482721,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482726,"byte_end":8482729,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482734,"byte_end":8482747,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482752,"byte_end":8482782,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482787,"byte_end":8482813,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482818,"byte_end":8482844,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482849,"byte_end":8482852,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482857,"byte_end":8482875,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482880,"byte_end":8482931,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482936,"byte_end":8482964,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8482969,"byte_end":8483038,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483043,"byte_end":8483091,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483096,"byte_end":8483099,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483104,"byte_end":8483133,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483138,"byte_end":8483167,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483172,"byte_end":8483175,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483180,"byte_end":8483207,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483212,"byte_end":8483259,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483264,"byte_end":8483267,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483272,"byte_end":8483296,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483301,"byte_end":8483360,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483365,"byte_end":8483404,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483409,"byte_end":8483412,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483417,"byte_end":8483431,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483436,"byte_end":8483441,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483446,"byte_end":8483453,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483458,"byte_end":8483461,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483466,"byte_end":8483531,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483536,"byte_end":8483539,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483544,"byte_end":8483590,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483595,"byte_end":8483646,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486270,"byte_end":8486283,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2884}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8485835,"byte_end":8485901,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8485902,"byte_end":8485905,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8485906,"byte_end":8485993,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8485994,"byte_end":8486078,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486079,"byte_end":8486082,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486083,"byte_end":8486111,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486112,"byte_end":8486155,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486156,"byte_end":8486207,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486208,"byte_end":8486241,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8487093,"byte_end":8487107,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486316,"byte_end":8486383,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486384,"byte_end":8486387,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486388,"byte_end":8486475,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486476,"byte_end":8486553,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486554,"byte_end":8486611,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486612,"byte_end":8486615,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486616,"byte_end":8486702,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486703,"byte_end":8486788,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486789,"byte_end":8486792,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486793,"byte_end":8486821,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486822,"byte_end":8486865,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486866,"byte_end":8486913,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486914,"byte_end":8486976,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8486977,"byte_end":8487030,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8487031,"byte_end":8487064,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488072,"byte_end":8488084,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8487940,"byte_end":8488022,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488023,"byte_end":8488043,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488085,"byte_end":8488102,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488104,"byte_end":8488122,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488668,"byte_end":8488675,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488405,"byte_end":8488474,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488479,"byte_end":8488543,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488548,"byte_end":8488600,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488605,"byte_end":8488608,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488613,"byte_end":8488656,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489666,"byte_end":8489675,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488782,"byte_end":8488856,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488861,"byte_end":8488934,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488939,"byte_end":8488953,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488958,"byte_end":8488961,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488966,"byte_end":8489039,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489044,"byte_end":8489047,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489052,"byte_end":8489066,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489071,"byte_end":8489074,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489079,"byte_end":8489092,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489097,"byte_end":8489115,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489120,"byte_end":8489150,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489155,"byte_end":8489158,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489163,"byte_end":8489196,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489201,"byte_end":8489204,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489209,"byte_end":8489227,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489232,"byte_end":8489271,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489276,"byte_end":8489341,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489346,"byte_end":8489399,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489404,"byte_end":8489434,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489439,"byte_end":8489442,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489447,"byte_end":8489469,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489474,"byte_end":8489519,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489524,"byte_end":8489542,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489547,"byte_end":8489550,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489555,"byte_end":8489569,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489574,"byte_end":8489579,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489584,"byte_end":8489591,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489596,"byte_end":8489599,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489604,"byte_end":8489654,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491097,"byte_end":8491101,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489804,"byte_end":8489874,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489879,"byte_end":8489948,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489953,"byte_end":8489992,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8489997,"byte_end":8490000,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490005,"byte_end":8490073,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490078,"byte_end":8490081,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490086,"byte_end":8490126,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490131,"byte_end":8490134,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490139,"byte_end":8490153,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490158,"byte_end":8490161,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490166,"byte_end":8490179,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490184,"byte_end":8490214,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490219,"byte_end":8490245,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490250,"byte_end":8490276,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490281,"byte_end":8490284,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490289,"byte_end":8490307,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490312,"byte_end":8490363,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490368,"byte_end":8490396,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490401,"byte_end":8490466,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490471,"byte_end":8490524,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490529,"byte_end":8490532,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490537,"byte_end":8490566,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490571,"byte_end":8490600,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490605,"byte_end":8490608,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490613,"byte_end":8490640,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490645,"byte_end":8490692,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490697,"byte_end":8490700,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490705,"byte_end":8490729,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490734,"byte_end":8490793,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490798,"byte_end":8490837,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490842,"byte_end":8490845,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490850,"byte_end":8490864,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490869,"byte_end":8490874,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490879,"byte_end":8490886,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490891,"byte_end":8490894,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490899,"byte_end":8490964,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490969,"byte_end":8490972,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8490977,"byte_end":8491023,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491028,"byte_end":8491079,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491834,"byte_end":8491841,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491571,"byte_end":8491640,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491645,"byte_end":8491709,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491714,"byte_end":8491766,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491771,"byte_end":8491774,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491779,"byte_end":8491822,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492146,"byte_end":8492152,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491947,"byte_end":8492019,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492024,"byte_end":8492093,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492098,"byte_end":8492134,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2898},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495560,"byte_end":8495569,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2899}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497650,"byte_end":8497657,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495648,"byte_end":8495692,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495697,"byte_end":8495700,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495705,"byte_end":8495779,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495784,"byte_end":8495853,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495858,"byte_end":8495934,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495939,"byte_end":8496004,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496009,"byte_end":8496012,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496017,"byte_end":8496093,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496098,"byte_end":8496167,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496172,"byte_end":8496248,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496253,"byte_end":8496312,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496317,"byte_end":8496320,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496325,"byte_end":8496379,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496384,"byte_end":8496387,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496392,"byte_end":8496406,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496411,"byte_end":8496414,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496419,"byte_end":8496432,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496437,"byte_end":8496467,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496472,"byte_end":8496498,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496503,"byte_end":8496529,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496534,"byte_end":8496537,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496542,"byte_end":8496560,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496565,"byte_end":8496616,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496621,"byte_end":8496649,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496654,"byte_end":8496723,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496728,"byte_end":8496731,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496736,"byte_end":8496763,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496768,"byte_end":8496817,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496822,"byte_end":8496825,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496830,"byte_end":8496844,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496849,"byte_end":8496854,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496859,"byte_end":8496866,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496871,"byte_end":8496874,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496879,"byte_end":8496909,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496914,"byte_end":8496917,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496922,"byte_end":8496935,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496940,"byte_end":8496970,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8496975,"byte_end":8497001,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497006,"byte_end":8497032,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497037,"byte_end":8497064,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497069,"byte_end":8497072,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497077,"byte_end":8497095,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497100,"byte_end":8497151,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497156,"byte_end":8497184,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497189,"byte_end":8497277,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497282,"byte_end":8497285,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497290,"byte_end":8497317,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497322,"byte_end":8497371,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497376,"byte_end":8497379,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497384,"byte_end":8497398,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497403,"byte_end":8497408,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497413,"byte_end":8497420,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497425,"byte_end":8497428,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497433,"byte_end":8497504,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497509,"byte_end":8497512,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497517,"byte_end":8497574,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8497579,"byte_end":8497632,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8500090,"byte_end":8500098,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499123,"byte_end":8499180,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499185,"byte_end":8499188,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499193,"byte_end":8499268,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499273,"byte_end":8499346,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499351,"byte_end":8499354,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499359,"byte_end":8499373,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499378,"byte_end":8499381,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499386,"byte_end":8499404,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499409,"byte_end":8499435,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499440,"byte_end":8499470,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499475,"byte_end":8499478,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499483,"byte_end":8499501,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499506,"byte_end":8499557,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499562,"byte_end":8499636,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499641,"byte_end":8499695,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499700,"byte_end":8499714,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499719,"byte_end":8499724,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499729,"byte_end":8499736,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499741,"byte_end":8499744,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499749,"byte_end":8499761,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499766,"byte_end":8499769,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499774,"byte_end":8499834,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499839,"byte_end":8499842,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499847,"byte_end":8499917,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8499922,"byte_end":8499995,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8500000,"byte_end":8500078,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8500495,"byte_end":8500506,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501654,"byte_end":8501664,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501255,"byte_end":8501314,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501319,"byte_end":8501322,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501327,"byte_end":8501341,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501346,"byte_end":8501349,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501354,"byte_end":8501367,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501372,"byte_end":8501402,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501407,"byte_end":8501410,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501415,"byte_end":8501479,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501484,"byte_end":8501545,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501550,"byte_end":8501553,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501558,"byte_end":8501601,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501606,"byte_end":8501618,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501623,"byte_end":8501630,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501635,"byte_end":8501642,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502153,"byte_end":8502162,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501750,"byte_end":8501814,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501819,"byte_end":8501822,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501827,"byte_end":8501841,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501846,"byte_end":8501849,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501854,"byte_end":8501867,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501872,"byte_end":8501902,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501907,"byte_end":8501910,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501915,"byte_end":8501979,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8501984,"byte_end":8502045,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502050,"byte_end":8502053,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502058,"byte_end":8502100,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502105,"byte_end":8502117,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502122,"byte_end":8502129,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502134,"byte_end":8502141,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503320,"byte_end":8503329,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502247,"byte_end":8502322,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502327,"byte_end":8502400,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502405,"byte_end":8502419,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502424,"byte_end":8502427,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502432,"byte_end":8502450,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502455,"byte_end":8502458,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502463,"byte_end":8502488,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502493,"byte_end":8502496,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502501,"byte_end":8502552,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502557,"byte_end":8502640,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502645,"byte_end":8502700,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502705,"byte_end":8502708,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502713,"byte_end":8502725,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502730,"byte_end":8502733,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502738,"byte_end":8502813,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502818,"byte_end":8502821,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502826,"byte_end":8502840,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502845,"byte_end":8502848,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502853,"byte_end":8502866,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502871,"byte_end":8502889,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502894,"byte_end":8502924,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502929,"byte_end":8502932,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502937,"byte_end":8502970,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502975,"byte_end":8502978,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8502983,"byte_end":8503001,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503006,"byte_end":8503045,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503050,"byte_end":8503119,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503124,"byte_end":8503154,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503159,"byte_end":8503162,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503167,"byte_end":8503189,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503194,"byte_end":8503236,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503241,"byte_end":8503259,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503264,"byte_end":8503267,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503272,"byte_end":8503286,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503291,"byte_end":8503296,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503301,"byte_end":8503308,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505241,"byte_end":8505245,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8503990,"byte_end":8504060,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504065,"byte_end":8504134,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504139,"byte_end":8504178,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504183,"byte_end":8504186,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504191,"byte_end":8504265,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504270,"byte_end":8504330,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504335,"byte_end":8504338,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504343,"byte_end":8504357,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504362,"byte_end":8504365,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504370,"byte_end":8504383,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504388,"byte_end":8504418,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504423,"byte_end":8504449,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504454,"byte_end":8504480,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504485,"byte_end":8504488,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504493,"byte_end":8504511,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504516,"byte_end":8504567,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504572,"byte_end":8504600,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504605,"byte_end":8504674,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504679,"byte_end":8504682,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504687,"byte_end":8504716,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504721,"byte_end":8504750,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504755,"byte_end":8504758,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504763,"byte_end":8504790,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504795,"byte_end":8504839,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504844,"byte_end":8504847,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504852,"byte_end":8504876,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504881,"byte_end":8504937,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504942,"byte_end":8504981,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504986,"byte_end":8504989,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8504994,"byte_end":8505008,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505013,"byte_end":8505018,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505023,"byte_end":8505030,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505035,"byte_end":8505038,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505043,"byte_end":8505108,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505113,"byte_end":8505116,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505121,"byte_end":8505167,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505172,"byte_end":8505223,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506114,"byte_end":8506122,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505359,"byte_end":8505425,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505430,"byte_end":8505433,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505438,"byte_end":8505510,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505515,"byte_end":8505584,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505589,"byte_end":8505622,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505627,"byte_end":8505630,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505635,"byte_end":8505649,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505654,"byte_end":8505657,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505662,"byte_end":8505675,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505680,"byte_end":8505710,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505715,"byte_end":8505741,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505746,"byte_end":8505773,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505778,"byte_end":8505781,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505786,"byte_end":8505804,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505809,"byte_end":8505860,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505865,"byte_end":8505893,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505898,"byte_end":8505963,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505968,"byte_end":8505971,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8505976,"byte_end":8506006,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506011,"byte_end":8506053,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506058,"byte_end":8506061,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506066,"byte_end":8506080,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506085,"byte_end":8506090,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506095,"byte_end":8506102,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506748,"byte_end":8506755,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506216,"byte_end":8506278,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506283,"byte_end":8506286,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506291,"byte_end":8506355,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506360,"byte_end":8506363,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506368,"byte_end":8506411,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506416,"byte_end":8506419,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506424,"byte_end":8506438,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506443,"byte_end":8506446,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506451,"byte_end":8506464,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506469,"byte_end":8506499,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506504,"byte_end":8506507,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506512,"byte_end":8506576,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506581,"byte_end":8506642,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506647,"byte_end":8506650,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506655,"byte_end":8506695,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506700,"byte_end":8506712,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506717,"byte_end":8506724,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506729,"byte_end":8506736,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507562,"byte_end":8507573,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506832,"byte_end":8506894,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506899,"byte_end":8506902,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506907,"byte_end":8506976,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8506981,"byte_end":8507054,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507059,"byte_end":8507132,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507137,"byte_end":8507212,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507217,"byte_end":8507235,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507240,"byte_end":8507243,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507248,"byte_end":8507262,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507267,"byte_end":8507270,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507275,"byte_end":8507288,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507293,"byte_end":8507323,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507328,"byte_end":8507331,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507336,"byte_end":8507400,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507405,"byte_end":8507466,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507471,"byte_end":8507474,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507479,"byte_end":8507509,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507514,"byte_end":8507526,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507531,"byte_end":8507538,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507543,"byte_end":8507550,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508240,"byte_end":8508256,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507674,"byte_end":8507734,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507739,"byte_end":8507742,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507747,"byte_end":8507820,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507825,"byte_end":8507828,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507833,"byte_end":8507894,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507899,"byte_end":8507902,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507907,"byte_end":8507921,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507926,"byte_end":8507929,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507934,"byte_end":8507947,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507952,"byte_end":8507982,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507987,"byte_end":8507990,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8507995,"byte_end":8508059,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508064,"byte_end":8508125,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508130,"byte_end":8508133,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508138,"byte_end":8508187,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508192,"byte_end":8508204,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508209,"byte_end":8508216,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508221,"byte_end":8508228,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508848,"byte_end":8508868,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508343,"byte_end":8508403,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508408,"byte_end":8508411,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508416,"byte_end":8508488,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508493,"byte_end":8508513,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508518,"byte_end":8508521,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508526,"byte_end":8508540,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508545,"byte_end":8508548,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508553,"byte_end":8508566,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508571,"byte_end":8508601,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508606,"byte_end":8508609,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508614,"byte_end":8508678,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508683,"byte_end":8508744,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508749,"byte_end":8508752,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508757,"byte_end":8508795,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508800,"byte_end":8508812,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508817,"byte_end":8508824,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508829,"byte_end":8508836,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509539,"byte_end":8509555,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8508973,"byte_end":8509033,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509038,"byte_end":8509041,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509046,"byte_end":8509119,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509124,"byte_end":8509127,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509132,"byte_end":8509193,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509198,"byte_end":8509201,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509206,"byte_end":8509220,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509225,"byte_end":8509228,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509233,"byte_end":8509246,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509251,"byte_end":8509281,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509286,"byte_end":8509289,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509294,"byte_end":8509358,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509363,"byte_end":8509424,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509429,"byte_end":8509432,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509437,"byte_end":8509486,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509491,"byte_end":8509503,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509508,"byte_end":8509515,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509520,"byte_end":8509527,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510144,"byte_end":8510164,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509642,"byte_end":8509702,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509707,"byte_end":8509710,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509715,"byte_end":8509789,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509794,"byte_end":8509809,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509814,"byte_end":8509817,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509822,"byte_end":8509836,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509841,"byte_end":8509844,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509849,"byte_end":8509862,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509867,"byte_end":8509897,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509902,"byte_end":8509905,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509910,"byte_end":8509974,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8509979,"byte_end":8510040,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510045,"byte_end":8510048,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510053,"byte_end":8510091,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510096,"byte_end":8510108,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510113,"byte_end":8510120,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510125,"byte_end":8510132,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510866,"byte_end":8510875,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510269,"byte_end":8510345,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510350,"byte_end":8510388,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510393,"byte_end":8510396,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510401,"byte_end":8510467,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510472,"byte_end":8510475,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510480,"byte_end":8510527,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510532,"byte_end":8510535,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510540,"byte_end":8510554,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510559,"byte_end":8510562,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510567,"byte_end":8510580,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510585,"byte_end":8510615,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510620,"byte_end":8510623,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510628,"byte_end":8510692,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510697,"byte_end":8510758,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510763,"byte_end":8510766,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510771,"byte_end":8510813,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510818,"byte_end":8510830,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510835,"byte_end":8510842,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510847,"byte_end":8510854,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511906,"byte_end":8511919,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8510966,"byte_end":8511040,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511045,"byte_end":8511048,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511053,"byte_end":8511120,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511125,"byte_end":8511199,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511204,"byte_end":8511266,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511271,"byte_end":8511274,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511279,"byte_end":8511353,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511358,"byte_end":8511433,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511438,"byte_end":8511462,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511467,"byte_end":8511470,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511475,"byte_end":8511538,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511543,"byte_end":8511577,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511582,"byte_end":8511585,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511590,"byte_end":8511604,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511609,"byte_end":8511612,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511617,"byte_end":8511630,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511635,"byte_end":8511665,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511670,"byte_end":8511673,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511678,"byte_end":8511742,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511747,"byte_end":8511808,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511813,"byte_end":8511816,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511821,"byte_end":8511853,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511858,"byte_end":8511870,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511875,"byte_end":8511882,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8511887,"byte_end":8511894,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512550,"byte_end":8512553,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512038,"byte_end":8512096,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512101,"byte_end":8512104,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512109,"byte_end":8512169,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512174,"byte_end":8512177,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512182,"byte_end":8512217,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512222,"byte_end":8512225,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512230,"byte_end":8512244,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512249,"byte_end":8512252,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512257,"byte_end":8512270,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512275,"byte_end":8512305,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512310,"byte_end":8512313,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512318,"byte_end":8512382,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512387,"byte_end":8512448,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512453,"byte_end":8512456,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512461,"byte_end":8512497,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512502,"byte_end":8512514,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512519,"byte_end":8512526,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512531,"byte_end":8512538,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513120,"byte_end":8513127,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512625,"byte_end":8512683,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512688,"byte_end":8512691,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512696,"byte_end":8512772,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512777,"byte_end":8512798,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512803,"byte_end":8512806,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512811,"byte_end":8512825,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512830,"byte_end":8512833,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512838,"byte_end":8512851,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512856,"byte_end":8512886,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512891,"byte_end":8512894,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512899,"byte_end":8512963,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8512968,"byte_end":8513029,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513034,"byte_end":8513037,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513042,"byte_end":8513067,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513072,"byte_end":8513084,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513089,"byte_end":8513096,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513101,"byte_end":8513108,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513769,"byte_end":8513775,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513215,"byte_end":8513287,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513292,"byte_end":8513303,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513308,"byte_end":8513311,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513316,"byte_end":8513379,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513384,"byte_end":8513387,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513392,"byte_end":8513433,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513438,"byte_end":8513441,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513446,"byte_end":8513460,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513465,"byte_end":8513468,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513473,"byte_end":8513486,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513491,"byte_end":8513521,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513526,"byte_end":8513529,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513534,"byte_end":8513598,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513603,"byte_end":8513664,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513669,"byte_end":8513672,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513677,"byte_end":8513716,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513721,"byte_end":8513733,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513738,"byte_end":8513745,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513750,"byte_end":8513757,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514717,"byte_end":8514727,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513863,"byte_end":8513933,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513938,"byte_end":8513949,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513954,"byte_end":8513957,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8513962,"byte_end":8514037,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514042,"byte_end":8514105,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514110,"byte_end":8514181,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514186,"byte_end":8514203,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514208,"byte_end":8514211,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514216,"byte_end":8514289,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514294,"byte_end":8514370,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514375,"byte_end":8514391,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514396,"byte_end":8514399,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514404,"byte_end":8514418,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514423,"byte_end":8514426,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514431,"byte_end":8514444,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514449,"byte_end":8514479,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514484,"byte_end":8514487,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514492,"byte_end":8514556,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514561,"byte_end":8514622,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514627,"byte_end":8514630,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514635,"byte_end":8514664,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514669,"byte_end":8514681,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514686,"byte_end":8514693,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514698,"byte_end":8514705,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515345,"byte_end":8515350,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8514968,"byte_end":8515004,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515009,"byte_end":8515086,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515091,"byte_end":8515137,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515142,"byte_end":8515145,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515150,"byte_end":8515229,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515234,"byte_end":8515277,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515282,"byte_end":8515285,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515290,"byte_end":8515333,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2830},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8516006,"byte_end":8516016,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515435,"byte_end":8515512,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515517,"byte_end":8515563,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515568,"byte_end":8515571,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515576,"byte_end":8515654,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515659,"byte_end":8515707,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515712,"byte_end":8515715,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515720,"byte_end":8515798,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515803,"byte_end":8515884,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515889,"byte_end":8515892,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515897,"byte_end":8515930,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8515935,"byte_end":8515994,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":9646},{"krate":0,"index":3023}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\mod.rs","byte_start":8523269,"byte_end":8523291,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3025},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523747,"byte_end":8523756,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3026}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523954,"byte_end":8523958,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523835,"byte_end":8523907,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523912,"byte_end":8523936,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525661,"byte_end":8525669,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8524793,"byte_end":8524865,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8524870,"byte_end":8524873,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8524878,"byte_end":8524951,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8524956,"byte_end":8525031,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525036,"byte_end":8525083,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525088,"byte_end":8525091,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525096,"byte_end":8525169,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525174,"byte_end":8525249,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525254,"byte_end":8525307,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525312,"byte_end":8525315,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525320,"byte_end":8525332,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525337,"byte_end":8525340,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525345,"byte_end":8525405,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525410,"byte_end":8525413,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525418,"byte_end":8525488,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525493,"byte_end":8525566,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525571,"byte_end":8525649,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526053,"byte_end":8526058,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525861,"byte_end":8525938,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8525943,"byte_end":8526016,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526021,"byte_end":8526041,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526193,"byte_end":8526203,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526122,"byte_end":8526181,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526475,"byte_end":8526482,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526289,"byte_end":8526363,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526368,"byte_end":8526441,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8526446,"byte_end":8526457,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527419,"byte_end":8527423,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527016,"byte_end":8527114,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527119,"byte_end":8527190,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527195,"byte_end":8527198,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527203,"byte_end":8527286,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527291,"byte_end":8527351,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527356,"byte_end":8527359,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527364,"byte_end":8527401,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527929,"byte_end":8527937,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527533,"byte_end":8527604,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527609,"byte_end":8527623,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527628,"byte_end":8527631,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527636,"byte_end":8527649,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527654,"byte_end":8527657,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527662,"byte_end":8527725,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527730,"byte_end":8527788,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527793,"byte_end":8527843,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527848,"byte_end":8527851,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8527856,"byte_end":8527917,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8528644,"byte_end":8528653,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529671,"byte_end":8529675,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529031,"byte_end":8529110,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529115,"byte_end":8529199,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529204,"byte_end":8529236,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529241,"byte_end":8529244,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529249,"byte_end":8529330,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529335,"byte_end":8529418,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529423,"byte_end":8529457,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529462,"byte_end":8529465,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529470,"byte_end":8529553,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529558,"byte_end":8529603,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529608,"byte_end":8529611,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529616,"byte_end":8529653,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8529815,"byte_end":8529824,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530543,"byte_end":8530550,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530252,"byte_end":8530324,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530329,"byte_end":8530400,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530405,"byte_end":8530408,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530413,"byte_end":8530489,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530494,"byte_end":8530525,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531446,"byte_end":8531457,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8530968,"byte_end":8531024,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531029,"byte_end":8531032,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531037,"byte_end":8531050,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531055,"byte_end":8531058,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531063,"byte_end":8531131,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531136,"byte_end":8531139,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531144,"byte_end":8531208,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531213,"byte_end":8531287,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531292,"byte_end":8531360,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531365,"byte_end":8531368,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531373,"byte_end":8531434,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8531633,"byte_end":8531645,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532484,"byte_end":8532493,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532094,"byte_end":8532173,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532178,"byte_end":8532245,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532250,"byte_end":8532253,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532258,"byte_end":8532336,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532341,"byte_end":8532419,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532424,"byte_end":8532466,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8532652,"byte_end":8532666,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533368,"byte_end":8533377,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533151,"byte_end":8533215,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533220,"byte_end":8533223,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533228,"byte_end":8533294,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533299,"byte_end":8533302,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533307,"byte_end":8533356,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533633,"byte_end":8533646,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533456,"byte_end":8533520,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533525,"byte_end":8533528,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533533,"byte_end":8533604,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533609,"byte_end":8533621,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2961},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533985,"byte_end":8534002,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533739,"byte_end":8533808,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533813,"byte_end":8533816,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533821,"byte_end":8533895,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533900,"byte_end":8533903,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8533908,"byte_end":8533973,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534342,"byte_end":8534363,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534089,"byte_end":8534158,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534163,"byte_end":8534166,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534171,"byte_end":8534245,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534250,"byte_end":8534253,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534258,"byte_end":8534268,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534273,"byte_end":8534276,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534281,"byte_end":8534330,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534706,"byte_end":8534722,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534464,"byte_end":8534532,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534537,"byte_end":8534540,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534545,"byte_end":8534618,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534623,"byte_end":8534626,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534631,"byte_end":8534694,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2964},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535201,"byte_end":8535221,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534807,"byte_end":8534875,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534880,"byte_end":8534883,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534888,"byte_end":8534958,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8534963,"byte_end":8535037,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535042,"byte_end":8535104,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535109,"byte_end":8535112,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535117,"byte_end":8535127,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535132,"byte_end":8535135,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535140,"byte_end":8535189,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535570,"byte_end":8535587,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535322,"byte_end":8535393,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535398,"byte_end":8535401,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535406,"byte_end":8535480,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535485,"byte_end":8535488,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535493,"byte_end":8535558,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535931,"byte_end":8535952,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535674,"byte_end":8535745,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535750,"byte_end":8535753,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535758,"byte_end":8535834,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535839,"byte_end":8535842,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535847,"byte_end":8535857,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535862,"byte_end":8535865,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8535870,"byte_end":8535919,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536246,"byte_end":8536249,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536053,"byte_end":8536111,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536116,"byte_end":8536119,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536124,"byte_end":8536184,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536189,"byte_end":8536192,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536197,"byte_end":8536234,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536506,"byte_end":8536513,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536321,"byte_end":8536379,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536384,"byte_end":8536387,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536392,"byte_end":8536468,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536473,"byte_end":8536494,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537031,"byte_end":8537048,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536601,"byte_end":8536659,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536664,"byte_end":8536667,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536672,"byte_end":8536746,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536751,"byte_end":8536824,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536829,"byte_end":8536901,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536906,"byte_end":8536976,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8536981,"byte_end":8537019,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537513,"byte_end":8537530,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537197,"byte_end":8537257,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537262,"byte_end":8537265,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537270,"byte_end":8537344,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537349,"byte_end":8537422,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537427,"byte_end":8537501,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2971},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537897,"byte_end":8537915,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537673,"byte_end":8537732,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537737,"byte_end":8537740,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537745,"byte_end":8537815,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537820,"byte_end":8537823,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8537828,"byte_end":8537885,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538291,"byte_end":8538309,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538065,"byte_end":8538126,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538131,"byte_end":8538134,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538139,"byte_end":8538209,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538214,"byte_end":8538217,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538222,"byte_end":8538279,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3027},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540944,"byte_end":8540952,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540756,"byte_end":8540815,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540816,"byte_end":8540819,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540820,"byte_end":8540900,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540901,"byte_end":8540915,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541166,"byte_end":8541174,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8540971,"byte_end":8541030,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541031,"byte_end":8541034,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541035,"byte_end":8541122,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541123,"byte_end":8541137,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541521,"byte_end":8541533,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541387,"byte_end":8541469,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541470,"byte_end":8541492,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541534,"byte_end":8541546,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3040},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541548,"byte_end":8541560,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542570,"byte_end":8542577,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542355,"byte_end":8542426,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542431,"byte_end":8542497,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542502,"byte_end":8542558,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543068,"byte_end":8543077,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542678,"byte_end":8542757,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542762,"byte_end":8542829,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542834,"byte_end":8542837,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542842,"byte_end":8542920,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542925,"byte_end":8543003,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543008,"byte_end":8543050,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543857,"byte_end":8543861,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543212,"byte_end":8543291,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543296,"byte_end":8543380,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543385,"byte_end":8543417,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543422,"byte_end":8543425,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543430,"byte_end":8543511,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543516,"byte_end":8543599,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543604,"byte_end":8543638,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543643,"byte_end":8543646,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543651,"byte_end":8543734,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543739,"byte_end":8543784,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543789,"byte_end":8543792,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543797,"byte_end":8543839,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544210,"byte_end":8544217,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543995,"byte_end":8544066,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544071,"byte_end":8544137,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544142,"byte_end":8544198,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544609,"byte_end":8544616,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544318,"byte_end":8544390,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544395,"byte_end":8544466,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544471,"byte_end":8544474,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544479,"byte_end":8544555,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544560,"byte_end":8544591,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545168,"byte_end":8545172,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544760,"byte_end":8544858,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544863,"byte_end":8544934,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544939,"byte_end":8544942,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8544947,"byte_end":8545030,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545035,"byte_end":8545095,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545100,"byte_end":8545103,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545108,"byte_end":8545150,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":3161},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":691},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":3810},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":3811},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3824},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571138,"byte_end":8571147,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3700}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571323,"byte_end":8571332,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571298,"byte_end":8571311,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571550,"byte_end":8571555,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571525,"byte_end":8571538,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571885,"byte_end":8571897,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571805,"byte_end":8571873,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572403,"byte_end":8572411,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572024,"byte_end":8572086,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572091,"byte_end":8572094,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572099,"byte_end":8572113,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572118,"byte_end":8572121,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572126,"byte_end":8572133,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572138,"byte_end":8572157,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572162,"byte_end":8572165,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572170,"byte_end":8572188,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572193,"byte_end":8572214,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572219,"byte_end":8572257,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572262,"byte_end":8572289,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572294,"byte_end":8572324,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572329,"byte_end":8572332,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572337,"byte_end":8572369,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572374,"byte_end":8572379,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572384,"byte_end":8572391,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573318,"byte_end":8573328,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572537,"byte_end":8572616,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572621,"byte_end":8572624,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572629,"byte_end":8572641,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572646,"byte_end":8572649,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572654,"byte_end":8572728,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572733,"byte_end":8572808,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572813,"byte_end":8572871,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572876,"byte_end":8572879,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572884,"byte_end":8572898,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572903,"byte_end":8572906,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572911,"byte_end":8572930,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572935,"byte_end":8572954,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572959,"byte_end":8572962,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572967,"byte_end":8572985,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8572990,"byte_end":8573011,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573016,"byte_end":8573054,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573059,"byte_end":8573086,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573091,"byte_end":8573121,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573126,"byte_end":8573129,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573134,"byte_end":8573161,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573166,"byte_end":8573214,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573219,"byte_end":8573270,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573275,"byte_end":8573284,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573289,"byte_end":8573294,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573299,"byte_end":8573306,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574093,"byte_end":8574107,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573469,"byte_end":8573538,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573543,"byte_end":8573615,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573620,"byte_end":8573633,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573638,"byte_end":8573641,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573646,"byte_end":8573660,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573665,"byte_end":8573668,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573673,"byte_end":8573692,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573697,"byte_end":8573716,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573721,"byte_end":8573724,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573729,"byte_end":8573747,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573752,"byte_end":8573773,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573778,"byte_end":8573816,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573821,"byte_end":8573848,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573853,"byte_end":8573883,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573888,"byte_end":8573891,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573896,"byte_end":8573946,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8573951,"byte_end":8573999,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574004,"byte_end":8574045,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574050,"byte_end":8574059,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574064,"byte_end":8574069,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574074,"byte_end":8574081,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590473,"byte_end":8590483,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3703},{"krate":0,"index":3704}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3734},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3768},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154711,"byte_end":154722,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154518,"byte_end":154578,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154583,"byte_end":154586,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154591,"byte_end":154642,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154647,"byte_end":154650,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154655,"byte_end":154699,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":156247,"byte_end":156252,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":160371,"byte_end":160379,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164171,"byte_end":164186,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164091,"byte_end":164159,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":4050},{"krate":0,"index":4473},{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4735},{"krate":0,"index":4826},{"krate":0,"index":4964},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":5096},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5145},{"krate":0,"index":5146}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612114,"byte_end":8612178,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612179,"byte_end":8612182,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612183,"byte_end":8612258,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612259,"byte_end":8612339,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612340,"byte_end":8612419,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612420,"byte_end":8612454,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612455,"byte_end":8612458,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612459,"byte_end":8612483,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612484,"byte_end":8612487,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612488,"byte_end":8612509,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612510,"byte_end":8612513,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612514,"byte_end":8612587,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612588,"byte_end":8612667,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612668,"byte_end":8612737,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612738,"byte_end":8612741,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612742,"byte_end":8612821,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612822,"byte_end":8612899,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612900,"byte_end":8612975,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8612976,"byte_end":8613048,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613049,"byte_end":8613121,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613122,"byte_end":8613199,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613200,"byte_end":8613213,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613214,"byte_end":8613217,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613218,"byte_end":8613296,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613297,"byte_end":8613358,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613359,"byte_end":8613362,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613363,"byte_end":8613387,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613388,"byte_end":8613391,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613392,"byte_end":8613471,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613472,"byte_end":8613550,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613551,"byte_end":8613595,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613596,"byte_end":8613599,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613600,"byte_end":8613680,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613681,"byte_end":8613697,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613698,"byte_end":8613701,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613702,"byte_end":8613709,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613710,"byte_end":8613739,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613740,"byte_end":8613743,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613744,"byte_end":8613787,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613788,"byte_end":8613850,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613851,"byte_end":8613856,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613857,"byte_end":8613860,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613861,"byte_end":8613879,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613880,"byte_end":8613901,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613902,"byte_end":8613944,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613945,"byte_end":8613948,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613949,"byte_end":8613982,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8613983,"byte_end":8614030,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614031,"byte_end":8614065,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614066,"byte_end":8614077,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614078,"byte_end":8614081,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614082,"byte_end":8614159,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614160,"byte_end":8614163,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614164,"byte_end":8614206,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614207,"byte_end":8614243,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614244,"byte_end":8614249,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614250,"byte_end":8614257,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614258,"byte_end":8614261,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614262,"byte_end":8614326,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614327,"byte_end":8614391,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614392,"byte_end":8614454,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614455,"byte_end":8614525,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614526,"byte_end":8614591,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614592,"byte_end":8614602,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614603,"byte_end":8614606,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614607,"byte_end":8614623,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614624,"byte_end":8614627,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614628,"byte_end":8614635,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614636,"byte_end":8614679,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614680,"byte_end":8614731,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614732,"byte_end":8614737,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614738,"byte_end":8614741,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614742,"byte_end":8614760,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614761,"byte_end":8614782,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614783,"byte_end":8614834,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614835,"byte_end":8614871,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614872,"byte_end":8614883,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614884,"byte_end":8614887,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614888,"byte_end":8614965,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614966,"byte_end":8614969,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8614970,"byte_end":8615012,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615013,"byte_end":8615058,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615059,"byte_end":8615064,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615065,"byte_end":8615072,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615073,"byte_end":8615076,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615077,"byte_end":8615099,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615100,"byte_end":8615143,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615144,"byte_end":8615147,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615148,"byte_end":8615169,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615170,"byte_end":8615173,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615174,"byte_end":8615251,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615252,"byte_end":8615332,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615333,"byte_end":8615388,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615389,"byte_end":8615392,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615393,"byte_end":8615471,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615472,"byte_end":8615492,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615493,"byte_end":8615496,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615497,"byte_end":8615504,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615505,"byte_end":8615531,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615532,"byte_end":8615535,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615536,"byte_end":8615589,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615590,"byte_end":8615644,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615645,"byte_end":8615650,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615651,"byte_end":8615654,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615655,"byte_end":8615673,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615674,"byte_end":8615695,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615696,"byte_end":8615746,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615747,"byte_end":8615750,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615751,"byte_end":8615784,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615785,"byte_end":8615813,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615814,"byte_end":8615866,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615867,"byte_end":8615911,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615912,"byte_end":8615925,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615926,"byte_end":8615937,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615938,"byte_end":8615941,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615942,"byte_end":8615989,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8615990,"byte_end":8616028,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616029,"byte_end":8616038,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616039,"byte_end":8616044,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616045,"byte_end":8616052,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616053,"byte_end":8616056,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616057,"byte_end":8616137,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616138,"byte_end":8616215,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616216,"byte_end":8616289,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616290,"byte_end":8616365,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616366,"byte_end":8616379,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616380,"byte_end":8616383,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616384,"byte_end":8616459,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616460,"byte_end":8616539,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616540,"byte_end":8616618,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616619,"byte_end":8616698,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616699,"byte_end":8616779,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616780,"byte_end":8616845,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616846,"byte_end":8616849,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616850,"byte_end":8616930,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616931,"byte_end":8616943,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616944,"byte_end":8616947,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616948,"byte_end":8616961,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8616962,"byte_end":8617003,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617004,"byte_end":8617034,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617035,"byte_end":8617061,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617062,"byte_end":8617065,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617066,"byte_end":8617084,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617085,"byte_end":8617124,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617125,"byte_end":8617200,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617201,"byte_end":8617247,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617248,"byte_end":8617251,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617252,"byte_end":8617276,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617277,"byte_end":8617356,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617357,"byte_end":8617388,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617389,"byte_end":8617425,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617426,"byte_end":8617429,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617430,"byte_end":8617467,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617468,"byte_end":8617530,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617531,"byte_end":8617546,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617547,"byte_end":8617556,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617557,"byte_end":8617560,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617561,"byte_end":8617640,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617641,"byte_end":8617716,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617717,"byte_end":8617795,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617796,"byte_end":8617843,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617844,"byte_end":8617861,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617862,"byte_end":8617865,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617866,"byte_end":8617913,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617914,"byte_end":8617955,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617956,"byte_end":8617965,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617966,"byte_end":8617969,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617970,"byte_end":8617984,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617985,"byte_end":8617990,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617991,"byte_end":8617998,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8617999,"byte_end":8618002,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618003,"byte_end":8618078,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618079,"byte_end":8618154,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618155,"byte_end":8618234,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618235,"byte_end":8618300,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618301,"byte_end":8618378,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618379,"byte_end":8618382,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618383,"byte_end":8618461,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618462,"byte_end":8618542,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618543,"byte_end":8618588,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618589,"byte_end":8618592,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618593,"byte_end":8618600,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618601,"byte_end":8618638,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618639,"byte_end":8618666,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618667,"byte_end":8618670,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618671,"byte_end":8618689,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618690,"byte_end":8618708,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618709,"byte_end":8618752,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618753,"byte_end":8618758,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618759,"byte_end":8618762,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618763,"byte_end":8618781,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618782,"byte_end":8618803,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618804,"byte_end":8618893,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618894,"byte_end":8618897,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618898,"byte_end":8618943,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618944,"byte_end":8618977,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8618978,"byte_end":8619015,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619016,"byte_end":8619019,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619020,"byte_end":8619087,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619088,"byte_end":8619115,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619116,"byte_end":8619150,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619151,"byte_end":8619194,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619195,"byte_end":8619232,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619233,"byte_end":8619286,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619287,"byte_end":8619308,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619309,"byte_end":8619326,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619327,"byte_end":8619340,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619341,"byte_end":8619352,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619353,"byte_end":8619356,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619357,"byte_end":8619395,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619396,"byte_end":8619399,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619400,"byte_end":8619460,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619461,"byte_end":8619485,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619486,"byte_end":8619530,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619531,"byte_end":8619534,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619535,"byte_end":8619590,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619591,"byte_end":8619651,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619652,"byte_end":8619655,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619656,"byte_end":8619726,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619727,"byte_end":8619776,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619777,"byte_end":8619780,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619781,"byte_end":8619834,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619835,"byte_end":8619851,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619852,"byte_end":8619861,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619862,"byte_end":8619865,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619866,"byte_end":8619907,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619908,"byte_end":8619959,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8619960,"byte_end":8619999,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620000,"byte_end":8620009,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620010,"byte_end":8620015,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620016,"byte_end":8620023,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620024,"byte_end":8620027,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620028,"byte_end":8620044,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620045,"byte_end":8620048,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620049,"byte_end":8620075,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620076,"byte_end":8620079,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620080,"byte_end":8620147,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620148,"byte_end":8620220,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620221,"byte_end":8620294,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620295,"byte_end":8620348,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620349,"byte_end":8620352,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620353,"byte_end":8620433,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620434,"byte_end":8620456,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620457,"byte_end":8620460,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620461,"byte_end":8620476,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620477,"byte_end":8620480,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620481,"byte_end":8620488,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620489,"byte_end":8620520,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620521,"byte_end":8620524,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620525,"byte_end":8620543,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620544,"byte_end":8620565,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620566,"byte_end":8620617,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620618,"byte_end":8620655,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620656,"byte_end":8620659,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620660,"byte_end":8620693,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620694,"byte_end":8620748,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620749,"byte_end":8620803,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620804,"byte_end":8620815,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620816,"byte_end":8620819,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620820,"byte_end":8620853,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620854,"byte_end":8620908,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620909,"byte_end":8620963,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620964,"byte_end":8620975,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620976,"byte_end":8620979,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8620980,"byte_end":8621009,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621010,"byte_end":8621039,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621040,"byte_end":8621045,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621046,"byte_end":8621053,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621054,"byte_end":8621057,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621058,"byte_end":8621107,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621108,"byte_end":8621111,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621112,"byte_end":8621134,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621135,"byte_end":8621138,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621139,"byte_end":8621215,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621216,"byte_end":8621294,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621295,"byte_end":8621374,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621375,"byte_end":8621440,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621441,"byte_end":8621444,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621445,"byte_end":8621525,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621526,"byte_end":8621529,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621530,"byte_end":8621604,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621605,"byte_end":8621678,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621679,"byte_end":8621692,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621693,"byte_end":8621696,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621697,"byte_end":8621770,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621771,"byte_end":8621851,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621852,"byte_end":8621927,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621928,"byte_end":8621931,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621932,"byte_end":8621939,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621940,"byte_end":8621967,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8621968,"byte_end":8622015,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622016,"byte_end":8622019,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622020,"byte_end":8622036,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622037,"byte_end":8622040,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622041,"byte_end":8622083,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622084,"byte_end":8622103,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622104,"byte_end":8622130,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622131,"byte_end":8622136,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622137,"byte_end":8622140,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622141,"byte_end":8622158,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622159,"byte_end":8622216,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622217,"byte_end":8622275,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622276,"byte_end":8622328,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622329,"byte_end":8622338,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622339,"byte_end":8622344,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622345,"byte_end":8622348,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622349,"byte_end":8622384,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622385,"byte_end":8622413,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622414,"byte_end":8622419,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622420,"byte_end":8622423,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622424,"byte_end":8622442,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622443,"byte_end":8622464,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622465,"byte_end":8622508,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622509,"byte_end":8622574,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622575,"byte_end":8622578,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622579,"byte_end":8622657,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622658,"byte_end":8622712,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622713,"byte_end":8622716,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622717,"byte_end":8622761,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622762,"byte_end":8622795,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622796,"byte_end":8622814,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622815,"byte_end":8622864,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622865,"byte_end":8622928,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622929,"byte_end":8622932,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622933,"byte_end":8622979,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8622980,"byte_end":8623053,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623054,"byte_end":8623057,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623058,"byte_end":8623132,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623133,"byte_end":8623173,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623174,"byte_end":8623215,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623216,"byte_end":8623278,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623279,"byte_end":8623319,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623320,"byte_end":8623337,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623338,"byte_end":8623351,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623352,"byte_end":8623363,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623364,"byte_end":8623367,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623368,"byte_end":8623401,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623402,"byte_end":8623405,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623406,"byte_end":8623484,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623485,"byte_end":8623539,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623540,"byte_end":8623550,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623551,"byte_end":8623628,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623629,"byte_end":8623707,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623708,"byte_end":8623743,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623744,"byte_end":8623767,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623768,"byte_end":8623831,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623832,"byte_end":8623868,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623869,"byte_end":8623872,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623873,"byte_end":8623923,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8623924,"byte_end":8624003,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624004,"byte_end":8624079,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624080,"byte_end":8624133,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624134,"byte_end":8624180,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624181,"byte_end":8624213,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624214,"byte_end":8624217,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624218,"byte_end":8624296,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624297,"byte_end":8624373,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624374,"byte_end":8624422,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624423,"byte_end":8624479,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624480,"byte_end":8624483,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624484,"byte_end":8624534,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624535,"byte_end":8624610,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624611,"byte_end":8624614,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624615,"byte_end":8624637,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624638,"byte_end":8624674,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624675,"byte_end":8624718,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624719,"byte_end":8624783,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624784,"byte_end":8624841,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624842,"byte_end":8624845,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624846,"byte_end":8624901,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624902,"byte_end":8624956,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624957,"byte_end":8624960,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8624961,"byte_end":8625011,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625012,"byte_end":8625091,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625092,"byte_end":8625117,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625118,"byte_end":8625167,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625168,"byte_end":8625221,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625222,"byte_end":8625225,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625226,"byte_end":8625303,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625304,"byte_end":8625373,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625374,"byte_end":8625439,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625440,"byte_end":8625465,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625466,"byte_end":8625506,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625507,"byte_end":8625562,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625563,"byte_end":8625597,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625598,"byte_end":8625623,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625624,"byte_end":8625645,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625646,"byte_end":8625663,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625664,"byte_end":8625679,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625680,"byte_end":8625683,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625684,"byte_end":8625717,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625718,"byte_end":8625727,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625728,"byte_end":8625731,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625732,"byte_end":8625773,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625774,"byte_end":8625808,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625809,"byte_end":8625818,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625819,"byte_end":8625824,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625825,"byte_end":8625832,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625833,"byte_end":8625836,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625837,"byte_end":8625882,"line_start":402,"line_end":402,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625883,"byte_end":8625936,"line_start":403,"line_end":403,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625937,"byte_end":8625940,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625941,"byte_end":8625968,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625969,"byte_end":8625972,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8625973,"byte_end":8626047,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626048,"byte_end":8626122,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626123,"byte_end":8626199,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626200,"byte_end":8626250,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626251,"byte_end":8626254,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626255,"byte_end":8626332,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626333,"byte_end":8626410,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626411,"byte_end":8626414,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626415,"byte_end":8626492,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626493,"byte_end":8626548,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626549,"byte_end":8626552,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626553,"byte_end":8626632,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626633,"byte_end":8626711,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626712,"byte_end":8626737,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626738,"byte_end":8626741,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626742,"byte_end":8626817,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626818,"byte_end":8626894,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626895,"byte_end":8626962,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626963,"byte_end":8626966,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8626967,"byte_end":8627043,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627044,"byte_end":8627120,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627121,"byte_end":8627195,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627196,"byte_end":8627223,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629357,"byte_end":8629364,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628404,"byte_end":8628492,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628493,"byte_end":8628496,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628497,"byte_end":8628504,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628505,"byte_end":8628525,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628526,"byte_end":8628549,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628550,"byte_end":8628579,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628580,"byte_end":8628583,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628584,"byte_end":8628618,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628619,"byte_end":8628642,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628643,"byte_end":8628646,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628647,"byte_end":8628692,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628693,"byte_end":8628738,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628739,"byte_end":8628759,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628760,"byte_end":8628792,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628793,"byte_end":8628847,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628848,"byte_end":8628893,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628894,"byte_end":8628927,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628928,"byte_end":8628964,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8628965,"byte_end":8629001,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629002,"byte_end":8629037,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629038,"byte_end":8629052,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629053,"byte_end":8629064,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629065,"byte_end":8629070,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629071,"byte_end":8629145,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629146,"byte_end":8629184,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629185,"byte_end":8629240,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629241,"byte_end":8629312,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629313,"byte_end":8629320,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629321,"byte_end":8629328,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629827,"byte_end":8629830,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629587,"byte_end":8629654,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629659,"byte_end":8629662,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629667,"byte_end":8629755,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629760,"byte_end":8629815,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630903,"byte_end":8630907,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630429,"byte_end":8630489,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630494,"byte_end":8630497,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630502,"byte_end":8630578,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630583,"byte_end":8630608,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630613,"byte_end":8630616,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630621,"byte_end":8630714,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630719,"byte_end":8630812,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8630817,"byte_end":8630885,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632829,"byte_end":8632846,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632693,"byte_end":8632793,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8633094,"byte_end":8633103,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632884,"byte_end":8632951,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632956,"byte_end":8632959,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632964,"byte_end":8633056,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8633061,"byte_end":8633082,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":3868},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":10174},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":10180},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":5248},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5265},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5267},{"krate":0,"index":5279},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":3898},{"krate":0,"index":3904},{"krate":0,"index":3909},{"krate":0,"index":3915},{"krate":0,"index":3920},{"krate":0,"index":3924},{"krate":0,"index":3930},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3950},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3958},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3979},{"krate":0,"index":3999},{"krate":0,"index":4004},{"krate":0,"index":4009},{"krate":0,"index":4014},{"krate":0,"index":4020},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4037},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4047},{"krate":0,"index":4048}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633145,"byte_end":8633225,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633226,"byte_end":8633244,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633245,"byte_end":8633248,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633249,"byte_end":8633327,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633328,"byte_end":8633403,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633404,"byte_end":8633482,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633483,"byte_end":8633537,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633538,"byte_end":8633541,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633542,"byte_end":8633618,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633619,"byte_end":8633699,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633700,"byte_end":8633777,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633778,"byte_end":8633828,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633829,"byte_end":8633832,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633833,"byte_end":8633911,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633912,"byte_end":8633969,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633970,"byte_end":8633973,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8633974,"byte_end":8634052,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634053,"byte_end":8634125,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634126,"byte_end":8634142,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634143,"byte_end":8634146,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634147,"byte_end":8634161,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634162,"byte_end":8634165,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634166,"byte_end":8634246,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634247,"byte_end":8634326,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634327,"byte_end":8634404,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634405,"byte_end":8634483,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634484,"byte_end":8634491,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634492,"byte_end":8634495,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634496,"byte_end":8634573,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634574,"byte_end":8634649,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634650,"byte_end":8634730,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634731,"byte_end":8634734,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634735,"byte_end":8634807,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634808,"byte_end":8634886,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634887,"byte_end":8634963,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8634964,"byte_end":8635023,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635024,"byte_end":8635027,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635028,"byte_end":8635106,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635107,"byte_end":8635181,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635182,"byte_end":8635218,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635219,"byte_end":8635222,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635223,"byte_end":8635302,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635303,"byte_end":8635380,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635381,"byte_end":8635456,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635457,"byte_end":8635488,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635489,"byte_end":8635492,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635493,"byte_end":8635507,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635508,"byte_end":8635511,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635512,"byte_end":8635587,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635588,"byte_end":8635666,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635667,"byte_end":8635744,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635745,"byte_end":8635776,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635777,"byte_end":8635780,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635781,"byte_end":8635827,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635828,"byte_end":8635896,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635897,"byte_end":8635947,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635948,"byte_end":8635996,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8635997,"byte_end":8636065,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636066,"byte_end":8636134,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636135,"byte_end":8636187,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636188,"byte_end":8636191,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636192,"byte_end":8636206,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636207,"byte_end":8636210,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636211,"byte_end":8636226,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636227,"byte_end":8636230,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636231,"byte_end":8636238,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636239,"byte_end":8636270,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636271,"byte_end":8636274,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636275,"byte_end":8636293,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636294,"byte_end":8636315,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636316,"byte_end":8636367,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636368,"byte_end":8636405,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636406,"byte_end":8636409,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636410,"byte_end":8636443,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636444,"byte_end":8636498,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636499,"byte_end":8636553,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636554,"byte_end":8636565,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636566,"byte_end":8636569,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636570,"byte_end":8636603,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636604,"byte_end":8636658,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636659,"byte_end":8636713,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636714,"byte_end":8636725,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636726,"byte_end":8636729,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636730,"byte_end":8636759,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636760,"byte_end":8636789,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636790,"byte_end":8636795,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636796,"byte_end":8636803,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636804,"byte_end":8636807,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636808,"byte_end":8636824,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636825,"byte_end":8636828,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636829,"byte_end":8636836,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636837,"byte_end":8636868,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636869,"byte_end":8636872,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636873,"byte_end":8636891,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636892,"byte_end":8636913,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636914,"byte_end":8636963,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636964,"byte_end":8636967,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636968,"byte_end":8636997,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8636998,"byte_end":8637027,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637028,"byte_end":8637057,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637058,"byte_end":8637061,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637062,"byte_end":8637099,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637100,"byte_end":8637142,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637143,"byte_end":8637146,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637147,"byte_end":8637216,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637217,"byte_end":8637220,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637221,"byte_end":8637270,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637271,"byte_end":8637320,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637321,"byte_end":8637326,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638523,"byte_end":8638529,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3892}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637730,"byte_end":8637776,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637777,"byte_end":8637780,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637781,"byte_end":8637841,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637842,"byte_end":8637869,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637870,"byte_end":8637873,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637874,"byte_end":8637888,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637889,"byte_end":8637892,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637893,"byte_end":8637900,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637901,"byte_end":8637932,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637933,"byte_end":8637936,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637937,"byte_end":8637955,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637956,"byte_end":8637977,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8637978,"byte_end":8638029,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638030,"byte_end":8638067,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638068,"byte_end":8638071,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638072,"byte_end":8638105,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638106,"byte_end":8638160,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638161,"byte_end":8638215,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638216,"byte_end":8638227,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638228,"byte_end":8638231,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638232,"byte_end":8638265,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638266,"byte_end":8638320,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638321,"byte_end":8638375,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638376,"byte_end":8638387,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638388,"byte_end":8638391,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638392,"byte_end":8638421,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638422,"byte_end":8638451,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638452,"byte_end":8638457,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638458,"byte_end":8638465,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638466,"byte_end":8638469,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638470,"byte_end":8638511,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639369,"byte_end":8639377,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638566,"byte_end":8638614,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638615,"byte_end":8638618,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638619,"byte_end":8638685,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638686,"byte_end":8638715,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638716,"byte_end":8638719,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638720,"byte_end":8638734,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638735,"byte_end":8638738,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638739,"byte_end":8638746,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638747,"byte_end":8638778,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638779,"byte_end":8638782,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638783,"byte_end":8638801,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638802,"byte_end":8638823,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638824,"byte_end":8638875,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638876,"byte_end":8638913,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638914,"byte_end":8638917,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638918,"byte_end":8638951,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8638952,"byte_end":8639006,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639007,"byte_end":8639061,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639062,"byte_end":8639073,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639074,"byte_end":8639077,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639078,"byte_end":8639111,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639112,"byte_end":8639166,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639167,"byte_end":8639221,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639222,"byte_end":8639233,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639234,"byte_end":8639237,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639238,"byte_end":8639267,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639268,"byte_end":8639297,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639298,"byte_end":8639303,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639304,"byte_end":8639311,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639312,"byte_end":8639315,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639316,"byte_end":8639357,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639920,"byte_end":8639929,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639623,"byte_end":8639676,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639677,"byte_end":8639680,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639681,"byte_end":8639753,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639754,"byte_end":8639831,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639832,"byte_end":8639891,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639933,"byte_end":8639938,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":5248},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640268,"byte_end":8640274,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":5255},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640171,"byte_end":8640246,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640251,"byte_end":8640263,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640480,"byte_end":8640486,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":5255},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640281,"byte_end":8640353,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640358,"byte_end":8640418,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640423,"byte_end":8640426,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640431,"byte_end":8640475,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5255},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640155,"byte_end":8640164,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5258}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8639942,"byte_end":8640009,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640010,"byte_end":8640013,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640014,"byte_end":8640066,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640067,"byte_end":8640117,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5268},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640873,"byte_end":8640878,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640740,"byte_end":8640798,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640803,"byte_end":8640868,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640982,"byte_end":8640988,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640885,"byte_end":8640960,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640965,"byte_end":8640977,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5272},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8641237,"byte_end":8641243,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640995,"byte_end":8641069,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8641074,"byte_end":8641142,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8641147,"byte_end":8641175,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8641180,"byte_end":8641183,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8641188,"byte_end":8641232,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5267},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640721,"byte_end":8640733,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5272}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640496,"byte_end":8640567,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640568,"byte_end":8640571,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640572,"byte_end":8640632,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8640633,"byte_end":8640683,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":3948},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645544,"byte_end":8645551,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643932,"byte_end":8644008,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644009,"byte_end":8644058,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644059,"byte_end":8644062,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644063,"byte_end":8644132,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644133,"byte_end":8644183,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644184,"byte_end":8644187,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644188,"byte_end":8644262,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644263,"byte_end":8644338,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644339,"byte_end":8644407,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644408,"byte_end":8644411,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644412,"byte_end":8644488,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644489,"byte_end":8644570,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644571,"byte_end":8644610,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644611,"byte_end":8644614,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644615,"byte_end":8644661,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644662,"byte_end":8644730,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644731,"byte_end":8644781,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644782,"byte_end":8644834,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644835,"byte_end":8644887,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644888,"byte_end":8644940,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644941,"byte_end":8644944,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644945,"byte_end":8644959,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644960,"byte_end":8644963,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644964,"byte_end":8644971,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8644972,"byte_end":8645003,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645004,"byte_end":8645007,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645008,"byte_end":8645026,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645027,"byte_end":8645048,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645049,"byte_end":8645100,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645101,"byte_end":8645138,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645139,"byte_end":8645142,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645143,"byte_end":8645176,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645177,"byte_end":8645231,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645232,"byte_end":8645286,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645287,"byte_end":8645298,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645299,"byte_end":8645302,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645303,"byte_end":8645336,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645337,"byte_end":8645391,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645392,"byte_end":8645446,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645447,"byte_end":8645458,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645459,"byte_end":8645462,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645463,"byte_end":8645492,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645493,"byte_end":8645522,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645523,"byte_end":8645528,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8645529,"byte_end":8645536,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648618,"byte_end":8648622,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646768,"byte_end":8646842,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646847,"byte_end":8646883,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646888,"byte_end":8646891,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646896,"byte_end":8646971,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646976,"byte_end":8647042,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647047,"byte_end":8647098,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647103,"byte_end":8647106,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647111,"byte_end":8647123,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647128,"byte_end":8647131,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647136,"byte_end":8647210,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647215,"byte_end":8647291,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647296,"byte_end":8647349,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647354,"byte_end":8647357,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647362,"byte_end":8647372,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647377,"byte_end":8647380,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647385,"byte_end":8647457,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647462,"byte_end":8647537,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647542,"byte_end":8647603,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647608,"byte_end":8647611,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647616,"byte_end":8647689,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647694,"byte_end":8647759,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647764,"byte_end":8647782,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647787,"byte_end":8647790,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647795,"byte_end":8647845,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647850,"byte_end":8647910,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647915,"byte_end":8647918,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647923,"byte_end":8647937,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647942,"byte_end":8647945,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647950,"byte_end":8647957,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647962,"byte_end":8647993,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8647998,"byte_end":8648001,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648006,"byte_end":8648024,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648029,"byte_end":8648050,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648055,"byte_end":8648106,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648111,"byte_end":8648148,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648153,"byte_end":8648156,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648161,"byte_end":8648194,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648199,"byte_end":8648253,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648258,"byte_end":8648312,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648317,"byte_end":8648328,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648333,"byte_end":8648336,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648341,"byte_end":8648374,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648379,"byte_end":8648433,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648438,"byte_end":8648492,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648497,"byte_end":8648508,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648513,"byte_end":8648516,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648521,"byte_end":8648550,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648555,"byte_end":8648584,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648589,"byte_end":8648594,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648599,"byte_end":8648606,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649382,"byte_end":8649391,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648787,"byte_end":8648864,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648869,"byte_end":8648898,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648903,"byte_end":8648906,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648911,"byte_end":8648925,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648930,"byte_end":8648933,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648938,"byte_end":8648945,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648950,"byte_end":8648981,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648986,"byte_end":8648989,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8648994,"byte_end":8649012,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649017,"byte_end":8649038,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649043,"byte_end":8649090,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649095,"byte_end":8649098,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649103,"byte_end":8649130,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649135,"byte_end":8649164,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649169,"byte_end":8649172,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649177,"byte_end":8649213,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649218,"byte_end":8649221,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649226,"byte_end":8649255,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649260,"byte_end":8649263,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649268,"byte_end":8649313,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649318,"byte_end":8649348,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649353,"byte_end":8649358,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649363,"byte_end":8649370,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650978,"byte_end":8650992,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649826,"byte_end":8649868,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649873,"byte_end":8649876,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649881,"byte_end":8649957,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8649962,"byte_end":8650035,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650040,"byte_end":8650060,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650065,"byte_end":8650068,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650073,"byte_end":8650083,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650088,"byte_end":8650091,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650096,"byte_end":8650166,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650171,"byte_end":8650239,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650244,"byte_end":8650257,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650262,"byte_end":8650265,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650270,"byte_end":8650322,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650327,"byte_end":8650377,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650382,"byte_end":8650428,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650433,"byte_end":8650493,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650498,"byte_end":8650546,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650551,"byte_end":8650554,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650559,"byte_end":8650573,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650578,"byte_end":8650581,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650586,"byte_end":8650593,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650598,"byte_end":8650629,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650634,"byte_end":8650637,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650642,"byte_end":8650660,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650665,"byte_end":8650686,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650691,"byte_end":8650739,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650744,"byte_end":8650747,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650752,"byte_end":8650795,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650800,"byte_end":8650803,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650808,"byte_end":8650846,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650851,"byte_end":8650854,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650859,"byte_end":8650902,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650907,"byte_end":8650910,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650915,"byte_end":8650944,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650949,"byte_end":8650954,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8650959,"byte_end":8650966,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659706,"byte_end":8659714,"line_start":831,"line_end":831,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658047,"byte_end":8658120,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658125,"byte_end":8658128,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658133,"byte_end":8658205,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658210,"byte_end":8658234,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658239,"byte_end":8658242,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658247,"byte_end":8658327,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658332,"byte_end":8658406,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658411,"byte_end":8658414,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658419,"byte_end":8658492,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658497,"byte_end":8658571,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658576,"byte_end":8658579,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658584,"byte_end":8658660,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658665,"byte_end":8658741,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658746,"byte_end":8658817,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658822,"byte_end":8658895,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658900,"byte_end":8658973,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658978,"byte_end":8659049,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659054,"byte_end":8659106,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659111,"byte_end":8659114,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659119,"byte_end":8659171,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659176,"byte_end":8659236,"line_start":811,"line_end":811,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659241,"byte_end":8659291,"line_start":812,"line_end":812,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659296,"byte_end":8659299,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659304,"byte_end":8659318,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659323,"byte_end":8659326,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659331,"byte_end":8659338,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659343,"byte_end":8659374,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659379,"byte_end":8659382,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659387,"byte_end":8659405,"line_start":819,"line_end":819,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659410,"byte_end":8659431,"line_start":820,"line_end":820,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659436,"byte_end":8659486,"line_start":821,"line_end":821,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659491,"byte_end":8659494,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659499,"byte_end":8659539,"line_start":823,"line_end":823,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659544,"byte_end":8659547,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659552,"byte_end":8659581,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659586,"byte_end":8659589,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659594,"byte_end":8659637,"line_start":827,"line_end":827,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659642,"byte_end":8659672,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659677,"byte_end":8659682,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659687,"byte_end":8659694,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659956,"byte_end":8659965,"line_start":838,"line_end":838,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8659883,"byte_end":8659944,"line_start":837,"line_end":837,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663996,"byte_end":8664000,"line_start":952,"line_end":952,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661780,"byte_end":8661826,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661831,"byte_end":8661834,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661839,"byte_end":8661907,"line_start":890,"line_end":890,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661912,"byte_end":8661944,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661949,"byte_end":8661952,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8661957,"byte_end":8662027,"line_start":893,"line_end":893,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662032,"byte_end":8662106,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662111,"byte_end":8662114,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662119,"byte_end":8662195,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662200,"byte_end":8662276,"line_start":897,"line_end":897,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662281,"byte_end":8662349,"line_start":898,"line_end":898,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662354,"byte_end":8662427,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662432,"byte_end":8662501,"line_start":900,"line_end":900,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662506,"byte_end":8662551,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662556,"byte_end":8662559,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662564,"byte_end":8662614,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662619,"byte_end":8662671,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662676,"byte_end":8662679,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662684,"byte_end":8662698,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662703,"byte_end":8662706,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662711,"byte_end":8662718,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662723,"byte_end":8662754,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662759,"byte_end":8662762,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662767,"byte_end":8662785,"line_start":911,"line_end":911,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662790,"byte_end":8662811,"line_start":912,"line_end":912,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662816,"byte_end":8662867,"line_start":913,"line_end":913,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662872,"byte_end":8662909,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662914,"byte_end":8662917,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662922,"byte_end":8662955,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8662960,"byte_end":8663014,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663019,"byte_end":8663073,"line_start":918,"line_end":918,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663078,"byte_end":8663089,"line_start":919,"line_end":919,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663094,"byte_end":8663097,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663102,"byte_end":8663135,"line_start":921,"line_end":921,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663140,"byte_end":8663194,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663199,"byte_end":8663253,"line_start":923,"line_end":923,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663258,"byte_end":8663269,"line_start":924,"line_end":924,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663274,"byte_end":8663277,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663282,"byte_end":8663311,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663316,"byte_end":8663345,"line_start":927,"line_end":927,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663350,"byte_end":8663355,"line_start":928,"line_end":928,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663360,"byte_end":8663367,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663372,"byte_end":8663375,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663380,"byte_end":8663396,"line_start":931,"line_end":931,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663401,"byte_end":8663404,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663409,"byte_end":8663416,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663421,"byte_end":8663452,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663457,"byte_end":8663460,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663465,"byte_end":8663483,"line_start":936,"line_end":936,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663488,"byte_end":8663509,"line_start":937,"line_end":937,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663514,"byte_end":8663563,"line_start":938,"line_end":938,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663568,"byte_end":8663571,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663576,"byte_end":8663605,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663610,"byte_end":8663639,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663644,"byte_end":8663673,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663678,"byte_end":8663681,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663686,"byte_end":8663723,"line_start":944,"line_end":944,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663728,"byte_end":8663770,"line_start":945,"line_end":945,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663775,"byte_end":8663778,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663783,"byte_end":8663852,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663857,"byte_end":8663860,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663865,"byte_end":8663914,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663919,"byte_end":8663968,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8663973,"byte_end":8663978,"line_start":951,"line_end":951,"column_start":5,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4124},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4352},{"krate":0,"index":4398},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4472}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672319,"byte_end":8672388,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672389,"byte_end":8672412,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672413,"byte_end":8672416,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672417,"byte_end":8672492,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672493,"byte_end":8672571,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672572,"byte_end":8672652,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672653,"byte_end":8672731,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672732,"byte_end":8672805,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672806,"byte_end":8672871,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672872,"byte_end":8672875,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672876,"byte_end":8672956,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8672957,"byte_end":8673035,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673036,"byte_end":8673112,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673113,"byte_end":8673192,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673193,"byte_end":8673272,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673273,"byte_end":8673344,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673345,"byte_end":8673367,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673368,"byte_end":8673371,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673372,"byte_end":8673391,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673392,"byte_end":8673395,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673396,"byte_end":8673462,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673463,"byte_end":8673543,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673544,"byte_end":8673621,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673622,"byte_end":8673625,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673626,"byte_end":8673696,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673697,"byte_end":8673776,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673777,"byte_end":8673800,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673801,"byte_end":8673804,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673805,"byte_end":8673825,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673826,"byte_end":8673829,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673830,"byte_end":8673910,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673911,"byte_end":8673991,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8673992,"byte_end":8674070,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674071,"byte_end":8674143,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674144,"byte_end":8674218,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674219,"byte_end":8674231,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674232,"byte_end":8674235,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674236,"byte_end":8674283,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674284,"byte_end":8674287,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674288,"byte_end":8674369,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674370,"byte_end":8674405,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674406,"byte_end":8674409,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674410,"byte_end":8674490,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674491,"byte_end":8674571,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674572,"byte_end":8674650,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674651,"byte_end":8674729,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674730,"byte_end":8674809,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674810,"byte_end":8674871,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674872,"byte_end":8674875,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674876,"byte_end":8674956,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8674957,"byte_end":8675035,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675036,"byte_end":8675102,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675103,"byte_end":8675185,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675186,"byte_end":8675250,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675251,"byte_end":8675254,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675255,"byte_end":8675296,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675297,"byte_end":8675342,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675343,"byte_end":8675396,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675397,"byte_end":8675452,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675453,"byte_end":8675512,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675513,"byte_end":8675573,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675574,"byte_end":8675619,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675620,"byte_end":8675710,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689575,"byte_end":8689581,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4138}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689450,"byte_end":8689495,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689496,"byte_end":8689499,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689500,"byte_end":8689563,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4145},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690090,"byte_end":8690098,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4147}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689962,"byte_end":8690010,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690011,"byte_end":8690014,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690015,"byte_end":8690078,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691486,"byte_end":8691493,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690379,"byte_end":8690459,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690460,"byte_end":8690501,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690502,"byte_end":8690505,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690506,"byte_end":8690583,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690584,"byte_end":8690609,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690610,"byte_end":8690613,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690614,"byte_end":8690693,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690694,"byte_end":8690742,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690743,"byte_end":8690746,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690747,"byte_end":8690826,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690827,"byte_end":8690902,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690903,"byte_end":8690969,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690970,"byte_end":8690973,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690974,"byte_end":8690988,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690989,"byte_end":8690992,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690993,"byte_end":8691004,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691005,"byte_end":8691031,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691032,"byte_end":8691035,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691036,"byte_end":8691054,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691055,"byte_end":8691076,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691077,"byte_end":8691127,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691128,"byte_end":8691131,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691132,"byte_end":8691165,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691166,"byte_end":8691194,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691195,"byte_end":8691245,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691246,"byte_end":8691295,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691296,"byte_end":8691323,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691324,"byte_end":8691341,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691342,"byte_end":8691355,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691356,"byte_end":8691367,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691368,"byte_end":8691371,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691372,"byte_end":8691417,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691418,"byte_end":8691454,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691455,"byte_end":8691464,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691465,"byte_end":8691470,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691471,"byte_end":8691478,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693175,"byte_end":8693179,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692093,"byte_end":8692139,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692144,"byte_end":8692147,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692152,"byte_end":8692224,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692229,"byte_end":8692283,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692288,"byte_end":8692291,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692296,"byte_end":8692310,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692315,"byte_end":8692318,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692323,"byte_end":8692330,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692335,"byte_end":8692361,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692366,"byte_end":8692369,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692374,"byte_end":8692392,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692397,"byte_end":8692418,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692423,"byte_end":8692473,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692478,"byte_end":8692481,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692486,"byte_end":8692519,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692524,"byte_end":8692568,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692573,"byte_end":8692584,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692589,"byte_end":8692592,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692597,"byte_end":8692648,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692653,"byte_end":8692695,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692700,"byte_end":8692705,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692710,"byte_end":8692717,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692722,"byte_end":8692725,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692730,"byte_end":8692754,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692759,"byte_end":8692762,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692767,"byte_end":8692774,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692779,"byte_end":8692805,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692810,"byte_end":8692813,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692818,"byte_end":8692836,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692841,"byte_end":8692862,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692867,"byte_end":8692917,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692922,"byte_end":8692925,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692930,"byte_end":8692970,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8692975,"byte_end":8693015,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693020,"byte_end":8693023,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693028,"byte_end":8693079,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693084,"byte_end":8693135,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693140,"byte_end":8693145,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693150,"byte_end":8693157,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4162},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693345,"byte_end":8693354,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4163},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694010,"byte_end":8694018,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693447,"byte_end":8693520,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693525,"byte_end":8693528,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693533,"byte_end":8693605,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693610,"byte_end":8693681,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693686,"byte_end":8693739,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693744,"byte_end":8693747,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693752,"byte_end":8693824,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693829,"byte_end":8693853,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693858,"byte_end":8693861,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693866,"byte_end":8693936,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8693941,"byte_end":8693998,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694336,"byte_end":8694341,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694099,"byte_end":8694163,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694168,"byte_end":8694171,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694176,"byte_end":8694251,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694256,"byte_end":8694324,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696431,"byte_end":8696435,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694787,"byte_end":8694838,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694843,"byte_end":8694846,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694851,"byte_end":8694927,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694932,"byte_end":8695008,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695013,"byte_end":8695087,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695092,"byte_end":8695167,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695172,"byte_end":8695241,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695246,"byte_end":8695318,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695323,"byte_end":8695354,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695359,"byte_end":8695362,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695367,"byte_end":8695379,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695384,"byte_end":8695387,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695392,"byte_end":8695465,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695470,"byte_end":8695544,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695549,"byte_end":8695609,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695614,"byte_end":8695617,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695622,"byte_end":8695652,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695657,"byte_end":8695683,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695688,"byte_end":8695691,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695696,"byte_end":8695710,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695715,"byte_end":8695718,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695723,"byte_end":8695793,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695798,"byte_end":8695837,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695842,"byte_end":8695845,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695850,"byte_end":8695861,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695866,"byte_end":8695892,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695897,"byte_end":8695900,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695905,"byte_end":8695923,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695928,"byte_end":8695949,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8695954,"byte_end":8696002,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696007,"byte_end":8696010,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696015,"byte_end":8696048,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696053,"byte_end":8696081,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696086,"byte_end":8696136,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696141,"byte_end":8696190,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696195,"byte_end":8696222,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696227,"byte_end":8696244,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696249,"byte_end":8696262,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696267,"byte_end":8696278,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696283,"byte_end":8696286,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696291,"byte_end":8696336,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696341,"byte_end":8696377,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696382,"byte_end":8696391,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696396,"byte_end":8696401,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696406,"byte_end":8696413,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699168,"byte_end":8699176,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696856,"byte_end":8696915,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696920,"byte_end":8696923,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8696928,"byte_end":8697007,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697012,"byte_end":8697087,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697092,"byte_end":8697170,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697175,"byte_end":8697217,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697222,"byte_end":8697225,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697230,"byte_end":8697302,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697307,"byte_end":8697358,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697363,"byte_end":8697366,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697371,"byte_end":8697383,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697388,"byte_end":8697391,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697396,"byte_end":8697467,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697472,"byte_end":8697548,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697553,"byte_end":8697575,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697580,"byte_end":8697583,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697588,"byte_end":8697661,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697666,"byte_end":8697740,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697745,"byte_end":8697805,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697810,"byte_end":8697813,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697818,"byte_end":8697844,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697849,"byte_end":8697887,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697892,"byte_end":8697916,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697921,"byte_end":8697951,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697956,"byte_end":8697959,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697964,"byte_end":8697978,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697983,"byte_end":8697986,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8697991,"byte_end":8697998,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698003,"byte_end":8698029,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698034,"byte_end":8698037,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698042,"byte_end":8698060,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698065,"byte_end":8698086,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698091,"byte_end":8698137,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698142,"byte_end":8698191,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698196,"byte_end":8698230,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698235,"byte_end":8698238,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698243,"byte_end":8698276,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698281,"byte_end":8698320,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698325,"byte_end":8698364,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698369,"byte_end":8698431,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698436,"byte_end":8698447,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698452,"byte_end":8698455,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698460,"byte_end":8698493,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698498,"byte_end":8698547,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698552,"byte_end":8698599,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698604,"byte_end":8698640,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698645,"byte_end":8698656,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698661,"byte_end":8698664,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698669,"byte_end":8698689,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698694,"byte_end":8698733,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698738,"byte_end":8698783,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698788,"byte_end":8698791,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698796,"byte_end":8698835,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698840,"byte_end":8698885,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698890,"byte_end":8698893,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698898,"byte_end":8698947,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698952,"byte_end":8698983,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8698988,"byte_end":8699050,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699055,"byte_end":8699120,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699125,"byte_end":8699134,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699139,"byte_end":8699144,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699149,"byte_end":8699156,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700993,"byte_end":8701005,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699297,"byte_end":8699377,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699382,"byte_end":8699385,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699390,"byte_end":8699467,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699472,"byte_end":8699550,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699555,"byte_end":8699603,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699608,"byte_end":8699611,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699616,"byte_end":8699642,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699647,"byte_end":8699650,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699655,"byte_end":8699667,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699672,"byte_end":8699675,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699680,"byte_end":8699753,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699758,"byte_end":8699815,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699820,"byte_end":8699901,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699906,"byte_end":8699909,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699914,"byte_end":8699944,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699949,"byte_end":8699975,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699980,"byte_end":8699983,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8699988,"byte_end":8700002,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700007,"byte_end":8700010,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700015,"byte_end":8700093,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700098,"byte_end":8700169,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700174,"byte_end":8700177,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700182,"byte_end":8700193,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700198,"byte_end":8700224,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700229,"byte_end":8700272,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700277,"byte_end":8700280,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700285,"byte_end":8700303,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700308,"byte_end":8700329,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700334,"byte_end":8700382,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700387,"byte_end":8700390,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700395,"byte_end":8700428,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700433,"byte_end":8700461,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700466,"byte_end":8700552,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700557,"byte_end":8700610,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700615,"byte_end":8700642,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700647,"byte_end":8700664,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700669,"byte_end":8700682,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700687,"byte_end":8700698,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700703,"byte_end":8700706,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700711,"byte_end":8700756,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700761,"byte_end":8700797,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700802,"byte_end":8700858,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700863,"byte_end":8700872,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700877,"byte_end":8700882,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700887,"byte_end":8700894,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8700899,"byte_end":8700923,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702789,"byte_end":8702799,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701708,"byte_end":8701790,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701795,"byte_end":8701798,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701803,"byte_end":8701895,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701900,"byte_end":8701927,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701932,"byte_end":8701935,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8701940,"byte_end":8702033,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702038,"byte_end":8702133,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702138,"byte_end":8702231,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702236,"byte_end":8702331,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702336,"byte_end":8702383,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702388,"byte_end":8702391,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702396,"byte_end":8702490,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702495,"byte_end":8702563,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702568,"byte_end":8702571,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702576,"byte_end":8702660,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702665,"byte_end":8702758,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702763,"byte_end":8702777,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705355,"byte_end":8705361,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702944,"byte_end":8702987,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8702992,"byte_end":8702995,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703000,"byte_end":8703090,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703095,"byte_end":8703188,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703193,"byte_end":8703284,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703289,"byte_end":8703377,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703382,"byte_end":8703385,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703390,"byte_end":8703482,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703487,"byte_end":8703534,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703539,"byte_end":8703542,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703547,"byte_end":8703563,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703568,"byte_end":8703571,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703576,"byte_end":8703671,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703676,"byte_end":8703770,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703775,"byte_end":8703869,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703874,"byte_end":8703948,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703953,"byte_end":8703956,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703961,"byte_end":8703979,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703984,"byte_end":8703994,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8703999,"byte_end":8704032,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704037,"byte_end":8704089,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704094,"byte_end":8704121,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704126,"byte_end":8704140,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704145,"byte_end":8704159,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704164,"byte_end":8704171,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704176,"byte_end":8704181,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704186,"byte_end":8704193,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704198,"byte_end":8704201,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704206,"byte_end":8704299,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704304,"byte_end":8704399,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704404,"byte_end":8704490,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704495,"byte_end":8704590,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704595,"byte_end":8704659,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704664,"byte_end":8704667,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704672,"byte_end":8704766,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704771,"byte_end":8704836,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704841,"byte_end":8704844,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704849,"byte_end":8704867,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704872,"byte_end":8704882,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704887,"byte_end":8704920,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704925,"byte_end":8704959,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8704964,"byte_end":8705004,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705009,"byte_end":8705071,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705076,"byte_end":8705090,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705095,"byte_end":8705157,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705162,"byte_end":8705182,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705187,"byte_end":8705194,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705199,"byte_end":8705239,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705244,"byte_end":8705271,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705276,"byte_end":8705290,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705295,"byte_end":8705309,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705314,"byte_end":8705321,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705326,"byte_end":8705331,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8705336,"byte_end":8705343,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":4234},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8707353,"byte_end":8707359,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":4233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731252,"byte_end":8731267,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":4410}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731094,"byte_end":8731148,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731149,"byte_end":8731152,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731153,"byte_end":8731185,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731186,"byte_end":8731240,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731845,"byte_end":8731862,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":4419}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731684,"byte_end":8731741,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731742,"byte_end":8731745,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731746,"byte_end":8731778,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731779,"byte_end":8731833,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":4423},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732673,"byte_end":8732690,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732161,"byte_end":8732237,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732238,"byte_end":8732248,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732249,"byte_end":8732252,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732253,"byte_end":8732333,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732334,"byte_end":8732413,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732414,"byte_end":8732427,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732428,"byte_end":8732431,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732432,"byte_end":8732511,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732512,"byte_end":8732588,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732589,"byte_end":8732665,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733138,"byte_end":8733147,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734310,"byte_end":8734314,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733240,"byte_end":8733286,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733291,"byte_end":8733294,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733299,"byte_end":8733371,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733376,"byte_end":8733430,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733435,"byte_end":8733438,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733443,"byte_end":8733457,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733462,"byte_end":8733465,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733470,"byte_end":8733477,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733482,"byte_end":8733508,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733513,"byte_end":8733516,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733521,"byte_end":8733539,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733544,"byte_end":8733565,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733570,"byte_end":8733623,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733628,"byte_end":8733631,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733636,"byte_end":8733669,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733674,"byte_end":8733712,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733717,"byte_end":8733728,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733733,"byte_end":8733736,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733741,"byte_end":8733792,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733797,"byte_end":8733839,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733844,"byte_end":8733849,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733854,"byte_end":8733861,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733866,"byte_end":8733869,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733874,"byte_end":8733898,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733903,"byte_end":8733906,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733911,"byte_end":8733918,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733923,"byte_end":8733949,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733954,"byte_end":8733957,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733962,"byte_end":8733980,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8733985,"byte_end":8734006,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734011,"byte_end":8734064,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734069,"byte_end":8734072,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734077,"byte_end":8734111,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734116,"byte_end":8734150,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734155,"byte_end":8734158,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734163,"byte_end":8734214,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734219,"byte_end":8734270,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734275,"byte_end":8734280,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734285,"byte_end":8734292,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4435},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734999,"byte_end":8735007,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734436,"byte_end":8734509,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734514,"byte_end":8734517,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734522,"byte_end":8734594,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734599,"byte_end":8734670,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734675,"byte_end":8734728,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734733,"byte_end":8734736,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734741,"byte_end":8734813,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734818,"byte_end":8734842,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734847,"byte_end":8734850,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734855,"byte_end":8734925,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8734930,"byte_end":8734987,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4436},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735325,"byte_end":8735330,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735088,"byte_end":8735152,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735157,"byte_end":8735160,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735165,"byte_end":8735240,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735245,"byte_end":8735313,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736453,"byte_end":8736457,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735765,"byte_end":8735839,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735844,"byte_end":8735847,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735852,"byte_end":8735937,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735942,"byte_end":8736023,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736028,"byte_end":8736096,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736101,"byte_end":8736104,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736109,"byte_end":8736182,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736187,"byte_end":8736258,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736263,"byte_end":8736340,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736345,"byte_end":8736348,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736353,"byte_end":8736392,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8736397,"byte_end":8736441,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":4445},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":5298},{"krate":0,"index":5302},{"krate":0,"index":4448},{"krate":0,"index":4451},{"krate":0,"index":5305},{"krate":0,"index":5313},{"krate":0,"index":4453},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":5316},{"krate":0,"index":5319},{"krate":0,"index":4461},{"krate":0,"index":4463},{"krate":0,"index":5321},{"krate":0,"index":5329},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4471},{"krate":0,"index":5341},{"krate":0,"index":5349},{"krate":0,"index":5336},{"krate":0,"index":5338}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736575,"byte_end":8736598,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5298},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736702,"byte_end":8736711,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736638,"byte_end":8736673,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5301},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736715,"byte_end":8736720,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737264,"byte_end":8737268,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":5305},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737132,"byte_end":8737200,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737205,"byte_end":8737259,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737369,"byte_end":8737375,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":5305},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737278,"byte_end":8737347,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737352,"byte_end":8737364,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":5305},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737110,"byte_end":8737122,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5310}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736964,"byte_end":8737035,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737036,"byte_end":8737083,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738013,"byte_end":8738022,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737951,"byte_end":8737984,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5322},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738527,"byte_end":8738532,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738399,"byte_end":8738466,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738471,"byte_end":8738522,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738652,"byte_end":8738658,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738538,"byte_end":8738600,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738605,"byte_end":8738647,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":5321},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738380,"byte_end":8738392,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":5322},{"krate":0,"index":5324}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738233,"byte_end":8738303,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738304,"byte_end":8738342,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5331},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739149,"byte_end":8739160,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739048,"byte_end":8739120,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739766,"byte_end":8739773,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739886,"byte_end":8739892,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5341},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739604,"byte_end":8739620,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5346}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4482},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744806,"byte_end":8744811,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":4484},{"krate":0,"index":4485}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740553,"byte_end":8740591,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740592,"byte_end":8740595,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740596,"byte_end":8740674,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740675,"byte_end":8740751,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740752,"byte_end":8740776,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740777,"byte_end":8740780,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740781,"byte_end":8740822,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740823,"byte_end":8740826,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740827,"byte_end":8740907,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740908,"byte_end":8740987,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8740988,"byte_end":8741051,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741052,"byte_end":8741055,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741056,"byte_end":8741135,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741136,"byte_end":8741216,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741217,"byte_end":8741295,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741296,"byte_end":8741375,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741376,"byte_end":8741454,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741455,"byte_end":8741535,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741536,"byte_end":8741549,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741550,"byte_end":8741553,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741554,"byte_end":8741633,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741634,"byte_end":8741710,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741711,"byte_end":8741788,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741789,"byte_end":8741822,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741823,"byte_end":8741826,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741827,"byte_end":8741902,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741903,"byte_end":8741981,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8741982,"byte_end":8742024,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742025,"byte_end":8742028,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742029,"byte_end":8742056,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742057,"byte_end":8742105,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742106,"byte_end":8742184,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742185,"byte_end":8742188,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742189,"byte_end":8742204,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742205,"byte_end":8742208,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742209,"byte_end":8742227,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742228,"byte_end":8742255,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742256,"byte_end":8742279,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742280,"byte_end":8742283,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742284,"byte_end":8742302,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742303,"byte_end":8742324,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742325,"byte_end":8742369,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742370,"byte_end":8742409,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742410,"byte_end":8742413,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742414,"byte_end":8742447,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742448,"byte_end":8742494,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742495,"byte_end":8742518,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742519,"byte_end":8742530,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742531,"byte_end":8742534,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742535,"byte_end":8742577,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742578,"byte_end":8742597,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742598,"byte_end":8742603,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742604,"byte_end":8742611,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742612,"byte_end":8742615,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742616,"byte_end":8742619,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742620,"byte_end":8742638,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742639,"byte_end":8742666,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742667,"byte_end":8742690,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742691,"byte_end":8742694,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742695,"byte_end":8742713,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742714,"byte_end":8742735,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742736,"byte_end":8742780,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742781,"byte_end":8742784,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742785,"byte_end":8742808,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742809,"byte_end":8742855,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742856,"byte_end":8742893,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742894,"byte_end":8742926,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742927,"byte_end":8742984,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8742985,"byte_end":8743016,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743017,"byte_end":8743058,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743059,"byte_end":8743076,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743077,"byte_end":8743092,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743093,"byte_end":8743102,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743103,"byte_end":8743106,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743107,"byte_end":8743121,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743122,"byte_end":8743164,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743165,"byte_end":8743187,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743188,"byte_end":8743201,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743202,"byte_end":8743211,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743212,"byte_end":8743246,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743247,"byte_end":8743252,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743253,"byte_end":8743260,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743261,"byte_end":8743337,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743338,"byte_end":8743411,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743412,"byte_end":8743427,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743428,"byte_end":8743503,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743504,"byte_end":8743580,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743581,"byte_end":8743633,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743634,"byte_end":8743637,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743638,"byte_end":8743716,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743717,"byte_end":8743797,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743798,"byte_end":8743874,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743875,"byte_end":8743952,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8743953,"byte_end":8744031,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744032,"byte_end":8744112,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744113,"byte_end":8744193,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744194,"byte_end":8744263,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744264,"byte_end":8744267,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744268,"byte_end":8744347,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744348,"byte_end":8744427,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744428,"byte_end":8744506,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744507,"byte_end":8744568,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744569,"byte_end":8744572,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744573,"byte_end":8744600,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744601,"byte_end":8744638,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744639,"byte_end":8744673,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744674,"byte_end":8744723,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744724,"byte_end":8744761,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744762,"byte_end":8744794,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4486},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745240,"byte_end":8745250,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":4489}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744879,"byte_end":8744910,"line_start":123,"line_end":123,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744911,"byte_end":8744914,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744915,"byte_end":8744994,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8744995,"byte_end":8745070,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745071,"byte_end":8745104,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745105,"byte_end":8745108,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745109,"byte_end":8745187,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745188,"byte_end":8745228,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4490},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746037,"byte_end":8746052,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":4492}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745295,"byte_end":8745333,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745334,"byte_end":8745337,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745338,"byte_end":8745419,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745420,"byte_end":8745500,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745501,"byte_end":8745575,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745576,"byte_end":8745637,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745638,"byte_end":8745641,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745642,"byte_end":8745721,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745722,"byte_end":8745800,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745801,"byte_end":8745869,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745870,"byte_end":8745873,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745874,"byte_end":8745952,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745953,"byte_end":8745993,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745994,"byte_end":8745997,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8745998,"byte_end":8746025,"line_start":149,"line_end":149,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746760,"byte_end":8746772,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746552,"byte_end":8746609,"line_start":162,"line_end":162,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746610,"byte_end":8746613,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746614,"byte_end":8746686,"line_start":164,"line_end":164,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746687,"byte_end":8746690,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746691,"byte_end":8746731,"line_start":166,"line_end":166,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747988,"byte_end":8747991,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747785,"byte_end":8747843,"line_start":203,"line_end":203,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747848,"byte_end":8747851,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747856,"byte_end":8747870,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747875,"byte_end":8747878,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747883,"byte_end":8747890,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747895,"byte_end":8747922,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747927,"byte_end":8747930,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747935,"byte_end":8747964,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747969,"byte_end":8747976,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748616,"byte_end":8748620,"line_start":239,"line_end":239,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748156,"byte_end":8748202,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748207,"byte_end":8748253,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748258,"byte_end":8748329,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748334,"byte_end":8748337,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748342,"byte_end":8748356,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748361,"byte_end":8748364,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748369,"byte_end":8748376,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748381,"byte_end":8748408,"line_start":229,"line_end":229,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748413,"byte_end":8748416,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748421,"byte_end":8748439,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748444,"byte_end":8748465,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748470,"byte_end":8748504,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748509,"byte_end":8748512,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748517,"byte_end":8748556,"line_start":235,"line_end":235,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748561,"byte_end":8748576,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748581,"byte_end":8748586,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748591,"byte_end":8748598,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749647,"byte_end":8749657,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748726,"byte_end":8748800,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748805,"byte_end":8748872,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748877,"byte_end":8748901,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748906,"byte_end":8748909,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748914,"byte_end":8748987,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8748992,"byte_end":8749065,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749070,"byte_end":8749141,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749146,"byte_end":8749221,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749226,"byte_end":8749268,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749273,"byte_end":8749276,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749281,"byte_end":8749295,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749300,"byte_end":8749303,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749308,"byte_end":8749315,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749320,"byte_end":8749347,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749352,"byte_end":8749375,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749380,"byte_end":8749383,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749388,"byte_end":8749406,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749411,"byte_end":8749432,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749437,"byte_end":8749481,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749486,"byte_end":8749489,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749494,"byte_end":8749547,"line_start":264,"line_end":264,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749552,"byte_end":8749567,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749572,"byte_end":8749577,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749582,"byte_end":8749589,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749594,"byte_end":8749597,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8749602,"byte_end":8749629,"line_start":269,"line_end":269,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750534,"byte_end":8750542,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750066,"byte_end":8750135,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750140,"byte_end":8750182,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750187,"byte_end":8750190,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750195,"byte_end":8750229,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750234,"byte_end":8750248,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750253,"byte_end":8750256,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750261,"byte_end":8750268,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750273,"byte_end":8750300,"line_start":290,"line_end":290,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750305,"byte_end":8750368,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750373,"byte_end":8750376,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750381,"byte_end":8750411,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750416,"byte_end":8750419,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750424,"byte_end":8750454,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750459,"byte_end":8750481,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750486,"byte_end":8750498,"line_start":297,"line_end":297,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750503,"byte_end":8750510,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750515,"byte_end":8750522,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751663,"byte_end":8751677,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750751,"byte_end":8750825,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750830,"byte_end":8750867,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750872,"byte_end":8750875,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750880,"byte_end":8750948,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8750953,"byte_end":8751026,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751031,"byte_end":8751107,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751112,"byte_end":8751186,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751191,"byte_end":8751239,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751244,"byte_end":8751247,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751252,"byte_end":8751286,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751291,"byte_end":8751318,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751323,"byte_end":8751337,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751342,"byte_end":8751345,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751350,"byte_end":8751357,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751362,"byte_end":8751389,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751394,"byte_end":8751417,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751422,"byte_end":8751485,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751490,"byte_end":8751493,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751498,"byte_end":8751538,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751543,"byte_end":8751546,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751551,"byte_end":8751595,"line_start":327,"line_end":327,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751600,"byte_end":8751622,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751627,"byte_end":8751639,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751644,"byte_end":8751651,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752235,"byte_end":8752245,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751902,"byte_end":8751956,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751961,"byte_end":8751975,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751980,"byte_end":8751983,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8751988,"byte_end":8751995,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752000,"byte_end":8752027,"line_start":342,"line_end":342,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752032,"byte_end":8752035,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752040,"byte_end":8752058,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752063,"byte_end":8752084,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752089,"byte_end":8752123,"line_start":346,"line_end":346,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752128,"byte_end":8752131,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752136,"byte_end":8752171,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752176,"byte_end":8752201,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752206,"byte_end":8752211,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752216,"byte_end":8752223,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757650,"byte_end":8757656,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":5358},{"krate":0,"index":5359}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8754840,"byte_end":8754876,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8754877,"byte_end":8754880,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8754881,"byte_end":8754957,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8754958,"byte_end":8755038,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755039,"byte_end":8755080,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755081,"byte_end":8755084,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755085,"byte_end":8755159,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755160,"byte_end":8755241,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755242,"byte_end":8755308,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755309,"byte_end":8755312,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755313,"byte_end":8755371,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755372,"byte_end":8755452,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755453,"byte_end":8755533,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755534,"byte_end":8755613,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755614,"byte_end":8755664,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755665,"byte_end":8755668,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755669,"byte_end":8755748,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755749,"byte_end":8755824,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755825,"byte_end":8755895,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755896,"byte_end":8755899,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755900,"byte_end":8755980,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8755981,"byte_end":8756054,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756055,"byte_end":8756126,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756127,"byte_end":8756130,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756131,"byte_end":8756145,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756146,"byte_end":8756149,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756150,"byte_end":8756166,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756167,"byte_end":8756170,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756171,"byte_end":8756178,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756179,"byte_end":8756207,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756208,"byte_end":8756231,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756232,"byte_end":8756235,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756236,"byte_end":8756254,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756255,"byte_end":8756276,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756277,"byte_end":8756322,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756323,"byte_end":8756360,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756361,"byte_end":8756364,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756365,"byte_end":8756398,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756399,"byte_end":8756436,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756437,"byte_end":8756483,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756484,"byte_end":8756495,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756496,"byte_end":8756499,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756500,"byte_end":8756541,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756542,"byte_end":8756566,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756567,"byte_end":8756572,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756573,"byte_end":8756580,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756581,"byte_end":8756584,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756585,"byte_end":8756610,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756611,"byte_end":8756614,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756615,"byte_end":8756622,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756623,"byte_end":8756651,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756652,"byte_end":8756655,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756656,"byte_end":8756691,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756692,"byte_end":8756717,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756718,"byte_end":8756721,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756722,"byte_end":8756745,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756746,"byte_end":8756781,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756782,"byte_end":8756805,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756806,"byte_end":8756811,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756812,"byte_end":8756815,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756816,"byte_end":8756840,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756841,"byte_end":8756879,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756880,"byte_end":8756919,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756920,"byte_end":8756954,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756955,"byte_end":8756958,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8756959,"byte_end":8757014,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757015,"byte_end":8757048,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757049,"byte_end":8757058,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757059,"byte_end":8757062,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757063,"byte_end":8757102,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757103,"byte_end":8757121,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757122,"byte_end":8757153,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757154,"byte_end":8757232,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757233,"byte_end":8757266,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757267,"byte_end":8757284,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757285,"byte_end":8757288,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757289,"byte_end":8757339,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757340,"byte_end":8757385,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757386,"byte_end":8757399,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757400,"byte_end":8757409,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757410,"byte_end":8757415,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757416,"byte_end":8757423,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757424,"byte_end":8757427,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757428,"byte_end":8757457,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757458,"byte_end":8757499,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757500,"byte_end":8757544,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757545,"byte_end":8757579,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8757580,"byte_end":8757621,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4590},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758888,"byte_end":8758891,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758684,"byte_end":8758740,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758745,"byte_end":8758748,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758753,"byte_end":8758767,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758772,"byte_end":8758775,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758780,"byte_end":8758787,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758792,"byte_end":8758820,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758825,"byte_end":8758828,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758833,"byte_end":8758864,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758869,"byte_end":8758876,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759963,"byte_end":8759971,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759033,"byte_end":8759061,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759066,"byte_end":8759069,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759074,"byte_end":8759150,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759155,"byte_end":8759229,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759234,"byte_end":8759309,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759314,"byte_end":8759383,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759388,"byte_end":8759391,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759396,"byte_end":8759428,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759433,"byte_end":8759436,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759441,"byte_end":8759455,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759460,"byte_end":8759463,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759468,"byte_end":8759475,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759480,"byte_end":8759508,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759513,"byte_end":8759536,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759541,"byte_end":8759544,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759549,"byte_end":8759567,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759572,"byte_end":8759593,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759598,"byte_end":8759643,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759648,"byte_end":8759685,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759690,"byte_end":8759693,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759698,"byte_end":8759731,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759736,"byte_end":8759773,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759778,"byte_end":8759824,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759829,"byte_end":8759840,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759845,"byte_end":8759848,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759853,"byte_end":8759894,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759899,"byte_end":8759923,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759928,"byte_end":8759933,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8759938,"byte_end":8759945,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761467,"byte_end":8761473,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760308,"byte_end":8760335,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760340,"byte_end":8760343,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760348,"byte_end":8760419,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760424,"byte_end":8760492,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760497,"byte_end":8760573,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760578,"byte_end":8760619,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760624,"byte_end":8760627,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760632,"byte_end":8760706,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760711,"byte_end":8760785,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760790,"byte_end":8760862,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760867,"byte_end":8760881,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760886,"byte_end":8760889,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760894,"byte_end":8760938,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760943,"byte_end":8760946,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760951,"byte_end":8760965,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760970,"byte_end":8760973,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760978,"byte_end":8760985,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8760990,"byte_end":8761018,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761023,"byte_end":8761046,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761051,"byte_end":8761054,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761059,"byte_end":8761077,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761082,"byte_end":8761103,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761108,"byte_end":8761153,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761158,"byte_end":8761195,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761200,"byte_end":8761203,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761208,"byte_end":8761241,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761246,"byte_end":8761283,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761288,"byte_end":8761334,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761339,"byte_end":8761350,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761355,"byte_end":8761358,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761363,"byte_end":8761404,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761409,"byte_end":8761433,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761438,"byte_end":8761443,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8761448,"byte_end":8761455,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":10414},{"krate":0,"index":4627},{"krate":0,"index":10416},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":10418},{"krate":0,"index":4630},{"krate":0,"index":10420},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":5386},{"krate":0,"index":5389},{"krate":0,"index":5392},{"krate":0,"index":5395},{"krate":0,"index":4635},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":5423},{"krate":0,"index":5427},{"krate":0,"index":5426},{"krate":0,"index":4650},{"krate":0,"index":4652},{"krate":0,"index":4665},{"krate":0,"index":4668},{"krate":0,"index":4672},{"krate":0,"index":4675},{"krate":0,"index":4679},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4711},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4733}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773249,"byte_end":8773319,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5386},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773798,"byte_end":8773804,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5388}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773651,"byte_end":8773698,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773699,"byte_end":8773702,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773703,"byte_end":8773769,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5392},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773996,"byte_end":8774004,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5394}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773847,"byte_end":8773896,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773897,"byte_end":8773900,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8773901,"byte_end":8773967,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":4635},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774055,"byte_end":8774060,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","parent":null,"children":[{"krate":0,"index":4636},{"krate":0,"index":5398},{"krate":0,"index":5408},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5410},{"krate":0,"index":5421},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":4637},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4642}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774067,"byte_end":8774090,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5398},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774232,"byte_end":8774241,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774115,"byte_end":8774180,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5411},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774463,"byte_end":8774468,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774396,"byte_end":8774454,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5413},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774557,"byte_end":8774563,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5410},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774479,"byte_end":8774548,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774373,"byte_end":8774385,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":5411},{"krate":0,"index":5413}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774263,"byte_end":8774323,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776560,"byte_end":8776567,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775745,"byte_end":8775824,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775825,"byte_end":8775835,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775836,"byte_end":8775839,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775840,"byte_end":8775916,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775917,"byte_end":8775995,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775996,"byte_end":8776042,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776043,"byte_end":8776046,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776047,"byte_end":8776093,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776094,"byte_end":8776097,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776098,"byte_end":8776112,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776113,"byte_end":8776116,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776117,"byte_end":8776124,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776125,"byte_end":8776154,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776155,"byte_end":8776158,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776159,"byte_end":8776177,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776178,"byte_end":8776199,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776200,"byte_end":8776242,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776243,"byte_end":8776246,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776247,"byte_end":8776280,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776281,"byte_end":8776321,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776322,"byte_end":8776371,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776372,"byte_end":8776385,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776386,"byte_end":8776397,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776398,"byte_end":8776401,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776402,"byte_end":8776426,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776427,"byte_end":8776474,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776475,"byte_end":8776528,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776529,"byte_end":8776538,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776539,"byte_end":8776544,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8776545,"byte_end":8776552,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4654},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778603,"byte_end":8778607,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777032,"byte_end":8777107,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777112,"byte_end":8777128,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777133,"byte_end":8777136,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777141,"byte_end":8777220,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777225,"byte_end":8777300,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777305,"byte_end":8777381,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777386,"byte_end":8777458,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777463,"byte_end":8777476,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777481,"byte_end":8777484,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777489,"byte_end":8777565,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777570,"byte_end":8777646,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777651,"byte_end":8777723,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777728,"byte_end":8777801,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777806,"byte_end":8777880,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777885,"byte_end":8777957,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777962,"byte_end":8777999,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778004,"byte_end":8778007,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778012,"byte_end":8778026,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778031,"byte_end":8778034,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778039,"byte_end":8778071,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778076,"byte_end":8778079,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778084,"byte_end":8778091,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778096,"byte_end":8778125,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778130,"byte_end":8778133,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778138,"byte_end":8778156,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778161,"byte_end":8778182,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778187,"byte_end":8778229,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778234,"byte_end":8778237,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778242,"byte_end":8778275,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778280,"byte_end":8778320,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778325,"byte_end":8778374,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778379,"byte_end":8778392,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778397,"byte_end":8778408,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778413,"byte_end":8778416,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778421,"byte_end":8778445,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778450,"byte_end":8778497,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778502,"byte_end":8778555,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778560,"byte_end":8778569,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778574,"byte_end":8778579,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8778584,"byte_end":8778591,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8779008,"byte_end":8779019,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782261,"byte_end":8782267,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780376,"byte_end":8780434,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780439,"byte_end":8780442,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780447,"byte_end":8780521,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780526,"byte_end":8780560,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780565,"byte_end":8780568,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780573,"byte_end":8780638,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780643,"byte_end":8780715,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780720,"byte_end":8780723,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780728,"byte_end":8780740,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780745,"byte_end":8780748,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780753,"byte_end":8780801,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780806,"byte_end":8780809,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780814,"byte_end":8780840,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780845,"byte_end":8780875,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780880,"byte_end":8780883,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780888,"byte_end":8780902,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780907,"byte_end":8780910,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780915,"byte_end":8780930,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780935,"byte_end":8780938,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780943,"byte_end":8780950,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780955,"byte_end":8780984,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780989,"byte_end":8780992,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8780997,"byte_end":8781015,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781020,"byte_end":8781041,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781046,"byte_end":8781098,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781103,"byte_end":8781106,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781111,"byte_end":8781144,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781149,"byte_end":8781170,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781175,"byte_end":8781186,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781191,"byte_end":8781194,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781199,"byte_end":8781225,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781230,"byte_end":8781271,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781276,"byte_end":8781281,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781286,"byte_end":8781293,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781298,"byte_end":8781301,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781306,"byte_end":8781328,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781333,"byte_end":8781336,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781341,"byte_end":8781348,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781353,"byte_end":8781382,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781387,"byte_end":8781425,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781430,"byte_end":8781433,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781438,"byte_end":8781475,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781480,"byte_end":8781483,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781488,"byte_end":8781522,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781527,"byte_end":8781578,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781583,"byte_end":8781608,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781613,"byte_end":8781618,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781623,"byte_end":8781626,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781631,"byte_end":8781649,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781654,"byte_end":8781675,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781680,"byte_end":8781726,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781731,"byte_end":8781734,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781739,"byte_end":8781772,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781777,"byte_end":8781798,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781803,"byte_end":8781846,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781851,"byte_end":8781926,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781931,"byte_end":8781948,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8781953,"byte_end":8781998,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782003,"byte_end":8782046,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782051,"byte_end":8782068,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782073,"byte_end":8782086,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782091,"byte_end":8782102,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782107,"byte_end":8782110,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782115,"byte_end":8782151,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782156,"byte_end":8782221,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782226,"byte_end":8782231,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782236,"byte_end":8782243,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783137,"byte_end":8783146,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782378,"byte_end":8782452,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782457,"byte_end":8782460,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782465,"byte_end":8782539,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782544,"byte_end":8782578,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782583,"byte_end":8782586,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782591,"byte_end":8782666,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782671,"byte_end":8782674,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782679,"byte_end":8782705,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782710,"byte_end":8782740,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782745,"byte_end":8782748,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782753,"byte_end":8782767,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782772,"byte_end":8782775,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782780,"byte_end":8782787,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782792,"byte_end":8782821,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782826,"byte_end":8782829,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782834,"byte_end":8782852,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782857,"byte_end":8782878,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782883,"byte_end":8782925,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782930,"byte_end":8782933,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782938,"byte_end":8782971,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782976,"byte_end":8782979,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8782984,"byte_end":8783001,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783006,"byte_end":8783009,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783014,"byte_end":8783046,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783051,"byte_end":8783103,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783108,"byte_end":8783113,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783118,"byte_end":8783125,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785124,"byte_end":8785129,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783486,"byte_end":8783553,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783558,"byte_end":8783561,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783566,"byte_end":8783640,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783645,"byte_end":8783713,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783718,"byte_end":8783784,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783789,"byte_end":8783803,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783808,"byte_end":8783811,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783816,"byte_end":8783892,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783897,"byte_end":8783960,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783965,"byte_end":8783968,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783973,"byte_end":8783995,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784000,"byte_end":8784036,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784041,"byte_end":8784044,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784049,"byte_end":8784063,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784068,"byte_end":8784071,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784076,"byte_end":8784111,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784116,"byte_end":8784119,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784124,"byte_end":8784131,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784136,"byte_end":8784165,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784170,"byte_end":8784220,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784225,"byte_end":8784228,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784233,"byte_end":8784251,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784256,"byte_end":8784277,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784282,"byte_end":8784328,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784333,"byte_end":8784336,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784341,"byte_end":8784374,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784379,"byte_end":8784382,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784387,"byte_end":8784406,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784411,"byte_end":8784414,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784419,"byte_end":8784451,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784456,"byte_end":8784508,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784513,"byte_end":8784516,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784521,"byte_end":8784550,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784555,"byte_end":8784598,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784603,"byte_end":8784635,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784640,"byte_end":8784649,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784654,"byte_end":8784659,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784664,"byte_end":8784671,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784676,"byte_end":8784679,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784684,"byte_end":8784735,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784740,"byte_end":8784743,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784748,"byte_end":8784755,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784760,"byte_end":8784789,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784794,"byte_end":8784797,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784802,"byte_end":8784820,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784825,"byte_end":8784846,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784851,"byte_end":8784897,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784902,"byte_end":8784905,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784910,"byte_end":8784959,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784964,"byte_end":8784967,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784972,"byte_end":8784991,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8784996,"byte_end":8784999,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785004,"byte_end":8785045,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785050,"byte_end":8785090,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785095,"byte_end":8785100,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785105,"byte_end":8785112,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787112,"byte_end":8787120,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785227,"byte_end":8785259,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785264,"byte_end":8785267,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785272,"byte_end":8785345,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785350,"byte_end":8785416,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785421,"byte_end":8785445,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785450,"byte_end":8785453,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785458,"byte_end":8785524,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785529,"byte_end":8785551,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785556,"byte_end":8785559,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785564,"byte_end":8785576,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785581,"byte_end":8785584,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785589,"byte_end":8785640,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785645,"byte_end":8785708,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785713,"byte_end":8785788,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785793,"byte_end":8785807,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785812,"byte_end":8785815,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785820,"byte_end":8785834,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785839,"byte_end":8785842,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785847,"byte_end":8785897,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785902,"byte_end":8785905,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785910,"byte_end":8785917,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785922,"byte_end":8785951,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8785956,"byte_end":8786006,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786011,"byte_end":8786014,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786019,"byte_end":8786037,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786042,"byte_end":8786063,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786068,"byte_end":8786114,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786119,"byte_end":8786122,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786127,"byte_end":8786156,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786161,"byte_end":8786206,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786211,"byte_end":8786253,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786258,"byte_end":8786290,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786295,"byte_end":8786304,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786309,"byte_end":8786312,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786317,"byte_end":8786340,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786345,"byte_end":8786379,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786384,"byte_end":8786387,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786392,"byte_end":8786421,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786426,"byte_end":8786478,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786483,"byte_end":8786515,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786520,"byte_end":8786529,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786534,"byte_end":8786539,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786544,"byte_end":8786551,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786556,"byte_end":8786559,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786564,"byte_end":8786625,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786630,"byte_end":8786633,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786638,"byte_end":8786645,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786650,"byte_end":8786679,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786684,"byte_end":8786734,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786739,"byte_end":8786742,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786747,"byte_end":8786765,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786770,"byte_end":8786791,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786796,"byte_end":8786848,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786853,"byte_end":8786856,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786861,"byte_end":8786878,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786883,"byte_end":8786886,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786891,"byte_end":8786920,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786925,"byte_end":8786979,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8786984,"byte_end":8787027,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787032,"byte_end":8787064,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787069,"byte_end":8787078,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787083,"byte_end":8787088,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787093,"byte_end":8787100,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5490},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855685,"byte_end":8855694,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":5491}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855034,"byte_end":8855099,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855100,"byte_end":8855103,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855104,"byte_end":8855179,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855180,"byte_end":8855256,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855257,"byte_end":8855337,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855338,"byte_end":8855347,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855348,"byte_end":8855351,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855352,"byte_end":8855425,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855426,"byte_end":8855505,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855506,"byte_end":8855584,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855585,"byte_end":8855656,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":5494},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855943,"byte_end":8855958,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5496},{"krate":0,"index":5497}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855759,"byte_end":8855791,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855792,"byte_end":8855795,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855796,"byte_end":8855847,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855848,"byte_end":8855851,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855852,"byte_end":8855902,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8855903,"byte_end":8855914,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5501},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856219,"byte_end":8856239,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":5502},{"krate":0,"index":5503}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856010,"byte_end":8856049,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856050,"byte_end":8856053,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856054,"byte_end":8856111,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856112,"byte_end":8856115,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856116,"byte_end":8856178,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856179,"byte_end":8856190,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5506},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856535,"byte_end":8856550,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856288,"byte_end":8856352,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856353,"byte_end":8856356,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856357,"byte_end":8856434,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856435,"byte_end":8856447,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856448,"byte_end":8856451,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8856452,"byte_end":8856506,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857104,"byte_end":8857107,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857029,"byte_end":8857092,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857283,"byte_end":8857300,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857219,"byte_end":8857271,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857547,"byte_end":8857558,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857370,"byte_end":8857412,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857417,"byte_end":8857420,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857425,"byte_end":8857535,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857678,"byte_end":8857685,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857621,"byte_end":8857660,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4974},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857921,"byte_end":8857932,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857860,"byte_end":8857909,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858393,"byte_end":8858406,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858215,"byte_end":8858254,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858259,"byte_end":8858262,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858267,"byte_end":8858335,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858340,"byte_end":8858343,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858348,"byte_end":8858375,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858786,"byte_end":8858803,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858604,"byte_end":8858653,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858658,"byte_end":8858661,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858666,"byte_end":8858734,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858739,"byte_end":8858742,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8858747,"byte_end":8858774,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859318,"byte_end":8859324,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859143,"byte_end":8859213,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859218,"byte_end":8859287,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859292,"byte_end":8859306,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859579,"byte_end":8859585,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859404,"byte_end":8859474,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859479,"byte_end":8859548,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859553,"byte_end":8859567,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862637,"byte_end":8862643,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":5513},{"krate":0,"index":5514}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860107,"byte_end":8860145,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860146,"byte_end":8860149,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860150,"byte_end":8860227,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860228,"byte_end":8860307,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860308,"byte_end":8860387,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860388,"byte_end":8860446,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860447,"byte_end":8860450,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860451,"byte_end":8860529,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860530,"byte_end":8860608,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860609,"byte_end":8860687,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860688,"byte_end":8860753,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860754,"byte_end":8860757,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860758,"byte_end":8860822,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860823,"byte_end":8860895,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860896,"byte_end":8860976,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8860977,"byte_end":8861057,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861058,"byte_end":8861138,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861139,"byte_end":8861208,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861209,"byte_end":8861279,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861280,"byte_end":8861318,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861319,"byte_end":8861322,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861323,"byte_end":8861400,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861401,"byte_end":8861486,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861487,"byte_end":8861567,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861568,"byte_end":8861615,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861616,"byte_end":8861688,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861689,"byte_end":8861692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861693,"byte_end":8861707,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861708,"byte_end":8861711,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861712,"byte_end":8861719,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861720,"byte_end":8861748,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861749,"byte_end":8861752,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861753,"byte_end":8861771,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861772,"byte_end":8861793,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861794,"byte_end":8861828,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861829,"byte_end":8861832,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861833,"byte_end":8861881,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861882,"byte_end":8861891,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861892,"byte_end":8861931,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861932,"byte_end":8861971,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8861972,"byte_end":8862003,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862004,"byte_end":8862035,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862036,"byte_end":8862085,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862086,"byte_end":8862089,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862090,"byte_end":8862141,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862142,"byte_end":8862151,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862152,"byte_end":8862195,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862196,"byte_end":8862216,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862217,"byte_end":8862247,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862248,"byte_end":8862287,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862288,"byte_end":8862293,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862294,"byte_end":8862301,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862302,"byte_end":8862305,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862306,"byte_end":8862340,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862341,"byte_end":8862370,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862371,"byte_end":8862418,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862419,"byte_end":8862468,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862469,"byte_end":8862506,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862507,"byte_end":8862608,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863018,"byte_end":8863033,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862777,"byte_end":8862849,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862850,"byte_end":8862862,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862863,"byte_end":8862866,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862867,"byte_end":8862922,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862923,"byte_end":8862938,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862939,"byte_end":8862942,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862943,"byte_end":8862976,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8862977,"byte_end":8863006,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864351,"byte_end":8864354,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863177,"byte_end":8863245,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863250,"byte_end":8863253,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863258,"byte_end":8863331,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863336,"byte_end":8863356,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863361,"byte_end":8863364,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863369,"byte_end":8863420,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863425,"byte_end":8863495,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863500,"byte_end":8863564,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863569,"byte_end":8863572,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863577,"byte_end":8863649,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863654,"byte_end":8863680,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863685,"byte_end":8863688,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863693,"byte_end":8863802,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863807,"byte_end":8863870,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863875,"byte_end":8863878,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863883,"byte_end":8863897,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863902,"byte_end":8863905,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863910,"byte_end":8863917,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863922,"byte_end":8863969,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863974,"byte_end":8863977,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863982,"byte_end":8864030,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864035,"byte_end":8864055,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864060,"byte_end":8864063,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864068,"byte_end":8864088,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864093,"byte_end":8864116,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864121,"byte_end":8864156,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864161,"byte_end":8864164,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864169,"byte_end":8864203,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864208,"byte_end":8864262,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864267,"byte_end":8864270,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864275,"byte_end":8864301,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864306,"byte_end":8864313,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864318,"byte_end":8864325,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864330,"byte_end":8864339,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866049,"byte_end":8866056,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864732,"byte_end":8864801,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864806,"byte_end":8864876,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864881,"byte_end":8864892,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864897,"byte_end":8864900,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864905,"byte_end":8864978,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8864983,"byte_end":8865003,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865008,"byte_end":8865011,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865016,"byte_end":8865075,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865080,"byte_end":8865160,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865165,"byte_end":8865214,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865219,"byte_end":8865222,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865227,"byte_end":8865303,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865308,"byte_end":8865334,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865339,"byte_end":8865342,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865347,"byte_end":8865464,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865469,"byte_end":8865532,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865537,"byte_end":8865540,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865545,"byte_end":8865559,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865564,"byte_end":8865567,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865572,"byte_end":8865579,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865584,"byte_end":8865631,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865636,"byte_end":8865639,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865644,"byte_end":8865692,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865697,"byte_end":8865717,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865722,"byte_end":8865725,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865730,"byte_end":8865750,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865755,"byte_end":8865778,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865783,"byte_end":8865818,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865823,"byte_end":8865826,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865831,"byte_end":8865865,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865870,"byte_end":8865960,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865965,"byte_end":8865968,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8865973,"byte_end":8865999,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866004,"byte_end":8866011,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866016,"byte_end":8866023,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866028,"byte_end":8866037,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5028},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867305,"byte_end":8867321,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867053,"byte_end":8867129,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867130,"byte_end":8867142,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867143,"byte_end":8867146,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867147,"byte_end":8867204,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867205,"byte_end":8867223,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867224,"byte_end":8867227,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867228,"byte_end":8867263,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867264,"byte_end":8867293,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868706,"byte_end":8868709,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockWriteGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockWriteGuard` for a component of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867476,"byte_end":8867545,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867550,"byte_end":8867553,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867558,"byte_end":8867632,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867637,"byte_end":8867657,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867662,"byte_end":8867665,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867670,"byte_end":8867729,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867734,"byte_end":8867807,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867812,"byte_end":8867865,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867870,"byte_end":8867873,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867878,"byte_end":8867951,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867956,"byte_end":8867982,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867987,"byte_end":8867990,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867995,"byte_end":8868106,"line_start":252,"line_end":252,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868111,"byte_end":8868174,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868179,"byte_end":8868182,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868187,"byte_end":8868201,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868206,"byte_end":8868209,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868214,"byte_end":8868221,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868226,"byte_end":8868274,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868279,"byte_end":8868282,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868287,"byte_end":8868335,"line_start":260,"line_end":260,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868340,"byte_end":8868360,"line_start":261,"line_end":261,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868365,"byte_end":8868368,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868373,"byte_end":8868393,"line_start":263,"line_end":263,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868398,"byte_end":8868421,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868426,"byte_end":8868461,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868466,"byte_end":8868469,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868474,"byte_end":8868479,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868484,"byte_end":8868565,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868570,"byte_end":8868590,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868595,"byte_end":8868600,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868605,"byte_end":8868608,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868613,"byte_end":8868656,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868661,"byte_end":8868668,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868673,"byte_end":8868680,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8868685,"byte_end":8868694,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5040},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870508,"byte_end":8870515,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockWriteGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockWriteGuard`] for a component of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869103,"byte_end":8869170,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869175,"byte_end":8869249,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869254,"byte_end":8869265,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869270,"byte_end":8869273,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869278,"byte_end":8869352,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869357,"byte_end":8869377,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869382,"byte_end":8869385,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869390,"byte_end":8869441,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869446,"byte_end":8869521,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869526,"byte_end":8869590,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869595,"byte_end":8869598,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869603,"byte_end":8869676,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869681,"byte_end":8869711,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869716,"byte_end":8869719,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869724,"byte_end":8869843,"line_start":305,"line_end":305,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869848,"byte_end":8869911,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869916,"byte_end":8869919,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869924,"byte_end":8869938,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869943,"byte_end":8869946,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869951,"byte_end":8869958,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8869963,"byte_end":8870011,"line_start":311,"line_end":311,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870016,"byte_end":8870019,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870024,"byte_end":8870072,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870077,"byte_end":8870097,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870102,"byte_end":8870105,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870110,"byte_end":8870130,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870135,"byte_end":8870158,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870163,"byte_end":8870198,"line_start":318,"line_end":318,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870203,"byte_end":8870206,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870211,"byte_end":8870216,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870221,"byte_end":8870260,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870265,"byte_end":8870368,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870373,"byte_end":8870392,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870397,"byte_end":8870402,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870407,"byte_end":8870410,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870415,"byte_end":8870458,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870463,"byte_end":8870470,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870475,"byte_end":8870482,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8870487,"byte_end":8870496,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873618,"byte_end":8873621,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873408,"byte_end":8873471,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873476,"byte_end":8873479,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873484,"byte_end":8873498,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873503,"byte_end":8873506,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873511,"byte_end":8873518,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873523,"byte_end":8873551,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873556,"byte_end":8873559,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873564,"byte_end":8873594,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873599,"byte_end":8873606,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5070},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874836,"byte_end":8874840,"line_start":467,"line_end":467,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873798,"byte_end":8873869,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873874,"byte_end":8873920,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873925,"byte_end":8873928,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873933,"byte_end":8874002,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874007,"byte_end":8874083,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874088,"byte_end":8874112,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874117,"byte_end":8874120,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874125,"byte_end":8874139,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874144,"byte_end":8874147,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874152,"byte_end":8874159,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874164,"byte_end":8874187,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874192,"byte_end":8874220,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874225,"byte_end":8874228,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874233,"byte_end":8874251,"line_start":449,"line_end":449,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874256,"byte_end":8874277,"line_start":450,"line_end":450,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874282,"byte_end":8874326,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874331,"byte_end":8874365,"line_start":452,"line_end":452,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874370,"byte_end":8874373,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874378,"byte_end":8874412,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874417,"byte_end":8874443,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874448,"byte_end":8874451,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874456,"byte_end":8874489,"line_start":457,"line_end":457,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874494,"byte_end":8874564,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874569,"byte_end":8874609,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874614,"byte_end":8874644,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874649,"byte_end":8874705,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874710,"byte_end":8874713,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874718,"byte_end":8874776,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874781,"byte_end":8874797,"line_start":464,"line_end":464,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874802,"byte_end":8874806,"line_start":465,"line_end":465,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8874811,"byte_end":8874818,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5074},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875928,"byte_end":8875933,"line_start":502,"line_end":502,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875287,"byte_end":8875362,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875367,"byte_end":8875413,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875418,"byte_end":8875421,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875426,"byte_end":8875496,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875501,"byte_end":8875539,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875544,"byte_end":8875547,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875552,"byte_end":8875625,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875630,"byte_end":8875647,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875652,"byte_end":8875655,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875660,"byte_end":8875674,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875679,"byte_end":8875682,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875687,"byte_end":8875694,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875699,"byte_end":8875727,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875732,"byte_end":8875735,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875740,"byte_end":8875758,"line_start":494,"line_end":494,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875763,"byte_end":8875784,"line_start":495,"line_end":495,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875789,"byte_end":8875821,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875826,"byte_end":8875829,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875834,"byte_end":8875871,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875876,"byte_end":8875889,"line_start":499,"line_end":499,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875894,"byte_end":8875898,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8875903,"byte_end":8875910,"line_start":501,"line_end":501,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5078},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876462,"byte_end":8876472,"line_start":516,"line_end":516,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876397,"byte_end":8876450,"line_start":515,"line_end":515,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5146},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153},{"krate":0,"index":10562},{"krate":0,"index":5154},{"krate":0,"index":10564},{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":10576},{"krate":0,"index":5163},{"krate":0,"index":10578},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5518},{"krate":0,"index":5522},{"krate":0,"index":5525},{"krate":0,"index":5528},{"krate":0,"index":5531},{"krate":0,"index":5535},{"krate":0,"index":5167},{"krate":0,"index":5545},{"krate":0,"index":5551},{"krate":0,"index":5174},{"krate":0,"index":5554},{"krate":0,"index":5559},{"krate":0,"index":5557},{"krate":0,"index":5561},{"krate":0,"index":5564},{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":5180},{"krate":0,"index":5185},{"krate":0,"index":5192},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5215},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5226}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21286,"byte_end":21310,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8889971,"byte_end":8890050,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890051,"byte_end":8890061,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890062,"byte_end":8890065,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890066,"byte_end":8890142,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890143,"byte_end":8890217,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890218,"byte_end":8890221,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890222,"byte_end":8890233,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890234,"byte_end":8890237,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890238,"byte_end":8890305,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890306,"byte_end":8890371,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890372,"byte_end":8890437,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890438,"byte_end":8890508,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890509,"byte_end":8890561,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890562,"byte_end":8890565,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890566,"byte_end":8890633,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890634,"byte_end":8890637,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890638,"byte_end":8890652,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890653,"byte_end":8890656,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890657,"byte_end":8890664,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890665,"byte_end":8890692,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890693,"byte_end":8890696,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890697,"byte_end":8890761,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890762,"byte_end":8890813,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890814,"byte_end":8890817,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890818,"byte_end":8890851,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890852,"byte_end":8890905,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890906,"byte_end":8890957,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890958,"byte_end":8890971,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890972,"byte_end":8890983,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890984,"byte_end":8890987,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8890988,"byte_end":8891019,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891020,"byte_end":8891032,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891033,"byte_end":8891040,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891041,"byte_end":8891048,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891049,"byte_end":8891052,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891053,"byte_end":8891066,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891067,"byte_end":8891070,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891071,"byte_end":8891145,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891146,"byte_end":8891225,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891226,"byte_end":8891283,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891284,"byte_end":8891287,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891288,"byte_end":8891307,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891308,"byte_end":8891311,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891312,"byte_end":8891392,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891393,"byte_end":8891472,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891473,"byte_end":8891545,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891546,"byte_end":8891549,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891550,"byte_end":8891592,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891593,"byte_end":8891639,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891640,"byte_end":8891698,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891699,"byte_end":8891743,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8891744,"byte_end":8891802,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5518},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892290,"byte_end":8892298,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5520},{"krate":0,"index":5521}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892124,"byte_end":8892190,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892191,"byte_end":8892194,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892195,"byte_end":8892261,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5525},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892605,"byte_end":8892611,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5527}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892440,"byte_end":8892505,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892506,"byte_end":8892509,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892510,"byte_end":8892576,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5531},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892932,"byte_end":8892935,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":5534}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892649,"byte_end":8892691,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892692,"byte_end":8892695,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892696,"byte_end":8892772,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892773,"byte_end":8892852,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892853,"byte_end":8892903,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8892991,"byte_end":8892996,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","parent":null,"children":[{"krate":0,"index":5168},{"krate":0,"index":5539},{"krate":0,"index":5542},{"krate":0,"index":5169},{"krate":0,"index":5172}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893003,"byte_end":8893024,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5539},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893132,"byte_end":8893141,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":5541}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893049,"byte_end":8893095,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5176},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894920,"byte_end":8894927,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894152,"byte_end":8894228,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894229,"byte_end":8894232,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894233,"byte_end":8894315,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894316,"byte_end":8894392,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894393,"byte_end":8894429,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894430,"byte_end":8894433,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894434,"byte_end":8894448,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894449,"byte_end":8894452,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894453,"byte_end":8894460,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894461,"byte_end":8894488,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894489,"byte_end":8894492,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894493,"byte_end":8894557,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894558,"byte_end":8894609,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894610,"byte_end":8894613,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894614,"byte_end":8894647,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894648,"byte_end":8894701,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894702,"byte_end":8894753,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894754,"byte_end":8894767,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894768,"byte_end":8894779,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894780,"byte_end":8894783,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894784,"byte_end":8894815,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894816,"byte_end":8894828,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894829,"byte_end":8894836,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894837,"byte_end":8894844,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894845,"byte_end":8894848,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894849,"byte_end":8894878,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8894879,"byte_end":8894912,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896096,"byte_end":8896102,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895634,"byte_end":8895689,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895694,"byte_end":8895697,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895702,"byte_end":8895778,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895783,"byte_end":8895859,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895864,"byte_end":8895895,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895900,"byte_end":8895903,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895908,"byte_end":8895922,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895927,"byte_end":8895930,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895935,"byte_end":8895942,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895947,"byte_end":8895974,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895979,"byte_end":8895982,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895987,"byte_end":8896029,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896034,"byte_end":8896072,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896077,"byte_end":8896084,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896262,"byte_end":8896275,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897996,"byte_end":8898000,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896914,"byte_end":8896974,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896979,"byte_end":8896982,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896987,"byte_end":8897055,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897060,"byte_end":8897134,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897139,"byte_end":8897212,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897217,"byte_end":8897256,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897261,"byte_end":8897264,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897269,"byte_end":8897324,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897329,"byte_end":8897332,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897337,"byte_end":8897351,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897356,"byte_end":8897359,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897364,"byte_end":8897371,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897376,"byte_end":8897403,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897408,"byte_end":8897411,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897416,"byte_end":8897434,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897439,"byte_end":8897460,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897465,"byte_end":8897516,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897521,"byte_end":8897524,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897529,"byte_end":8897570,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897575,"byte_end":8897606,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897611,"byte_end":8897614,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897619,"byte_end":8897652,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897657,"byte_end":8897702,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897707,"byte_end":8897718,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897723,"byte_end":8897726,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897731,"byte_end":8897793,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897798,"byte_end":8897839,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897844,"byte_end":8897877,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897882,"byte_end":8897885,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897890,"byte_end":8897922,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897927,"byte_end":8897956,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897961,"byte_end":8897966,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8897971,"byte_end":8897978,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899066,"byte_end":8899075,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898986,"byte_end":8899054,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899906,"byte_end":8899912,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899695,"byte_end":8899741,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899746,"byte_end":8899749,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899754,"byte_end":8899828,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8899833,"byte_end":8899888,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":5566},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5582}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901658,"byte_end":8901689,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901690,"byte_end":8901693,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901694,"byte_end":8901716,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901717,"byte_end":8901720,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901721,"byte_end":8901802,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901803,"byte_end":8901883,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901884,"byte_end":8901964,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8901965,"byte_end":8902039,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902040,"byte_end":8902115,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902116,"byte_end":8902138,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902139,"byte_end":8902142,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902143,"byte_end":8902178,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902179,"byte_end":8902182,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902183,"byte_end":8902257,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902258,"byte_end":8902337,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902338,"byte_end":8902410,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902411,"byte_end":8902486,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902487,"byte_end":8902540,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902541,"byte_end":8902544,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902545,"byte_end":8902622,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902623,"byte_end":8902696,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902697,"byte_end":8902776,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902777,"byte_end":8902855,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902856,"byte_end":8902928,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8902929,"byte_end":8903004,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903005,"byte_end":8903079,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903080,"byte_end":8903155,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903156,"byte_end":8903186,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903187,"byte_end":8903190,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903191,"byte_end":8903269,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903270,"byte_end":8903345,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903346,"byte_end":8903423,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903424,"byte_end":8903503,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903504,"byte_end":8903582,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903583,"byte_end":8903658,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903659,"byte_end":8903734,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903735,"byte_end":8903796,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903797,"byte_end":8903800,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903801,"byte_end":8903825,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903826,"byte_end":8903890,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903891,"byte_end":8903951,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8903952,"byte_end":8904041,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904042,"byte_end":8904130,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904131,"byte_end":8904134,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904135,"byte_end":8904160,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904161,"byte_end":8904164,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904165,"byte_end":8904232,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904233,"byte_end":8904236,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904237,"byte_end":8904253,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904254,"byte_end":8904257,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904258,"byte_end":8904337,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904338,"byte_end":8904417,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904418,"byte_end":8904497,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904498,"byte_end":8904565,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904566,"byte_end":8904569,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904570,"byte_end":8904577,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904578,"byte_end":8904598,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904599,"byte_end":8904602,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904603,"byte_end":8904625,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904626,"byte_end":8904649,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904650,"byte_end":8904686,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904687,"byte_end":8904694,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904695,"byte_end":8904702,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904703,"byte_end":8904710,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904711,"byte_end":8904714,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904715,"byte_end":8904794,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904795,"byte_end":8904873,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904874,"byte_end":8904908,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904909,"byte_end":8904912,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904913,"byte_end":8904920,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904921,"byte_end":8904941,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904942,"byte_end":8904945,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8904946,"byte_end":8905026,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905027,"byte_end":8905061,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905062,"byte_end":8905076,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905077,"byte_end":8905099,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905100,"byte_end":8905107,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905108,"byte_end":8905111,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905112,"byte_end":8905122,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905123,"byte_end":8905126,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905127,"byte_end":8905171,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905172,"byte_end":8905201,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905202,"byte_end":8905241,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905242,"byte_end":8905254,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905255,"byte_end":8905262,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905263,"byte_end":8905270,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905271,"byte_end":8905274,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905275,"byte_end":8905355,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905356,"byte_end":8905432,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905433,"byte_end":8905445,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905446,"byte_end":8905449,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905450,"byte_end":8905457,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905458,"byte_end":8905478,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905479,"byte_end":8905482,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905483,"byte_end":8905521,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905522,"byte_end":8905556,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905557,"byte_end":8905598,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905599,"byte_end":8905606,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905607,"byte_end":8905610,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905611,"byte_end":8905669,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905670,"byte_end":8905703,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905704,"byte_end":8905711,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905712,"byte_end":8905719,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905720,"byte_end":8905723,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905724,"byte_end":8905797,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905798,"byte_end":8905826,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905827,"byte_end":8905830,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905831,"byte_end":8905872,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905873,"byte_end":8905906,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905907,"byte_end":8905953,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905954,"byte_end":8905997,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8905998,"byte_end":8906040,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906041,"byte_end":8906082,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906083,"byte_end":8906086,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906087,"byte_end":8906116,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906117,"byte_end":8906120,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906121,"byte_end":8906201,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906202,"byte_end":8906281,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906282,"byte_end":8906361,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906362,"byte_end":8906402,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906403,"byte_end":8906406,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906407,"byte_end":8906481,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906482,"byte_end":8906562,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906563,"byte_end":8906566,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906567,"byte_end":8906590,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906591,"byte_end":8906594,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906595,"byte_end":8906675,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906676,"byte_end":8906742,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906743,"byte_end":8906810,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906811,"byte_end":8906885,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906886,"byte_end":8906898,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906899,"byte_end":8906902,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906903,"byte_end":8906910,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906911,"byte_end":8906931,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906932,"byte_end":8906935,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906936,"byte_end":8906959,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906960,"byte_end":8906989,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8906990,"byte_end":8907052,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907053,"byte_end":8907060,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907061,"byte_end":8907068,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907069,"byte_end":8907076,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907077,"byte_end":8907080,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907081,"byte_end":8907155,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907156,"byte_end":8907223,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907224,"byte_end":8907227,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907228,"byte_end":8907239,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907240,"byte_end":8907262,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907263,"byte_end":8907327,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907328,"byte_end":8907368,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907369,"byte_end":8907431,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907432,"byte_end":8907460,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907461,"byte_end":8907468,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907469,"byte_end":8907472,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907473,"byte_end":8907502,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907503,"byte_end":8907548,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907549,"byte_end":8907561,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907562,"byte_end":8907569,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907570,"byte_end":8907577,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907578,"byte_end":8907581,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907582,"byte_end":8907605,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907606,"byte_end":8907609,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907610,"byte_end":8907690,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907691,"byte_end":8907765,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907766,"byte_end":8907842,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907843,"byte_end":8907917,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907918,"byte_end":8907997,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8907998,"byte_end":8908080,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908081,"byte_end":8908102,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908103,"byte_end":8908106,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908107,"byte_end":8908123,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908124,"byte_end":8908127,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908128,"byte_end":8908135,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908136,"byte_end":8908156,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908157,"byte_end":8908160,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908161,"byte_end":8908184,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908185,"byte_end":8908227,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908228,"byte_end":8908290,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908291,"byte_end":8908319,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908320,"byte_end":8908327,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908328,"byte_end":8908331,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908332,"byte_end":8908377,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908378,"byte_end":8908385,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908386,"byte_end":8908393,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908394,"byte_end":8908397,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908398,"byte_end":8908416,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908417,"byte_end":8908420,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908421,"byte_end":8908495,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908496,"byte_end":8908574,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908575,"byte_end":8908651,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908652,"byte_end":8908709,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908710,"byte_end":8908788,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908789,"byte_end":8908817,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908818,"byte_end":8908821,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908822,"byte_end":8908833,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908834,"byte_end":8908854,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908855,"byte_end":8908858,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908859,"byte_end":8908897,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908898,"byte_end":8908909,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908910,"byte_end":8908937,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908938,"byte_end":8908956,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8908957,"byte_end":8908999,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909000,"byte_end":8909011,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909012,"byte_end":8909015,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909016,"byte_end":8909083,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909084,"byte_end":8909116,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909117,"byte_end":8909153,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909154,"byte_end":8909159,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909160,"byte_end":8909173,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909174,"byte_end":8909181,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909182,"byte_end":8909189,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909190,"byte_end":8909193,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909194,"byte_end":8909251,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909252,"byte_end":8909309,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909310,"byte_end":8909369,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909370,"byte_end":8909419,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\mod.rs","byte_start":8909420,"byte_end":8909469,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\spawn.rs","byte_start":8913552,"byte_end":8913557,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":5585},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\yield_now.rs","byte_start":8914630,"byte_end":8914639,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\yield_now.rs","byte_start":8914549,"byte_end":8914612,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":5593},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5874},{"krate":0,"index":5891},{"krate":0,"index":5892},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6062}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915171,"byte_end":8915203,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915204,"byte_end":8915207,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915208,"byte_end":8915288,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915289,"byte_end":8915301,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915302,"byte_end":8915305,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915306,"byte_end":8915387,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915388,"byte_end":8915402,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915403,"byte_end":8915406,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915407,"byte_end":8915477,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915478,"byte_end":8915558,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915559,"byte_end":8915573,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915574,"byte_end":8915577,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915578,"byte_end":8915657,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915658,"byte_end":8915730,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915731,"byte_end":8915800,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915801,"byte_end":8915804,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915805,"byte_end":8915882,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915883,"byte_end":8915901,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915902,"byte_end":8915905,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915906,"byte_end":8915977,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915978,"byte_end":8915997,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8915998,"byte_end":8916001,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916002,"byte_end":8916072,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916073,"byte_end":8916076,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916077,"byte_end":8916091,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916092,"byte_end":8916095,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916096,"byte_end":8916142,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916143,"byte_end":8916146,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916147,"byte_end":8916154,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916155,"byte_end":8916186,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916187,"byte_end":8916190,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916191,"byte_end":8916219,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916220,"byte_end":8916223,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916224,"byte_end":8916227,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916228,"byte_end":8916246,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916247,"byte_end":8916268,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916269,"byte_end":8916321,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916322,"byte_end":8916362,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916363,"byte_end":8916368,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916369,"byte_end":8916376,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916377,"byte_end":8916380,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916381,"byte_end":8916460,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916461,"byte_end":8916539,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916540,"byte_end":8916552,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916553,"byte_end":8916556,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916557,"byte_end":8916564,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916565,"byte_end":8916606,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916607,"byte_end":8916610,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916611,"byte_end":8916639,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916640,"byte_end":8916663,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916664,"byte_end":8916669,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916670,"byte_end":8916673,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916674,"byte_end":8916696,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916697,"byte_end":8916764,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916765,"byte_end":8916768,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916769,"byte_end":8916790,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916791,"byte_end":8916831,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916832,"byte_end":8916837,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916838,"byte_end":8916845,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916846,"byte_end":8916853,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916854,"byte_end":8916857,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916858,"byte_end":8916934,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916935,"byte_end":8916938,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8916939,"byte_end":8917007,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917008,"byte_end":8917080,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917081,"byte_end":8917156,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917157,"byte_end":8917235,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917236,"byte_end":8917239,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917240,"byte_end":8917318,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917319,"byte_end":8917389,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917390,"byte_end":8917402,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917403,"byte_end":8917406,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917407,"byte_end":8917414,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917415,"byte_end":8917435,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917436,"byte_end":8917439,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917440,"byte_end":8917481,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917482,"byte_end":8917508,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917509,"byte_end":8917568,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917569,"byte_end":8917574,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917575,"byte_end":8917578,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917579,"byte_end":8917597,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917598,"byte_end":8917619,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917620,"byte_end":8917692,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917693,"byte_end":8917717,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917718,"byte_end":8917752,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917753,"byte_end":8917798,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917799,"byte_end":8917808,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917809,"byte_end":8917814,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917815,"byte_end":8917822,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917823,"byte_end":8917826,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917827,"byte_end":8917870,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8917871,"byte_end":8917912,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5596},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":10636},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":6079},{"krate":0,"index":6087},{"krate":0,"index":6090},{"krate":0,"index":6095},{"krate":0,"index":6098},{"krate":0,"index":6102},{"krate":0,"index":6100},{"krate":0,"index":6104},{"krate":0,"index":6108},{"krate":0,"index":6111},{"krate":0,"index":6118},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5643},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5658},{"krate":0,"index":5661},{"krate":0,"index":5663}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924063,"byte_end":8924095,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924096,"byte_end":8924099,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924100,"byte_end":8924140,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924141,"byte_end":8924144,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924145,"byte_end":8924182,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6079},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928493,"byte_end":8928503,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6086}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924423,"byte_end":8924455,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924456,"byte_end":8924459,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924460,"byte_end":8924537,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924538,"byte_end":8924578,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924579,"byte_end":8924582,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924583,"byte_end":8924594,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924595,"byte_end":8924598,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924599,"byte_end":8924666,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924667,"byte_end":8924747,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924748,"byte_end":8924826,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924827,"byte_end":8924863,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924864,"byte_end":8924867,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924868,"byte_end":8924938,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8924939,"byte_end":8925025,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925026,"byte_end":8925099,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925100,"byte_end":8925169,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925170,"byte_end":8925173,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925174,"byte_end":8925203,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925204,"byte_end":8925207,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925208,"byte_end":8925298,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925299,"byte_end":8925379,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925380,"byte_end":8925456,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925457,"byte_end":8925469,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925470,"byte_end":8925473,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925474,"byte_end":8925553,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925554,"byte_end":8925631,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925632,"byte_end":8925708,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925709,"byte_end":8925742,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925743,"byte_end":8925746,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925747,"byte_end":8925825,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925826,"byte_end":8925902,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925903,"byte_end":8925981,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8925982,"byte_end":8926021,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926022,"byte_end":8926025,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926026,"byte_end":8926046,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926047,"byte_end":8926050,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926051,"byte_end":8926149,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926150,"byte_end":8926247,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926248,"byte_end":8926289,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926290,"byte_end":8926293,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926294,"byte_end":8926394,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926395,"byte_end":8926460,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926461,"byte_end":8926464,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926465,"byte_end":8926547,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926548,"byte_end":8926575,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926576,"byte_end":8926579,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926580,"byte_end":8926591,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926592,"byte_end":8926595,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926596,"byte_end":8926643,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926644,"byte_end":8926647,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926648,"byte_end":8926666,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926667,"byte_end":8926721,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926722,"byte_end":8926725,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926726,"byte_end":8926749,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926750,"byte_end":8926784,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926785,"byte_end":8926820,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926821,"byte_end":8926849,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926850,"byte_end":8926879,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926880,"byte_end":8926906,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926907,"byte_end":8926910,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926911,"byte_end":8926929,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926930,"byte_end":8926992,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8926993,"byte_end":8927035,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927036,"byte_end":8927041,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927042,"byte_end":8927045,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927046,"byte_end":8927075,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927076,"byte_end":8927079,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927080,"byte_end":8927096,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927097,"byte_end":8927156,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927157,"byte_end":8927197,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927198,"byte_end":8927266,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927267,"byte_end":8927270,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927271,"byte_end":8927324,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927325,"byte_end":8927334,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927335,"byte_end":8927338,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927339,"byte_end":8927396,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927397,"byte_end":8927430,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927431,"byte_end":8927468,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927469,"byte_end":8927478,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927479,"byte_end":8927482,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927483,"byte_end":8927529,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927530,"byte_end":8927598,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927599,"byte_end":8927651,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927652,"byte_end":8927665,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927666,"byte_end":8927675,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927676,"byte_end":8927679,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927680,"byte_end":8927763,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927764,"byte_end":8927841,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927842,"byte_end":8927875,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927876,"byte_end":8927929,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927930,"byte_end":8927943,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927944,"byte_end":8927947,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927948,"byte_end":8927979,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927980,"byte_end":8927989,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927990,"byte_end":8927995,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8927996,"byte_end":8928003,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928004,"byte_end":8928007,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928008,"byte_end":8928043,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928044,"byte_end":8928085,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928086,"byte_end":8928109,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928110,"byte_end":8928186,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928187,"byte_end":8928234,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928235,"byte_end":8928290,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928291,"byte_end":8928328,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928329,"byte_end":8928367,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928368,"byte_end":8928386,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928387,"byte_end":8928426,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8928427,"byte_end":8928464,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6090},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929218,"byte_end":8929225,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6092},{"krate":0,"index":6093},{"krate":0,"index":6094}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929000,"byte_end":8929058,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929059,"byte_end":8929062,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929063,"byte_end":8929119,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929120,"byte_end":8929123,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929124,"byte_end":8929189,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929693,"byte_end":8929696,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6099}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929393,"byte_end":8929439,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929440,"byte_end":8929443,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929444,"byte_end":8929525,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929526,"byte_end":8929561,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929562,"byte_end":8929565,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929566,"byte_end":8929603,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8929604,"byte_end":8929657,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930674,"byte_end":8930677,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930374,"byte_end":8930412,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930417,"byte_end":8930420,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930425,"byte_end":8930498,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930503,"byte_end":8930506,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930511,"byte_end":8930525,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930530,"byte_end":8930533,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930538,"byte_end":8930549,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930554,"byte_end":8930588,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930593,"byte_end":8930650,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930655,"byte_end":8930662,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931595,"byte_end":8931608,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930747,"byte_end":8930814,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930819,"byte_end":8930822,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930827,"byte_end":8930898,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930903,"byte_end":8930972,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930977,"byte_end":8930989,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930994,"byte_end":8930997,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931002,"byte_end":8931016,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931021,"byte_end":8931024,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931029,"byte_end":8931040,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931045,"byte_end":8931079,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931084,"byte_end":8931114,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931119,"byte_end":8931122,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931127,"byte_end":8931147,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931152,"byte_end":8931175,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931180,"byte_end":8931240,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931245,"byte_end":8931248,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931253,"byte_end":8931316,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931321,"byte_end":8931345,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931350,"byte_end":8931408,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931413,"byte_end":8931422,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931427,"byte_end":8931430,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931435,"byte_end":8931498,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931503,"byte_end":8931559,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931564,"byte_end":8931571,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931576,"byte_end":8931583,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933676,"byte_end":8933685,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931907,"byte_end":8931980,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931985,"byte_end":8931994,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8931999,"byte_end":8932002,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932007,"byte_end":8932081,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932086,"byte_end":8932106,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932111,"byte_end":8932114,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932119,"byte_end":8932194,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932199,"byte_end":8932277,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932282,"byte_end":8932346,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932351,"byte_end":8932354,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932359,"byte_end":8932434,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932439,"byte_end":8932514,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932519,"byte_end":8932597,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932602,"byte_end":8932675,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932680,"byte_end":8932756,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932761,"byte_end":8932795,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932800,"byte_end":8932803,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932808,"byte_end":8932860,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932865,"byte_end":8932868,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932873,"byte_end":8932885,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932890,"byte_end":8932893,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932898,"byte_end":8932958,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932963,"byte_end":8932966,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932971,"byte_end":8932985,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932990,"byte_end":8932993,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8932998,"byte_end":8933013,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933018,"byte_end":8933021,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933026,"byte_end":8933037,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933042,"byte_end":8933095,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933100,"byte_end":8933103,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933108,"byte_end":8933128,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933133,"byte_end":8933156,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933161,"byte_end":8933209,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933214,"byte_end":8933254,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933259,"byte_end":8933319,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933324,"byte_end":8933327,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933332,"byte_end":8933359,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933364,"byte_end":8933408,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933413,"byte_end":8933456,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933461,"byte_end":8933468,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933473,"byte_end":8933480,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933485,"byte_end":8933488,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933493,"byte_end":8933540,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933545,"byte_end":8933580,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933585,"byte_end":8933618,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933623,"byte_end":8933646,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8933651,"byte_end":8933664,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935045,"byte_end":8935057,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8934837,"byte_end":8934912,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8934917,"byte_end":8934993,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8934998,"byte_end":8935033,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937461,"byte_end":8937467,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935674,"byte_end":8935751,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935756,"byte_end":8935768,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935773,"byte_end":8935776,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935781,"byte_end":8935850,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935855,"byte_end":8935883,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935888,"byte_end":8935891,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935896,"byte_end":8935971,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8935976,"byte_end":8936054,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936059,"byte_end":8936123,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936128,"byte_end":8936131,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936136,"byte_end":8936211,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936216,"byte_end":8936291,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936296,"byte_end":8936374,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936379,"byte_end":8936452,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936457,"byte_end":8936533,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936538,"byte_end":8936572,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936577,"byte_end":8936580,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936585,"byte_end":8936637,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936642,"byte_end":8936645,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936650,"byte_end":8936662,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936667,"byte_end":8936670,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936675,"byte_end":8936750,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936755,"byte_end":8936768,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936773,"byte_end":8936776,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936781,"byte_end":8936795,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936800,"byte_end":8936803,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936808,"byte_end":8936823,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936828,"byte_end":8936831,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936836,"byte_end":8936847,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936852,"byte_end":8936884,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936889,"byte_end":8936917,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936922,"byte_end":8936925,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936930,"byte_end":8936950,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936955,"byte_end":8936978,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8936983,"byte_end":8937031,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937036,"byte_end":8937104,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937109,"byte_end":8937112,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937117,"byte_end":8937144,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937149,"byte_end":8937193,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937198,"byte_end":8937241,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937246,"byte_end":8937253,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937258,"byte_end":8937265,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937270,"byte_end":8937273,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937278,"byte_end":8937325,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937330,"byte_end":8937365,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937370,"byte_end":8937403,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937408,"byte_end":8937431,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8937436,"byte_end":8937449,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5630},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939544,"byte_end":8939550,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938690,"byte_end":8938748,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938753,"byte_end":8938756,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938761,"byte_end":8938834,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938839,"byte_end":8938912,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938917,"byte_end":8938934,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938939,"byte_end":8938942,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938947,"byte_end":8938959,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938964,"byte_end":8938967,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8938972,"byte_end":8939035,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939040,"byte_end":8939043,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939048,"byte_end":8939062,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939067,"byte_end":8939070,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939075,"byte_end":8939090,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939095,"byte_end":8939098,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939103,"byte_end":8939114,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939119,"byte_end":8939151,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939156,"byte_end":8939184,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939189,"byte_end":8939192,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939197,"byte_end":8939217,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939222,"byte_end":8939245,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939250,"byte_end":8939298,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939303,"byte_end":8939371,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939376,"byte_end":8939379,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939384,"byte_end":8939411,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939416,"byte_end":8939460,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939465,"byte_end":8939508,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939513,"byte_end":8939520,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939525,"byte_end":8939532,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940958,"byte_end":8940966,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939844,"byte_end":8939917,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939922,"byte_end":8939925,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8939930,"byte_end":8940005,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940010,"byte_end":8940027,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940032,"byte_end":8940035,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940040,"byte_end":8940115,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940120,"byte_end":8940196,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940201,"byte_end":8940216,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940221,"byte_end":8940224,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940229,"byte_end":8940241,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940246,"byte_end":8940249,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940254,"byte_end":8940328,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940333,"byte_end":8940364,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940369,"byte_end":8940372,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940377,"byte_end":8940391,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940396,"byte_end":8940399,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940404,"byte_end":8940419,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940424,"byte_end":8940427,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940432,"byte_end":8940443,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940448,"byte_end":8940501,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940506,"byte_end":8940509,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940514,"byte_end":8940534,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940539,"byte_end":8940562,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940567,"byte_end":8940615,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940620,"byte_end":8940688,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940693,"byte_end":8940696,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940701,"byte_end":8940758,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940763,"byte_end":8940766,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940771,"byte_end":8940848,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940853,"byte_end":8940856,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940861,"byte_end":8940922,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940927,"byte_end":8940934,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8940939,"byte_end":8940946,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942834,"byte_end":8942839,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941684,"byte_end":8941752,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941757,"byte_end":8941771,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941776,"byte_end":8941779,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941784,"byte_end":8941859,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941864,"byte_end":8941884,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941889,"byte_end":8941892,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941897,"byte_end":8941967,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8941972,"byte_end":8942042,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942047,"byte_end":8942075,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942080,"byte_end":8942083,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942088,"byte_end":8942100,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942105,"byte_end":8942108,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942113,"byte_end":8942188,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942193,"byte_end":8942248,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942253,"byte_end":8942256,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942261,"byte_end":8942275,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942280,"byte_end":8942283,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942288,"byte_end":8942303,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942308,"byte_end":8942311,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942316,"byte_end":8942327,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942332,"byte_end":8942364,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942369,"byte_end":8942397,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942402,"byte_end":8942405,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942410,"byte_end":8942430,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942435,"byte_end":8942458,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942463,"byte_end":8942511,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942516,"byte_end":8942584,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942589,"byte_end":8942592,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942597,"byte_end":8942654,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942659,"byte_end":8942662,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942667,"byte_end":8942724,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942729,"byte_end":8942732,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942737,"byte_end":8942798,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942803,"byte_end":8942810,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942815,"byte_end":8942822,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5635},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943705,"byte_end":8943710,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942948,"byte_end":8942989,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8942994,"byte_end":8942997,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943002,"byte_end":8943076,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943081,"byte_end":8943084,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943089,"byte_end":8943155,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943160,"byte_end":8943163,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943168,"byte_end":8943215,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943220,"byte_end":8943223,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943228,"byte_end":8943242,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943247,"byte_end":8943250,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943255,"byte_end":8943266,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943271,"byte_end":8943303,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943308,"byte_end":8943336,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943341,"byte_end":8943344,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943349,"byte_end":8943369,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943374,"byte_end":8943397,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943402,"byte_end":8943450,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943455,"byte_end":8943458,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943463,"byte_end":8943521,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943526,"byte_end":8943529,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943534,"byte_end":8943575,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943580,"byte_end":8943583,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943588,"byte_end":8943616,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943621,"byte_end":8943624,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943629,"byte_end":8943669,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943674,"byte_end":8943681,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943686,"byte_end":8943693,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5636},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944182,"byte_end":8944190,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943865,"byte_end":8943940,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943945,"byte_end":8943948,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943953,"byte_end":8943967,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943972,"byte_end":8943975,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943980,"byte_end":8943991,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8943996,"byte_end":8944028,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944033,"byte_end":8944036,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944041,"byte_end":8944110,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944115,"byte_end":8944158,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944163,"byte_end":8944170,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944758,"byte_end":8944761,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944249,"byte_end":8944307,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944312,"byte_end":8944315,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944320,"byte_end":8944334,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944339,"byte_end":8944342,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944347,"byte_end":8944358,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944363,"byte_end":8944395,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944400,"byte_end":8944428,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944433,"byte_end":8944436,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944441,"byte_end":8944461,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944466,"byte_end":8944489,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944494,"byte_end":8944571,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944576,"byte_end":8944617,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944622,"byte_end":8944676,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944681,"byte_end":8944722,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944727,"byte_end":8944734,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944739,"byte_end":8944746,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5638},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945970,"byte_end":8945977,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944815,"byte_end":8944886,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944891,"byte_end":8944914,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944919,"byte_end":8944922,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8944927,"byte_end":8945002,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945007,"byte_end":8945083,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945088,"byte_end":8945164,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945169,"byte_end":8945245,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945250,"byte_end":8945273,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945278,"byte_end":8945281,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945286,"byte_end":8945358,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945363,"byte_end":8945396,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945401,"byte_end":8945404,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945409,"byte_end":8945421,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945426,"byte_end":8945429,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945434,"byte_end":8945506,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945511,"byte_end":8945533,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945538,"byte_end":8945541,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945546,"byte_end":8945560,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945565,"byte_end":8945568,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945573,"byte_end":8945580,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945585,"byte_end":8945617,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945622,"byte_end":8945650,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945655,"byte_end":8945658,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945663,"byte_end":8945683,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945688,"byte_end":8945711,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945716,"byte_end":8945764,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945769,"byte_end":8945772,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945777,"byte_end":8945838,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945843,"byte_end":8945875,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945880,"byte_end":8945883,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945888,"byte_end":8945934,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945939,"byte_end":8945946,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8945951,"byte_end":8945958,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5639},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946693,"byte_end":8946701,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946060,"byte_end":8946114,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946119,"byte_end":8946122,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946127,"byte_end":8946201,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946206,"byte_end":8946262,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946267,"byte_end":8946270,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946275,"byte_end":8946289,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946294,"byte_end":8946297,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946302,"byte_end":8946309,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946314,"byte_end":8946346,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946351,"byte_end":8946379,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946384,"byte_end":8946387,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946392,"byte_end":8946412,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946417,"byte_end":8946440,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946445,"byte_end":8946493,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946498,"byte_end":8946538,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946543,"byte_end":8946546,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946551,"byte_end":8946611,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946616,"byte_end":8946657,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946662,"byte_end":8946669,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8946674,"byte_end":8946681,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5665},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951364,"byte_end":8951371,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951309,"byte_end":8951352,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5666},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951480,"byte_end":8951487,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951417,"byte_end":8951468,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5667},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951605,"byte_end":8951615,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951545,"byte_end":8951593,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951726,"byte_end":8951734,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951658,"byte_end":8951714,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":5680},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952312,"byte_end":8952323,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8951938,"byte_end":8951976,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8951977,"byte_end":8951980,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8951981,"byte_end":8952056,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952057,"byte_end":8952134,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952135,"byte_end":8952170,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952171,"byte_end":8952174,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952175,"byte_end":8952193,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952194,"byte_end":8952197,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952198,"byte_end":8952274,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952275,"byte_end":8952304,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":5681},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953389,"byte_end":8953398,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952462,"byte_end":8952501,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952502,"byte_end":8952505,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952506,"byte_end":8952581,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952582,"byte_end":8952617,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952618,"byte_end":8952621,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952622,"byte_end":8952697,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952698,"byte_end":8952775,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952776,"byte_end":8952811,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952812,"byte_end":8952815,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952816,"byte_end":8952879,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952880,"byte_end":8952883,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952884,"byte_end":8952902,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952903,"byte_end":8952906,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952907,"byte_end":8952983,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8952984,"byte_end":8953013,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953014,"byte_end":8953017,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953018,"byte_end":8953032,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953033,"byte_end":8953036,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953037,"byte_end":8953084,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953085,"byte_end":8953088,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953089,"byte_end":8953096,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953097,"byte_end":8953140,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953141,"byte_end":8953144,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953145,"byte_end":8953163,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953164,"byte_end":8953185,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953186,"byte_end":8953238,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953239,"byte_end":8953279,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953280,"byte_end":8953285,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953286,"byte_end":8953293,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953294,"byte_end":8953297,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953298,"byte_end":8953339,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6121},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953658,"byte_end":8953663,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":6122}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953476,"byte_end":8953531,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953532,"byte_end":8953561,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953579,"byte_end":8953646,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954103,"byte_end":8954111,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954033,"byte_end":8954091,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954315,"byte_end":8954325,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954180,"byte_end":8954225,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954230,"byte_end":8954233,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954238,"byte_end":8954303,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954714,"byte_end":8954719,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954393,"byte_end":8954443,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954448,"byte_end":8954451,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954456,"byte_end":8954530,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954535,"byte_end":8954602,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954607,"byte_end":8954610,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954615,"byte_end":8954683,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954688,"byte_end":8954702,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989264,"byte_end":8989269,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988151,"byte_end":8988202,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988203,"byte_end":8988206,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988207,"byte_end":8988268,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988269,"byte_end":8988272,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988273,"byte_end":8988347,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988348,"byte_end":8988427,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988428,"byte_end":8988503,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988504,"byte_end":8988579,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988580,"byte_end":8988608,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988609,"byte_end":8988612,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988613,"byte_end":8988690,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988691,"byte_end":8988769,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988770,"byte_end":8988846,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988847,"byte_end":8988927,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8988928,"byte_end":8989005,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989006,"byte_end":8989087,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989088,"byte_end":8989170,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989171,"byte_end":8989174,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989175,"byte_end":8989235,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5879},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989470,"byte_end":8989478,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989407,"byte_end":8989458,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5880},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989610,"byte_end":8989621,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989527,"byte_end":8989598,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5881},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989809,"byte_end":8989820,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989743,"byte_end":8989797,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989957,"byte_end":8989971,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989871,"byte_end":8989945,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990162,"byte_end":8990169,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990095,"byte_end":8990150,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990305,"byte_end":8990315,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990217,"byte_end":8990293,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6200},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991529,"byte_end":8991536,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6201}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991333,"byte_end":8991393,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991394,"byte_end":8991456,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991783,"byte_end":8991786,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991590,"byte_end":8991636,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991641,"byte_end":8991644,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991649,"byte_end":8991663,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991668,"byte_end":8991671,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991676,"byte_end":8991683,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991688,"byte_end":8991717,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991722,"byte_end":8991725,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991730,"byte_end":8991759,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991764,"byte_end":8991771,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991912,"byte_end":8991920,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991836,"byte_end":8991900,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5899},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992056,"byte_end":8992064,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991994,"byte_end":8992044,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5900},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992308,"byte_end":8992322,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992123,"byte_end":8992195,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992200,"byte_end":8992203,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992208,"byte_end":8992220,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992225,"byte_end":8992228,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992233,"byte_end":8992296,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993013,"byte_end":8993035,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992418,"byte_end":8992493,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992498,"byte_end":8992546,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992551,"byte_end":8992554,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992559,"byte_end":8992573,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992578,"byte_end":8992581,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992586,"byte_end":8992593,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992598,"byte_end":8992650,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992655,"byte_end":8992658,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992663,"byte_end":8992681,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992686,"byte_end":8992707,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992712,"byte_end":8992745,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992750,"byte_end":8992795,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992800,"byte_end":8992837,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992842,"byte_end":8992904,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992909,"byte_end":8992979,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992984,"byte_end":8992989,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8992994,"byte_end":8993001,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5902},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993758,"byte_end":8993783,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993147,"byte_end":8993222,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993227,"byte_end":8993286,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993291,"byte_end":8993294,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993299,"byte_end":8993313,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993318,"byte_end":8993321,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993326,"byte_end":8993333,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993338,"byte_end":8993390,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993395,"byte_end":8993398,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993403,"byte_end":8993421,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993426,"byte_end":8993447,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993452,"byte_end":8993485,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993490,"byte_end":8993535,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993540,"byte_end":8993577,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993582,"byte_end":8993647,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993652,"byte_end":8993724,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993729,"byte_end":8993734,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993739,"byte_end":8993746,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5903},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994554,"byte_end":8994561,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993890,"byte_end":8993960,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993965,"byte_end":8993968,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993973,"byte_end":8993985,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993990,"byte_end":8993993,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8993998,"byte_end":8994066,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994071,"byte_end":8994137,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994142,"byte_end":8994169,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994174,"byte_end":8994177,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994182,"byte_end":8994196,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994201,"byte_end":8994204,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994209,"byte_end":8994216,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994221,"byte_end":8994273,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994278,"byte_end":8994281,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994286,"byte_end":8994304,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994309,"byte_end":8994330,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994335,"byte_end":8994372,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994377,"byte_end":8994425,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994430,"byte_end":8994466,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994471,"byte_end":8994520,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994525,"byte_end":8994530,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994535,"byte_end":8994542,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994842,"byte_end":8994853,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994625,"byte_end":8994700,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994705,"byte_end":8994776,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994781,"byte_end":8994830,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5905},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995192,"byte_end":8995203,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8994975,"byte_end":8995050,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995055,"byte_end":8995126,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995131,"byte_end":8995180,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":5941},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998667,"byte_end":8998675,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8996925,"byte_end":8997002,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997003,"byte_end":8997034,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997035,"byte_end":8997038,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997039,"byte_end":8997119,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997120,"byte_end":8997159,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997160,"byte_end":8997163,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997164,"byte_end":8997237,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997238,"byte_end":8997241,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997242,"byte_end":8997254,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997255,"byte_end":8997258,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997259,"byte_end":8997304,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997305,"byte_end":8997308,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997309,"byte_end":8997323,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997324,"byte_end":8997327,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997328,"byte_end":8997335,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997336,"byte_end":8997374,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997375,"byte_end":8997378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997379,"byte_end":8997397,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997398,"byte_end":8997419,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997420,"byte_end":8997489,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997490,"byte_end":8997493,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997494,"byte_end":8997524,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997525,"byte_end":8997555,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997556,"byte_end":8997586,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997587,"byte_end":8997590,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997591,"byte_end":8997634,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997635,"byte_end":8997640,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997641,"byte_end":8997648,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997649,"byte_end":8997652,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997653,"byte_end":8997727,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997728,"byte_end":8997731,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997732,"byte_end":8997809,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997810,"byte_end":8997885,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997886,"byte_end":8997962,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8997963,"byte_end":8998024,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998025,"byte_end":8998028,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998029,"byte_end":8998107,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998108,"byte_end":8998178,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998179,"byte_end":8998191,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998192,"byte_end":8998195,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998196,"byte_end":8998203,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998204,"byte_end":8998224,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998225,"byte_end":8998228,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998229,"byte_end":8998270,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998271,"byte_end":8998297,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998298,"byte_end":8998357,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998358,"byte_end":8998363,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998364,"byte_end":8998367,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998368,"byte_end":8998386,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998387,"byte_end":8998408,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998409,"byte_end":8998481,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998482,"byte_end":8998506,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998507,"byte_end":8998541,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998542,"byte_end":8998587,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998588,"byte_end":8998597,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998598,"byte_end":8998603,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998604,"byte_end":8998611,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998612,"byte_end":8998615,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998616,"byte_end":8998659,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":5942},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999564,"byte_end":8999575,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998825,"byte_end":8998898,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998899,"byte_end":8998936,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998937,"byte_end":8998940,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8998941,"byte_end":8999021,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999022,"byte_end":8999061,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999062,"byte_end":8999065,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999066,"byte_end":8999078,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999079,"byte_end":8999082,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999083,"byte_end":8999128,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999129,"byte_end":8999132,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999133,"byte_end":8999147,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999148,"byte_end":8999151,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999152,"byte_end":8999159,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999160,"byte_end":8999214,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999215,"byte_end":8999218,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999219,"byte_end":8999237,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999238,"byte_end":8999259,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999260,"byte_end":8999323,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999324,"byte_end":8999397,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999398,"byte_end":8999401,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999402,"byte_end":8999432,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999433,"byte_end":8999463,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999464,"byte_end":8999494,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999495,"byte_end":8999498,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999499,"byte_end":8999542,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999543,"byte_end":8999548,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999549,"byte_end":8999556,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6223},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000024,"byte_end":9000032,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6224},{"krate":0,"index":6225}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999773,"byte_end":8999852,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999853,"byte_end":8999856,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999857,"byte_end":8999934,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999935,"byte_end":8999947,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999948,"byte_end":8999951,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":8999952,"byte_end":8999995,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000277,"byte_end":9000286,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001378,"byte_end":9001382,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000773,"byte_end":9000842,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000847,"byte_end":9000850,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000855,"byte_end":9000869,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000874,"byte_end":9000877,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000882,"byte_end":9000889,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000894,"byte_end":9000914,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000919,"byte_end":9000922,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000927,"byte_end":9000955,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000960,"byte_end":9000963,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000968,"byte_end":9000986,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000991,"byte_end":9001012,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001017,"byte_end":9001086,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001091,"byte_end":9001094,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001099,"byte_end":9001129,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001134,"byte_end":9001164,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001169,"byte_end":9001199,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001204,"byte_end":9001207,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001212,"byte_end":9001255,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001260,"byte_end":9001265,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001270,"byte_end":9001277,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9001282,"byte_end":9001322,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":5966},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003064,"byte_end":9003071,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002049,"byte_end":9002126,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002127,"byte_end":9002130,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002131,"byte_end":9002210,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002211,"byte_end":9002283,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002284,"byte_end":9002297,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002298,"byte_end":9002301,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002302,"byte_end":9002319,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002320,"byte_end":9002323,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002324,"byte_end":9002402,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002403,"byte_end":9002433,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002434,"byte_end":9002437,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002438,"byte_end":9002518,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002519,"byte_end":9002546,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002547,"byte_end":9002550,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002551,"byte_end":9002565,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002566,"byte_end":9002569,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002570,"byte_end":9002630,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002631,"byte_end":9002634,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002635,"byte_end":9002646,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002647,"byte_end":9002676,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002677,"byte_end":9002706,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002707,"byte_end":9002710,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002711,"byte_end":9002739,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002740,"byte_end":9002743,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002744,"byte_end":9002766,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002767,"byte_end":9002805,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002806,"byte_end":9002833,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002834,"byte_end":9002837,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002838,"byte_end":9002911,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002912,"byte_end":9002978,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9002979,"byte_end":9003034,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003035,"byte_end":9003040,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003041,"byte_end":9003048,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003049,"byte_end":9003056,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004293,"byte_end":9004303,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003262,"byte_end":9003334,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003335,"byte_end":9003338,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003339,"byte_end":9003416,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003417,"byte_end":9003472,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003473,"byte_end":9003476,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003477,"byte_end":9003494,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003495,"byte_end":9003498,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003499,"byte_end":9003577,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003578,"byte_end":9003608,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003609,"byte_end":9003612,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003613,"byte_end":9003693,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003694,"byte_end":9003721,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003722,"byte_end":9003725,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003726,"byte_end":9003740,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003741,"byte_end":9003744,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003745,"byte_end":9003805,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003806,"byte_end":9003809,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003810,"byte_end":9003821,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003822,"byte_end":9003865,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003866,"byte_end":9003895,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003896,"byte_end":9003899,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003900,"byte_end":9003928,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003929,"byte_end":9003932,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003933,"byte_end":9003955,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003956,"byte_end":9003994,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9003995,"byte_end":9004022,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004023,"byte_end":9004026,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004027,"byte_end":9004105,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004106,"byte_end":9004120,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004121,"byte_end":9004207,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004208,"byte_end":9004263,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004264,"byte_end":9004269,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004270,"byte_end":9004277,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004278,"byte_end":9004285,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6546},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004678,"byte_end":9004685,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pin-project-lite-0.1.11\\src\\lib.rs","byte_start":8025526,"byte_end":8025535,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004842,"byte_end":9004849,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004770,"byte_end":9004802,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5975},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005200,"byte_end":9005207,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005127,"byte_end":9005188,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5976},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005335,"byte_end":9005342,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005254,"byte_end":9005323,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5977},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005471,"byte_end":9005481,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005401,"byte_end":9005459,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":6024},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022173,"byte_end":9022178,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6023},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022123,"byte_end":9022163,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6025},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022236,"byte_end":9022244,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6023},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022209,"byte_end":9022226,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022333,"byte_end":9022338,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6023},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022251,"byte_end":9022323,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182190,"byte_end":182196,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182099,"byte_end":182128,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182133,"byte_end":182136,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182141,"byte_end":182180,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182226,"byte_end":182232,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182203,"byte_end":182216,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\rand.rs","byte_start":198817,"byte_end":198829,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\rand.rs","byte_start":198682,"byte_end":198733,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8254580,"byte_end":8254591,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8255350,"byte_end":8255361,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8255568,"byte_end":8255579,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8258201,"byte_end":8258212,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8243918,"byte_end":8243924,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8246785,"byte_end":8246791,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8247190,"byte_end":8247196,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8247332,"byte_end":8247338,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248481,"byte_end":8248487,"line_start":227,"line_end":227,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248565,"byte_end":8248571,"line_start":233,"line_end":233,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248706,"byte_end":8248711,"line_start":241,"line_end":241,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8250255,"byte_end":8250264,"line_start":295,"line_end":295,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264770,"byte_end":8264781,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272572,"byte_end":8272583,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8273076,"byte_end":8273087,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8274168,"byte_end":8274179,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8274352,"byte_end":8274363,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276511,"byte_end":8276523,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287393,"byte_end":8287405,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287430,"byte_end":8287442,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287461,"byte_end":8287473,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289255,"byte_end":8289263,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290180,"byte_end":8290189,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290439,"byte_end":8290447,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8291002,"byte_end":8291011,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8291960,"byte_end":8291965,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292358,"byte_end":8292363,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292616,"byte_end":8292621,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292744,"byte_end":8292752,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292789,"byte_end":8292798,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292835,"byte_end":8292843,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292880,"byte_end":8292889,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292932,"byte_end":8292940,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8293108,"byte_end":8293117,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\seek.rs","byte_start":8293807,"byte_end":8293811,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8305906,"byte_end":8305907,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8345339,"byte_end":8345340,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8347098,"byte_end":8347099,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8382446,"byte_end":8382447,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8383863,"byte_end":8383872,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8386051,"byte_end":8386060,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8387036,"byte_end":8387045,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8387876,"byte_end":8387885,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8388601,"byte_end":8388610,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390117,"byte_end":8390126,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391963,"byte_end":8391972,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8392114,"byte_end":8392123,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8392835,"byte_end":8392844,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8393374,"byte_end":8393383,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8393862,"byte_end":8393871,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395825,"byte_end":8395834,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8398112,"byte_end":8398121,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399011,"byte_end":8399020,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399502,"byte_end":8399511,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1583},{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399798,"byte_end":8399807,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8400976,"byte_end":8400981,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8402121,"byte_end":8402126,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8402405,"byte_end":8402410,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8403233,"byte_end":8403238,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\copy.rs","byte_start":8406281,"byte_end":8406285,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409395,"byte_end":8409400,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409729,"byte_end":8409734,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409967,"byte_end":8409972,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\flush.rs","byte_start":8410793,"byte_end":8410798,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1675},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8411978,"byte_end":8411983,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413235,"byte_end":8413240,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8417152,"byte_end":8417164,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8417713,"byte_end":8417725,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8418450,"byte_end":8418462,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8418622,"byte_end":8418626,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8419032,"byte_end":8419036,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8419862,"byte_end":8419866,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read.rs","byte_start":8421794,"byte_end":8421798,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_buf.rs","byte_start":8422859,"byte_end":8422866,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_exact.rs","byte_start":8424231,"byte_end":8424240,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_line.rs","byte_start":8432518,"byte_end":8432526,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_end.rs","byte_start":8438446,"byte_end":8438455,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_string.rs","byte_start":8441194,"byte_end":8441206,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_until.rs","byte_start":8443646,"byte_end":8443655,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\repeat.rs","byte_start":8445489,"byte_end":8445495,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\shutdown.rs","byte_start":8446617,"byte_end":8446625,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8448458,"byte_end":8448462,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8448972,"byte_end":8448976,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8449941,"byte_end":8449946,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450685,"byte_end":8450690,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452642,"byte_end":8452646,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454274,"byte_end":8454278,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454935,"byte_end":8454939,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write.rs","byte_start":8456496,"byte_end":8456501,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_all.rs","byte_start":8457294,"byte_end":8457302,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_buf.rs","byte_start":8458810,"byte_end":8458818,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465629,"byte_end":8465640,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476661,"byte_end":8476672,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2647},{"krate":0,"index":2648}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8477112,"byte_end":8477123,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8477449,"byte_end":8477460,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478519,"byte_end":8478527,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481336,"byte_end":8481344,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483799,"byte_end":8483807,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8484127,"byte_end":8484136,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8484949,"byte_end":8484957,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8485051,"byte_end":8485060,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488148,"byte_end":8488160,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488363,"byte_end":8488375,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488385,"byte_end":8488398,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491232,"byte_end":8491245,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491550,"byte_end":8491564,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492247,"byte_end":8492261,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492421,"byte_end":8492435,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8493374,"byte_end":8493387,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8493483,"byte_end":8493497,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495632,"byte_end":8495641,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":2797},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8520698,"byte_end":8520707,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521143,"byte_end":8521152,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521505,"byte_end":8521514,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521828,"byte_end":8521837,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8522581,"byte_end":8522590,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523819,"byte_end":8523828,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970},{"krate":0,"index":2971},{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538489,"byte_end":8538498,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2974},{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538934,"byte_end":8538943,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8539263,"byte_end":8539272,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541586,"byte_end":8541598,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541801,"byte_end":8541813,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542340,"byte_end":8542348,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543980,"byte_end":8543988,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545308,"byte_end":8545316,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545407,"byte_end":8545415,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8545628,"byte_end":8545634,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8546591,"byte_end":8546597,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8546811,"byte_end":8546817,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8548943,"byte_end":8548957,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3208}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8552496,"byte_end":8552501,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8553188,"byte_end":8553202,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554089,"byte_end":8554103,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554269,"byte_end":8554276,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3238}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554734,"byte_end":8554741,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554909,"byte_end":8554912,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8556010,"byte_end":8556016,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8563699,"byte_end":8563705,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8563730,"byte_end":8563736,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8564095,"byte_end":8564099,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8564877,"byte_end":8564881,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571263,"byte_end":8571272,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574351,"byte_end":8574360,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574603,"byte_end":8574612,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574889,"byte_end":8574898,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574932,"byte_end":8574937,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3359}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8575615,"byte_end":8575622,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8576099,"byte_end":8576106,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":3405},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8578277,"byte_end":8578282,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590586,"byte_end":8590596,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590633,"byte_end":8590643,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590659,"byte_end":8590669,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590845,"byte_end":8590855,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590882,"byte_end":8590892,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8592118,"byte_end":8592128,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8592394,"byte_end":8592404,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8593651,"byte_end":8593658,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8595189,"byte_end":8595196,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8595286,"byte_end":8595293,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8597975,"byte_end":8597980,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3560},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8606836,"byte_end":8606844,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8608721,"byte_end":8608726,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8608885,"byte_end":8608893,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\waker.rs","byte_start":8610711,"byte_end":8610719,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3613}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557029,"byte_end":8557033,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557064,"byte_end":8557068,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557205,"byte_end":8557213,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557254,"byte_end":8557262,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8559186,"byte_end":8559190,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3664},{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560082,"byte_end":8560086,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560255,"byte_end":8560263,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560549,"byte_end":8560553,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3675}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560793,"byte_end":8560797,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560949,"byte_end":8560957,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3681}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8561173,"byte_end":8561177,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3684},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\blocking\\mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3738},{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154847,"byte_end":154853,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3779},{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164213,"byte_end":164228,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164376,"byte_end":164391,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164549,"byte_end":164564,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\shell.rs","byte_start":166853,"byte_end":166858,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\shell.rs","byte_start":167464,"byte_end":167470,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\spawner.rs","byte_start":168067,"byte_end":168074,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\spawner.rs","byte_start":168317,"byte_end":168324,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":172927,"byte_end":172933,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":174474,"byte_end":174484,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":175331,"byte_end":175347,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":175479,"byte_end":175495,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3847}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":177235,"byte_end":177241,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3852},{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629573,"byte_end":8629580,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632860,"byte_end":8632877,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643444,"byte_end":8643450,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643577,"byte_end":8643583,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643744,"byte_end":8643748,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643818,"byte_end":8643822,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646596,"byte_end":8646602,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646639,"byte_end":8646645,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646683,"byte_end":8646691,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646728,"byte_end":8646736,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646752,"byte_end":8646758,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652394,"byte_end":8652398,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652790,"byte_end":8652796,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652976,"byte_end":8652982,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8653136,"byte_end":8653144,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3977}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658009,"byte_end":8658017,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8660835,"byte_end":8660840,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8664712,"byte_end":8664720,"line_start":980,"line_end":980,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8665904,"byte_end":8665908,"line_start":1020,"line_end":1020,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8666750,"byte_end":8666754,"line_start":1050,"line_end":1050,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8669532,"byte_end":8669536,"line_start":1138,"line_end":1138,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4017}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670334,"byte_end":8670340,"line_start":1167,"line_end":1167,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670755,"byte_end":8670761,"line_start":1184,"line_end":1184,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670905,"byte_end":8670913,"line_start":1190,"line_end":1190,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671048,"byte_end":8671057,"line_start":1196,"line_end":1196,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671230,"byte_end":8671239,"line_start":1205,"line_end":1205,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671530,"byte_end":8671539,"line_start":1215,"line_end":1215,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4043}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671812,"byte_end":8671821,"line_start":1224,"line_end":1224,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671848,"byte_end":8671860,"line_start":1226,"line_end":1226,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8672202,"byte_end":8672214,"line_start":1236,"line_end":1236,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8678523,"byte_end":8678528,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8688510,"byte_end":8688516,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8688998,"byte_end":8689004,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689642,"byte_end":8689648,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689780,"byte_end":8689786,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690193,"byte_end":8690201,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4150}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691973,"byte_end":8691981,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694409,"byte_end":8694417,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694673,"byte_end":8694679,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4181},{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706069,"byte_end":8706071,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4218}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706472,"byte_end":8706474,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4226}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706781,"byte_end":8706790,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8707052,"byte_end":8707064,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8708849,"byte_end":8708853,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4254}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709486,"byte_end":8709494,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4261}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709760,"byte_end":8709764,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709813,"byte_end":8709817,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8710296,"byte_end":8710298,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8710997,"byte_end":8710999,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4280}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711147,"byte_end":8711149,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711327,"byte_end":8711329,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4287}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711729,"byte_end":8711731,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8712258,"byte_end":8712260,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4298},{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8715380,"byte_end":8715382,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8715818,"byte_end":8715822,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8716286,"byte_end":8716290,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8716839,"byte_end":8716851,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8718511,"byte_end":8718522,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8721266,"byte_end":8721268,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8726972,"byte_end":8726974,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4388}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8727251,"byte_end":8727253,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8730652,"byte_end":8730654,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4397}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731328,"byte_end":8731343,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4413}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731484,"byte_end":8731499,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731957,"byte_end":8731974,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732952,"byte_end":8732969,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4435},{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735624,"byte_end":8735639,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736749,"byte_end":8736758,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4450}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736918,"byte_end":8736927,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737413,"byte_end":8737425,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737458,"byte_end":8737470,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737810,"byte_end":8737822,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4460}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738051,"byte_end":8738060,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738190,"byte_end":8738199,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738685,"byte_end":8738697,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739003,"byte_end":8739015,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739172,"byte_end":8739183,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739282,"byte_end":8739293,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739423,"byte_end":8739434,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739938,"byte_end":8739954,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739991,"byte_end":8740007,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5340}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746306,"byte_end":8746311,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746365,"byte_end":8746370,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746424,"byte_end":8746434,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746499,"byte_end":8746514,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746801,"byte_end":8746813,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746950,"byte_end":8746962,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747770,"byte_end":8747775,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4510},{"krate":0,"index":4513},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752348,"byte_end":8752353,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752437,"byte_end":8752442,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4525}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752566,"byte_end":8752571,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752966,"byte_end":8752976,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4531}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753077,"byte_end":8753087,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753234,"byte_end":8753244,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753401,"byte_end":8753411,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753577,"byte_end":8753587,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753765,"byte_end":8753780,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4547}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753877,"byte_end":8753892,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4550},{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754035,"byte_end":8754050,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4554}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754203,"byte_end":8754218,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4557}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754380,"byte_end":8754395,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4560}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758359,"byte_end":8758367,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758400,"byte_end":8758408,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758671,"byte_end":8758677,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4594}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8762685,"byte_end":8762691,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4596}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8764429,"byte_end":8764437,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4599}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8764947,"byte_end":8764955,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4601},{"krate":0,"index":4602}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8769785,"byte_end":8769793,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8772751,"byte_end":8772757,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774633,"byte_end":8774642,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4638}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774804,"byte_end":8774813,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774882,"byte_end":8774894,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775193,"byte_end":8775205,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777016,"byte_end":8777022,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4654},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783323,"byte_end":8783329,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783468,"byte_end":8783476,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4670},{"krate":0,"index":4671}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787867,"byte_end":8787875,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8788022,"byte_end":8788030,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8788493,"byte_end":8788498,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4687},{"krate":0,"index":4691},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4701}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792870,"byte_end":8792875,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792912,"byte_end":8792917,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792942,"byte_end":8792947,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4709}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8793316,"byte_end":8793321,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8793716,"byte_end":8793721,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8795434,"byte_end":8795439,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8798917,"byte_end":8798926,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4785},{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8808847,"byte_end":8808856,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4793}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8809057,"byte_end":8809063,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4795},{"krate":0,"index":4796}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8809929,"byte_end":8809936,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8810614,"byte_end":8810621,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8811420,"byte_end":8811427,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813069,"byte_end":8813076,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813123,"byte_end":8813135,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813228,"byte_end":8813240,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4812}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813384,"byte_end":8813396,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813443,"byte_end":8813458,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4815},{"krate":0,"index":4816}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814080,"byte_end":8814095,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814381,"byte_end":8814396,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814489,"byte_end":8814495,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8819764,"byte_end":8819773,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4886},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8835967,"byte_end":8835976,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836055,"byte_end":8836064,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836442,"byte_end":8836451,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836476,"byte_end":8836485,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836523,"byte_end":8836529,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4898},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4908}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8842935,"byte_end":8842941,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843014,"byte_end":8843020,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843442,"byte_end":8843454,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4915}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843634,"byte_end":8843646,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4918}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843790,"byte_end":8843802,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843849,"byte_end":8843864,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4921},{"krate":0,"index":4922}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844394,"byte_end":8844409,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844695,"byte_end":8844710,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844748,"byte_end":8844754,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4935}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8850241,"byte_end":8850249,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8853912,"byte_end":8853920,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8854273,"byte_end":8854284,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857013,"byte_end":8857022,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859117,"byte_end":8859132,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4981}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859377,"byte_end":8859397,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4983}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859651,"byte_end":8859666,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859774,"byte_end":8859794,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4988}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863148,"byte_end":8863163,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5010},{"krate":0,"index":5013}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866581,"byte_end":8866596,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5019}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866776,"byte_end":8866791,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5023}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866967,"byte_end":8866982,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5027}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867446,"byte_end":8867462,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871056,"byte_end":8871072,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871252,"byte_end":8871268,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5050}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871444,"byte_end":8871460,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872536,"byte_end":8872542,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872596,"byte_end":8872602,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872836,"byte_end":8872851,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872909,"byte_end":8872924,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872989,"byte_end":8873005,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873318,"byte_end":8873334,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873392,"byte_end":8873398,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5074},{"krate":0,"index":5078}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876586,"byte_end":8876601,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5081},{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876732,"byte_end":8876748,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876882,"byte_end":8876898,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8877012,"byte_end":8877018,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8877110,"byte_end":8877116,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5095}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8883391,"byte_end":8883402,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5126},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889329,"byte_end":8889340,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889426,"byte_end":8889437,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889570,"byte_end":8889581,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889606,"byte_end":8889617,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889713,"byte_end":8889718,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5139},{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893259,"byte_end":8893268,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5171}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893448,"byte_end":8893457,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895616,"byte_end":8895624,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5182},{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896896,"byte_end":8896904,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5187}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898537,"byte_end":8898545,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5194}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898848,"byte_end":8898856,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5197}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898970,"byte_end":8898976,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900511,"byte_end":8900517,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5210}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900756,"byte_end":8900759,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5213},{"krate":0,"index":5214}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900900,"byte_end":8900906,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901008,"byte_end":8901015,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5219}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901238,"byte_end":8901245,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901362,"byte_end":8901369,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901399,"byte_end":8901406,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5224}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901553,"byte_end":8901560,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5227},{"krate":0,"index":5228}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\yield_now.rs","byte_start":8914765,"byte_end":8914773,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5591},{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\clock.rs","byte_start":8919751,"byte_end":8919756,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930354,"byte_end":8930364,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5642}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948358,"byte_end":8948368,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948396,"byte_end":8948406,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5647}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948935,"byte_end":8948940,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951067,"byte_end":8951072,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5660}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951202,"byte_end":8951205,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":5662}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951292,"byte_end":8951299,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5667},{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953837,"byte_end":8953842,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954820,"byte_end":8954825,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8968495,"byte_end":8968506,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8970484,"byte_end":8970502,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8971098,"byte_end":8971116,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5712}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8975354,"byte_end":8975359,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982027,"byte_end":8982032,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5756}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982240,"byte_end":8982245,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982270,"byte_end":8982275,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\handle.rs","byte_start":8982652,"byte_end":8982658,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\handle.rs","byte_start":8983303,"byte_end":8983309,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\registration.rs","byte_start":8983754,"byte_end":8983766,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5787},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\registration.rs","byte_start":8984676,"byte_end":8984688,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\stack.rs","byte_start":8984972,"byte_end":8984977,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5802}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\stack.rs","byte_start":8985068,"byte_end":8985073,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8959790,"byte_end":8959796,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8963493,"byte_end":8963499,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8966072,"byte_end":8966078,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8966194,"byte_end":8966199,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8967816,"byte_end":8967821,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5873}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989395,"byte_end":8989400,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5879},{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990767,"byte_end":8990772,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990799,"byte_end":8990804,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5889}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991576,"byte_end":8991583,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5897},{"krate":0,"index":5898},{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995357,"byte_end":8995364,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5907}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995493,"byte_end":8995500,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5909}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995615,"byte_end":8995622,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5911},{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995787,"byte_end":8995794,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5914}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995899,"byte_end":8995906,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5916},{"krate":0,"index":5917}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996047,"byte_end":8996054,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996215,"byte_end":8996222,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996329,"byte_end":8996336,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000218,"byte_end":9000226,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004861,"byte_end":9004868,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5971}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004997,"byte_end":9005004,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005542,"byte_end":9005549,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5980},{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006127,"byte_end":9006134,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006278,"byte_end":9006285,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006322,"byte_end":9006327,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\level.rs","byte_start":9016231,"byte_end":9016236,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":6008},{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\level.rs","byte_start":9020988,"byte_end":9020993,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\mod.rs","byte_start":9008052,"byte_end":9008057,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6045},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\mod.rs","byte_start":9013765,"byte_end":9013769,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6055}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\bit.rs","byte_start":9022877,"byte_end":9022881,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\bit.rs","byte_start":9024355,"byte_end":9024359,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\addr.rs","byte_start":9031578,"byte_end":9031585,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\generation.rs","byte_start":9034614,"byte_end":9034624,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9035763,"byte_end":9035768,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9036110,"byte_end":9036116,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6349},{"krate":0,"index":6352},{"krate":0,"index":6355},{"krate":0,"index":6358}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9040068,"byte_end":9040073,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6363}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9040379,"byte_end":9040385,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6367}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\shard.rs","byte_start":9042528,"byte_end":9042533,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6381},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\shard.rs","byte_start":9044212,"byte_end":9044217,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6391}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\slot.rs","byte_start":9044594,"byte_end":9044598,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\stack.rs","byte_start":9045569,"byte_end":9045582,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\stack.rs","byte_start":9046410,"byte_end":9046423,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6427}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9025957,"byte_end":9025961,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9025998,"byte_end":9026002,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9026025,"byte_end":9026029,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9027544,"byte_end":9027548,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6450}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":181548,"byte_end":181558,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":181617,"byte_end":181627,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182916,"byte_end":182924,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182961,"byte_end":182969,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":183023,"byte_end":183033,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":186037,"byte_end":186047,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":186292,"byte_end":186302,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6499}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":187385,"byte_end":187393,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":187592,"byte_end":187600,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\rand.rs","byte_start":197672,"byte_end":197680,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\wake.rs","byte_start":199542,"byte_end":199550,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203516,"byte_end":203524,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203774,"byte_end":203782,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203887,"byte_end":203895,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":204204,"byte_end":204214,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2610}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2900}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":564}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":570}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14509,"byte_end":14513,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3854}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627318,"byte_end":8627327,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":3868}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627485,"byte_end":8627489,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4050}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\mod.rs","byte_start":8675940,"byte_end":8675945,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4445}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627636,"byte_end":8627643,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4616}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mod.rs","byte_start":8627957,"byte_end":8627962,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5146}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5566}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5593}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\mod.rs","byte_start":8918040,"byte_end":8918051,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":5596}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\macros\\scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":896},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":896},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\future\\try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":31276},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":31276},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":31276},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":246}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":31276},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4511},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6959},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8254580,"byte_end":8254591,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1175},"to":{"krate":0,"index":6306}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8255350,"byte_end":8255361,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8255568,"byte_end":8255579,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\scheduled_io.rs","byte_start":8258201,"byte_end":8258212,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1175},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8243918,"byte_end":8243924,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8246785,"byte_end":8246791,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1042},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8247190,"byte_end":8247196,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1042},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8247332,"byte_end":8247338,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248481,"byte_end":8248487,"line_start":227,"line_end":227,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1181},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248565,"byte_end":8248571,"line_start":233,"line_end":233,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8248706,"byte_end":8248711,"line_start":241,"line_end":241,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\driver\\mod.rs","byte_start":8250255,"byte_end":8250264,"line_start":295,"line_end":295,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8264770,"byte_end":8264781,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8272572,"byte_end":8272583,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8273076,"byte_end":8273087,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8274168,"byte_end":8274179,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\poll_evented.rs","byte_start":8274352,"byte_end":8274363,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1201},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8276511,"byte_end":8276523,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287393,"byte_end":8287405,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287430,"byte_end":8287442,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\registration.rs","byte_start":8287461,"byte_end":8287473,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8289255,"byte_end":8289263,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290180,"byte_end":8290189,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8290439,"byte_end":8290447,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1322},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8291002,"byte_end":8291011,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1325},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8291960,"byte_end":8291965,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292358,"byte_end":8292363,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292616,"byte_end":8292621,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1233},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292744,"byte_end":8292752,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292789,"byte_end":8292798,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292835,"byte_end":8292843,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292880,"byte_end":8292889,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8292932,"byte_end":8292940,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\split.rs","byte_start":8293108,"byte_end":8293117,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1325},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\seek.rs","byte_start":8293807,"byte_end":8293811,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8296873,"byte_end":8296885,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_buf_read_ext.rs","byte_start":8305906,"byte_end":8305907,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1354},"to":{"krate":0,"index":2056}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8307934,"byte_end":8307943,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2064}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_read_ext.rs","byte_start":8345339,"byte_end":8345340,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":2064}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8346219,"byte_end":8346228,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1409}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_seek_ext.rs","byte_start":8347098,"byte_end":8347099,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1412},"to":{"krate":0,"index":1409}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8349156,"byte_end":8349166,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2116}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\async_write_ext.rs","byte_start":8382446,"byte_end":8382447,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1453},"to":{"krate":0,"index":2116}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8383863,"byte_end":8383872,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8386051,"byte_end":8386060,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8387036,"byte_end":8387045,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8387876,"byte_end":8387885,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8419},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_reader.rs","byte_start":8388601,"byte_end":8388610,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8419},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8390117,"byte_end":8390126,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8391963,"byte_end":8391972,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8392},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8392114,"byte_end":8392123,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8392},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8392835,"byte_end":8392844,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8392},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8393374,"byte_end":8393383,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8392},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_stream.rs","byte_start":8393862,"byte_end":8393871,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8392},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8395825,"byte_end":8395834,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8398112,"byte_end":8398121,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8342},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399011,"byte_end":8399020,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":8342},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399502,"byte_end":8399511,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":8342},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\buf_writer.rs","byte_start":8399798,"byte_end":8399807,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":8342},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8400976,"byte_end":8400981,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":8293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8402121,"byte_end":8402126,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":8293},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8402405,"byte_end":8402410,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":8293},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\chain.rs","byte_start":8403233,"byte_end":8403238,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":8293},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\copy.rs","byte_start":8406281,"byte_end":8406285,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2166},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409395,"byte_end":8409400,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2182},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409729,"byte_end":8409734,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2182},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\empty.rs","byte_start":8409967,"byte_end":8409972,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\flush.rs","byte_start":8410793,"byte_end":8410798,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2185},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8411978,"byte_end":8411983,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":8254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\lines.rs","byte_start":8413235,"byte_end":8413240,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8417152,"byte_end":8417164,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2193},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8417713,"byte_end":8417725,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2193},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8418450,"byte_end":8418462,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8418622,"byte_end":8418626,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8419032,"byte_end":8419036,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\mem.rs","byte_start":8419862,"byte_end":8419866,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2198},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read.rs","byte_start":8421794,"byte_end":8421798,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2206},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_buf.rs","byte_start":8422859,"byte_end":8422866,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2215},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_exact.rs","byte_start":8424231,"byte_end":8424240,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2226},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_line.rs","byte_start":8432518,"byte_end":8432526,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2380},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_end.rs","byte_start":8438446,"byte_end":8438455,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_to_string.rs","byte_start":8441194,"byte_end":8441206,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2401},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\read_until.rs","byte_start":8443646,"byte_end":8443655,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2412},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\repeat.rs","byte_start":8445489,"byte_end":8445495,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2424},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\shutdown.rs","byte_start":8446617,"byte_end":8446625,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2428},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8448458,"byte_end":8448462,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2436},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\sink.rs","byte_start":8448972,"byte_end":8448976,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2436},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8449941,"byte_end":8449946,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\split.rs","byte_start":8450685,"byte_end":8450690,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8452642,"byte_end":8452646,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454274,"byte_end":8454278,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7380},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\take.rs","byte_start":8454935,"byte_end":8454939,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7380},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write.rs","byte_start":8456496,"byte_end":8456501,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2439},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_all.rs","byte_start":8457294,"byte_end":8457302,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\io\\util\\write_buf.rs","byte_start":8458810,"byte_end":8458818,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2457},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":373},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":7113},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":7113},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":7141},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":7141},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":7144},"to":{"krate":0,"index":324}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":7144},"to":{"krate":0,"index":373}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8465629,"byte_end":8465640,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8476661,"byte_end":8476672,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":126}},"from":{"krate":15,"index":966},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8477112,"byte_end":8477123,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\listener.rs","byte_start":8477449,"byte_end":8477460,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\incoming.rs","byte_start":8478519,"byte_end":8478527,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8481336,"byte_end":8481344,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8483799,"byte_end":8483807,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2869},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8484127,"byte_end":8484136,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2876},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8484949,"byte_end":8484957,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2869},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split.rs","byte_start":8485051,"byte_end":8485060,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2876},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488148,"byte_end":8488160,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488363,"byte_end":8488375,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2892},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8488385,"byte_end":8488398,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491232,"byte_end":8491245,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2883},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8491550,"byte_end":8491564,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492247,"byte_end":8492261,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2887},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8492421,"byte_end":8492435,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2887},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8493374,"byte_end":8493387,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2883},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\split_owned.rs","byte_start":8493483,"byte_end":8493497,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2887},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8495632,"byte_end":8495641,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8520698,"byte_end":8520707,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":145}},"from":{"krate":15,"index":910},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521143,"byte_end":8521152,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521505,"byte_end":8521514,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2898},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8521828,"byte_end":8521837,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2898},"to":{"krate":0,"index":271}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\tcp\\stream.rs","byte_start":8522581,"byte_end":8522590,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8523819,"byte_end":8523828,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538489,"byte_end":8538498,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":151}},"from":{"krate":15,"index":1006},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8538934,"byte_end":8538943,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":1959}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\socket.rs","byte_start":8539263,"byte_end":8539272,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3025},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541586,"byte_end":8541598,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3037},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8541801,"byte_end":8541813,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3037},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8542340,"byte_end":8542348,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8543980,"byte_end":8543988,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545308,"byte_end":8545316,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3027},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\net\\udp\\split.rs","byte_start":8545407,"byte_end":8545415,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":1943}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\loom\\std\\unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8545628,"byte_end":8545634,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3056},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8546591,"byte_end":8546597,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3056},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\either.rs","byte_start":8546811,"byte_end":8546817,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3056},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3083},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3083},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3087},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":197}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\park\\mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":198}},"from":{"krate":5,"index":4174},"to":{"krate":0,"index":558}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8548943,"byte_end":8548957,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8552496,"byte_end":8552501,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3219},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8553188,"byte_end":8553202,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554089,"byte_end":8554103,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3184},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554269,"byte_end":8554276,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554734,"byte_end":8554741,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3690},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8554909,"byte_end":8554912,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":5,"index":4174},"to":{"krate":0,"index":3654}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\basic_scheduler.rs","byte_start":8556010,"byte_end":8556016,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3193},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8563699,"byte_end":8563705,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8563730,"byte_end":8563736,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3284},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8564095,"byte_end":8564099,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\core.rs","byte_start":8564877,"byte_end":8564881,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8571263,"byte_end":8571272,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574351,"byte_end":8574360,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3699},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574603,"byte_end":8574612,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3699},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574889,"byte_end":8574898,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3699},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\error.rs","byte_start":8574932,"byte_end":8574937,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":1,"index":2667},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8575615,"byte_end":8575622,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8576099,"byte_end":8576106,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\harness.rs","byte_start":8578277,"byte_end":8578282,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3396},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590586,"byte_end":8590596,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590633,"byte_end":8590643,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590659,"byte_end":8590669,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590845,"byte_end":8590855,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8590882,"byte_end":8590892,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8592118,"byte_end":8592128,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\join.rs","byte_start":8592394,"byte_end":8592404,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8593651,"byte_end":8593658,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8595189,"byte_end":8595196,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\raw.rs","byte_start":8595286,"byte_end":8595293,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8597975,"byte_end":8597980,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8606836,"byte_end":8606844,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8608721,"byte_end":8608726,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3518},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\state.rs","byte_start":8608885,"byte_end":8608893,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3705},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\waker.rs","byte_start":8610711,"byte_end":8610719,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3602},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557029,"byte_end":8557033,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557064,"byte_end":8557068,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557205,"byte_end":8557213,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557254,"byte_end":8557262,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557387,"byte_end":8557391,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":3654}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8557394,"byte_end":8557399,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":3654}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8559186,"byte_end":8559190,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560082,"byte_end":8560086,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560255,"byte_end":8560263,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560549,"byte_end":8560553,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560793,"byte_end":8560797,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8560949,"byte_end":8560957,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3644},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\task\\mod.rs","byte_start":8561173,"byte_end":8561177,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3636},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\blocking\\mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":154847,"byte_end":154853,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164213,"byte_end":164228,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164376,"byte_end":164391,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\handle.rs","byte_start":164549,"byte_end":164564,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\shell.rs","byte_start":166853,"byte_end":166858,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\shell.rs","byte_start":167464,"byte_end":167470,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3789},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\spawner.rs","byte_start":168067,"byte_end":168074,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\spawner.rs","byte_start":168317,"byte_end":168324,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\runtime\\mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":172927,"byte_end":172933,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":174474,"byte_end":174484,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":175331,"byte_end":175347,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":175479,"byte_end":175495,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3841},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\coop.rs","byte_start":177235,"byte_end":177241,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8629573,"byte_end":8629580,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\barrier.rs","byte_start":8632860,"byte_end":8632877,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643444,"byte_end":8643450,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3930},"to":{"krate":2,"index":1946}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643577,"byte_end":8643583,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3930},"to":{"krate":2,"index":1946}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643744,"byte_end":8643748,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8643818,"byte_end":8643822,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646596,"byte_end":8646602,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646639,"byte_end":8646645,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646683,"byte_end":8646691,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646728,"byte_end":8646736,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8646752,"byte_end":8646758,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652394,"byte_end":8652398,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652790,"byte_end":8652796,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8652976,"byte_end":8652982,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8653136,"byte_end":8653144,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8658009,"byte_end":8658017,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8660835,"byte_end":8660840,"line_start":857,"line_end":857,"column_start":30,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3986},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8664712,"byte_end":8664720,"line_start":980,"line_end":980,"column_start":18,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8665904,"byte_end":8665908,"line_start":1020,"line_end":1020,"column_start":12,"column_end":16},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8666750,"byte_end":8666754,"line_start":1050,"line_end":1050,"column_start":23,"column_end":27},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8669532,"byte_end":8669536,"line_start":1138,"line_end":1138,"column_start":21,"column_end":25},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3924},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670334,"byte_end":8670340,"line_start":1167,"line_end":1167,"column_start":35,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3915},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670755,"byte_end":8670761,"line_start":1184,"line_end":1184,"column_start":24,"column_end":30},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3890},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8670905,"byte_end":8670913,"line_start":1190,"line_end":1190,"column_start":24,"column_end":32},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3893},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671048,"byte_end":8671057,"line_start":1196,"line_end":1196,"column_start":13,"column_end":22},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671230,"byte_end":8671239,"line_start":1205,"line_end":1205,"column_start":22,"column_end":31},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671530,"byte_end":8671539,"line_start":1215,"line_end":1215,"column_start":23,"column_end":32},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671812,"byte_end":8671821,"line_start":1224,"line_end":1224,"column_start":28,"column_end":37},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5255},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8671848,"byte_end":8671860,"line_start":1226,"line_end":1226,"column_start":23,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5267},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\broadcast.rs","byte_start":8672202,"byte_end":8672214,"line_start":1236,"line_end":1236,"column_start":28,"column_end":40},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5267},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8678523,"byte_end":8678528,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8688510,"byte_end":8688516,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\block.rs","byte_start":8688998,"byte_end":8689004,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4082},"to":{"krate":2,"index":2310}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689642,"byte_end":8689648,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8689780,"byte_end":8689786,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8690193,"byte_end":8690201,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4145},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8691973,"byte_end":8691981,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694409,"byte_end":8694417,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4145},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\bounded.rs","byte_start":8694673,"byte_end":8694679,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706069,"byte_end":8706071,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4210},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706472,"byte_end":8706474,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8706781,"byte_end":8706790,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5298},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8707052,"byte_end":8707064,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5305},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8708849,"byte_end":8708853,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4243},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709486,"byte_end":8709494,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4255},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709760,"byte_end":8709764,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4243},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8709813,"byte_end":8709817,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4243},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8710296,"byte_end":8710298,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8710997,"byte_end":8710999,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711147,"byte_end":8711149,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711327,"byte_end":8711329,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4210},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8711729,"byte_end":8711731,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4210},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8712258,"byte_end":8712260,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8715380,"byte_end":8715382,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8715818,"byte_end":8715822,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8716286,"byte_end":8716290,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4243},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8716839,"byte_end":8716851,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5285},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\chan.rs","byte_start":8718511,"byte_end":8718522,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":4233}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8721266,"byte_end":8721268,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8726972,"byte_end":8726974,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4368},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8727251,"byte_end":8727253,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\list.rs","byte_start":8730652,"byte_end":8730654,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731328,"byte_end":8731343,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4408},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731484,"byte_end":8731499,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4408},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8731957,"byte_end":8731974,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4417},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8732952,"byte_end":8732969,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\unbounded.rs","byte_start":8735624,"byte_end":8735639,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736749,"byte_end":8736758,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5298},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8736918,"byte_end":8736927,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5298},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737413,"byte_end":8737425,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5305},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737458,"byte_end":8737470,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":5305},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8737810,"byte_end":8737822,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5305},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738051,"byte_end":8738060,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738190,"byte_end":8738199,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5316},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8738685,"byte_end":8738697,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5321},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739003,"byte_end":8739015,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5321},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739172,"byte_end":8739183,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739282,"byte_end":8739293,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5331},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739423,"byte_end":8739434,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5331},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739938,"byte_end":8739954,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5341},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mpsc\\error.rs","byte_start":8739991,"byte_end":8740007,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5341},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746306,"byte_end":8746311,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746365,"byte_end":8746370,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746424,"byte_end":8746434,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746499,"byte_end":8746514,"line_start":160,"line_end":160,"column_start":25,"column_end":40},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746801,"byte_end":8746813,"line_start":170,"line_end":170,"column_start":23,"column_end":35},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5352},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8746950,"byte_end":8746962,"line_start":176,"line_end":176,"column_start":16,"column_end":28},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5352},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8747770,"byte_end":8747775,"line_start":202,"line_end":202,"column_start":17,"column_end":22},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752348,"byte_end":8752353,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752437,"byte_end":8752442,"line_start":366,"line_end":366,"column_start":21,"column_end":26},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752566,"byte_end":8752571,"line_start":375,"line_end":375,"column_start":29,"column_end":34},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4482},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8752966,"byte_end":8752976,"line_start":391,"line_end":391,"column_start":26,"column_end":36},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753077,"byte_end":8753087,"line_start":397,"line_end":397,"column_start":27,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753234,"byte_end":8753244,"line_start":404,"line_end":404,"column_start":30,"column_end":40},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753401,"byte_end":8753411,"line_start":410,"line_end":410,"column_start":45,"column_end":55},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753577,"byte_end":8753587,"line_start":416,"line_end":416,"column_start":49,"column_end":59},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4486},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753765,"byte_end":8753780,"line_start":424,"line_end":424,"column_start":26,"column_end":41},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8753877,"byte_end":8753892,"line_start":430,"line_end":430,"column_start":27,"column_end":42},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754035,"byte_end":8754050,"line_start":437,"line_end":437,"column_start":30,"column_end":45},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754203,"byte_end":8754218,"line_start":443,"line_end":443,"column_start":45,"column_end":60},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\mutex.rs","byte_start":8754380,"byte_end":8754395,"line_start":449,"line_end":449,"column_start":49,"column_end":64},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4490},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758359,"byte_end":8758367,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758400,"byte_end":8758408,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8758671,"byte_end":8758677,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8762685,"byte_end":8762691,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5357},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8764429,"byte_end":8764437,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8764947,"byte_end":8764955,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8769785,"byte_end":8769793,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5369},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\notify.rs","byte_start":8772751,"byte_end":8772757,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5362},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774633,"byte_end":8774642,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5398},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774804,"byte_end":8774813,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5398},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8774882,"byte_end":8774894,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8775193,"byte_end":8775205,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5410},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8777016,"byte_end":8777022,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783323,"byte_end":8783329,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5386},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8783468,"byte_end":8783476,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8787867,"byte_end":8787875,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8788022,"byte_end":8788030,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8788493,"byte_end":8788498,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792870,"byte_end":8792875,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792912,"byte_end":8792917,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8792942,"byte_end":8792947,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8793316,"byte_end":8793321,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4644},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8793716,"byte_end":8793721,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\oneshot.rs","byte_start":8795434,"byte_end":8795439,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5423},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8798917,"byte_end":8798926,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8808847,"byte_end":8808856,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4757},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8809057,"byte_end":8809063,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8809929,"byte_end":8809936,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8810614,"byte_end":8810621,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8811420,"byte_end":8811427,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813069,"byte_end":8813076,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813123,"byte_end":8813135,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813228,"byte_end":8813240,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5436},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813384,"byte_end":8813396,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5436},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8813443,"byte_end":8813458,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814080,"byte_end":8814095,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5429},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814381,"byte_end":8814396,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5429},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\batch_semaphore.rs","byte_start":8814489,"byte_end":8814495,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":778}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8819764,"byte_end":8819773,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8835967,"byte_end":8835976,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4851},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836055,"byte_end":8836064,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4851},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836442,"byte_end":8836451,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4851},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836476,"byte_end":8836485,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4851},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8836523,"byte_end":8836529,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8842935,"byte_end":8842941,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5441},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843014,"byte_end":8843020,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5441},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843442,"byte_end":8843454,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843634,"byte_end":8843646,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5446},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843790,"byte_end":8843802,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5446},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8843849,"byte_end":8843864,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844394,"byte_end":8844409,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5451},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844695,"byte_end":8844710,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5451},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8844748,"byte_end":8844754,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8850241,"byte_end":8850249,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8853912,"byte_end":8853920,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5464},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore_ll.rs","byte_start":8854273,"byte_end":8854284,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8857013,"byte_end":8857022,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859117,"byte_end":8859132,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859377,"byte_end":8859397,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859651,"byte_end":8859666,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5494},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\semaphore.rs","byte_start":8859774,"byte_end":8859794,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5501},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8863148,"byte_end":8863163,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866581,"byte_end":8866596,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866776,"byte_end":8866791,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8866967,"byte_end":8866982,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8867446,"byte_end":8867462,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871056,"byte_end":8871072,"line_start":349,"line_end":349,"column_start":36,"column_end":52},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871252,"byte_end":8871268,"line_start":358,"line_end":358,"column_start":38,"column_end":54},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8871444,"byte_end":8871460,"line_start":367,"line_end":367,"column_start":30,"column_end":46},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872536,"byte_end":8872542,"line_start":402,"line_end":402,"column_start":25,"column_end":31},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872596,"byte_end":8872602,"line_start":403,"line_end":403,"column_start":25,"column_end":31},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872836,"byte_end":8872851,"line_start":407,"line_end":407,"column_start":25,"column_end":40},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872909,"byte_end":8872924,"line_start":408,"line_end":408,"column_start":25,"column_end":40},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8872989,"byte_end":8873005,"line_start":409,"line_end":409,"column_start":25,"column_end":41},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873318,"byte_end":8873334,"line_start":414,"line_end":414,"column_start":25,"column_end":41},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8873392,"byte_end":8873398,"line_start":416,"line_end":416,"column_start":17,"column_end":23},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876586,"byte_end":8876601,"line_start":524,"line_end":524,"column_start":32,"column_end":47},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5001},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876732,"byte_end":8876748,"line_start":532,"line_end":532,"column_start":32,"column_end":48},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8876882,"byte_end":8876898,"line_start":540,"line_end":540,"column_start":35,"column_end":51},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8877012,"byte_end":8877018,"line_start":546,"line_end":546,"column_start":21,"column_end":27},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\rwlock.rs","byte_start":8877110,"byte_end":8877116,"line_start":552,"line_end":552,"column_start":29,"column_end":35},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8883391,"byte_end":8883402,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889329,"byte_end":8889340,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5112},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889426,"byte_end":8889437,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5112},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889570,"byte_end":8889581,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5112},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889606,"byte_end":8889617,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5112},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\task\\atomic_waker.rs","byte_start":8889713,"byte_end":8889718,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":459}},"from":{"krate":2,"index":9146},"to":{"krate":0,"index":5135}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893259,"byte_end":8893268,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5539},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8893448,"byte_end":8893457,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5539},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8895616,"byte_end":8895624,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8896896,"byte_end":8896904,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898537,"byte_end":8898545,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5518},"to":{"krate":2,"index":1732}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898848,"byte_end":8898856,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5518},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8898970,"byte_end":8898976,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900511,"byte_end":8900517,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5525},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900756,"byte_end":8900759,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5531},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8900900,"byte_end":8900906,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5545},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901008,"byte_end":8901015,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901238,"byte_end":8901245,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":1760}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901362,"byte_end":8901369,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":1765}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901399,"byte_end":8901406,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":6736}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\sync\\watch.rs","byte_start":8901553,"byte_end":8901560,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\task\\yield_now.rs","byte_start":8914765,"byte_end":8914773,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\clock.rs","byte_start":8919751,"byte_end":8919756,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8930354,"byte_end":8930364,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948358,"byte_end":8948368,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":2075}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948396,"byte_end":8948406,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6079},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8948935,"byte_end":8948940,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6104},"to":{"krate":0,"index":6023}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951067,"byte_end":8951072,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6104},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951202,"byte_end":8951205,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay_queue.rs","byte_start":8951292,"byte_end":8951299,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8953837,"byte_end":8953842,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\delay.rs","byte_start":8954820,"byte_end":8954825,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6121},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8968495,"byte_end":8968506,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8970484,"byte_end":8970502,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6129},"to":{"krate":2,"index":5282}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\atomic_stack.rs","byte_start":8971098,"byte_end":8971116,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6129},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8975354,"byte_end":8975359,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982027,"byte_end":8982032,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6133},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982240,"byte_end":8982245,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6133},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\entry.rs","byte_start":8982270,"byte_end":8982275,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6133},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\handle.rs","byte_start":8982652,"byte_end":8982658,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\handle.rs","byte_start":8983303,"byte_end":8983309,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6158},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\registration.rs","byte_start":8983754,"byte_end":8983766,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\registration.rs","byte_start":8984676,"byte_end":8984688,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6162},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\stack.rs","byte_start":8984972,"byte_end":8984977,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6166},"to":{"krate":2,"index":2022}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\stack.rs","byte_start":8985068,"byte_end":8985073,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6166},"to":{"krate":0,"index":6023}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8959790,"byte_end":8959796,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8963493,"byte_end":8963499,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6170},"to":{"krate":0,"index":551}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8966072,"byte_end":8966078,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6170},"to":{"krate":2,"index":2253}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8966194,"byte_end":8966199,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\driver\\mod.rs","byte_start":8967816,"byte_end":8967821,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5836},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8989395,"byte_end":8989400,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990767,"byte_end":8990772,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6180},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\error.rs","byte_start":8990799,"byte_end":8990804,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6180},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8991576,"byte_end":8991583,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995357,"byte_end":8995364,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995493,"byte_end":8995500,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":509}},"from":{"krate":1,"index":8007},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995615,"byte_end":8995622,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2099}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995787,"byte_end":8995794,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2130}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8995899,"byte_end":8995906,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2104}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996047,"byte_end":8996054,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2104}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996215,"byte_end":8996222,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":2134}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\instant.rs","byte_start":8996329,"byte_end":8996336,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6200},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\interval.rs","byte_start":9000218,"byte_end":9000226,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004861,"byte_end":9004868,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9004997,"byte_end":9005004,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9005542,"byte_end":9005549,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6546},"to":{"krate":2,"index":8961}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006127,"byte_end":9006134,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":6553}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006278,"byte_end":9006285,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6228},"to":{"krate":1,"index":1728}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\timeout.rs","byte_start":9006322,"byte_end":9006327,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":522}},"from":{"krate":1,"index":2667},"to":{"krate":2,"index":1952}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\level.rs","byte_start":9016231,"byte_end":9016236,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\level.rs","byte_start":9020988,"byte_end":9020993,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5996},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\stack.rs","byte_start":9022109,"byte_end":9022116,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":6023}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\mod.rs","byte_start":9008052,"byte_end":9008057,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\time\\wheel\\mod.rs","byte_start":9013765,"byte_end":9013769,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\bit.rs","byte_start":9022877,"byte_end":9022881,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\bit.rs","byte_start":9024355,"byte_end":9024359,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6451},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\addr.rs","byte_start":9031578,"byte_end":9031585,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\entry.rs","byte_start":9034220,"byte_end":9034227,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":6306}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\generation.rs","byte_start":9034614,"byte_end":9034624,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9035763,"byte_end":9035768,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9036110,"byte_end":9036116,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9040068,"byte_end":9040073,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6329},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\page.rs","byte_start":9040379,"byte_end":9040385,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6331},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\shard.rs","byte_start":9042528,"byte_end":9042533,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\shard.rs","byte_start":9044212,"byte_end":9044217,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\slot.rs","byte_start":9044594,"byte_end":9044598,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\stack.rs","byte_start":9045569,"byte_end":9045582,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\stack.rs","byte_start":9046410,"byte_end":9046423,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6419},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9025957,"byte_end":9025961,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6434},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9025998,"byte_end":9026002,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6434},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9026025,"byte_end":9026029,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\slab\\mod.rs","byte_start":9027544,"byte_end":9027548,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6434},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":181548,"byte_end":181558,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":181617,"byte_end":181627,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182916,"byte_end":182924,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2034}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":182961,"byte_end":182969,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2046}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":183023,"byte_end":183033,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":186037,"byte_end":186047,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":186292,"byte_end":186302,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":187385,"byte_end":187393,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\linked_list.rs","byte_start":187592,"byte_end":187600,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6548}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\rand.rs","byte_start":197672,"byte_end":197680,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\wake.rs","byte_start":199220,"byte_end":199224,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\wake.rs","byte_start":199227,"byte_end":199231,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":825}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\wake.rs","byte_start":199542,"byte_end":199550,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6509},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203516,"byte_end":203524,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203774,"byte_end":203782,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6518},"to":{"krate":2,"index":2229}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":203887,"byte_end":203895,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6518},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Eduardo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-0.2.24\\src\\util\\intrusive_double_linked_list.rs","byte_start":204204,"byte_end":204214,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6527},"to":{"krate":4294967295,"index":4294967295}}]}